{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Client/.fable/fable-library.3.1.5/Util.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Types.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Option.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Numeric.js","webpack:///./src/Client/.fable/fable-library.3.1.5/lib/big.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Decimal.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Int32.js","webpack:///./src/Client/.fable/fable-library.3.1.5/lib/long.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Seq.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Reflection.js","webpack:///./src/Client/.fable/fable-library.3.1.5/MapUtil.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Date.js","webpack:///./src/Client/.fable/fable-library.3.1.5/RegExp.js","webpack:///./src/Client/.fable/fable-library.3.1.5/String.js","webpack:///./src/Client/.fable/fable-library.3.1.5/MutableMap.js","webpack:///./src/Client/.fable/fable-library.3.1.5/MutableSet.js","webpack:///./src/Client/.fable/fable-library.3.1.5/List.js","webpack:///./src/Client/.fable/Fable.ReactLeaflet.1.0.0/ReactLeaflet.fs.js","webpack:///./src/Client/.fable/fable-library.3.1.5/FSharp.Collections.js","webpack:///./src/Client/.fable/fable-library.3.1.5/System.Text.js","webpack:///./src/Client/.fable/fable-library.3.1.5/FSharp.Core.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Map.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Double.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Set.js","webpack:///./src/Client/Data.fs.js","webpack:///./src/Client/.fable/fable-library.3.1.5/AsyncBuilder.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Async.js","webpack:///./src/Client/.fable/Fable.Elmish.3.1.0/prelude.fs.js","webpack:///./src/Client/.fable/Fable.Elmish.3.1.0/cmd.fs.js","webpack:///./src/Client/.fable/Fable.React.7.2.0/Fable.React.Props.fs.js","webpack:///./src/Client/.fable/Fulma.2.10.0/Common.fs.js","webpack:///./src/Client/.fable/Fulma.2.10.0/Elements/Button.fs.js","webpack:///./src/Client/.fable/Fulma.2.10.0/Components/Navbar.fs.js","webpack:///./src/Client/.fable/Fulma.2.10.0/Elements/Heading.fs.js","webpack:///./src/Client/Config.fs.js","webpack:///./src/Client/.fable/Fulma.2.10.0/Layouts/Columns.fs.js","webpack:///./src/Client/.fable/Fulma.2.10.0/Layouts/Column.fs.js","webpack:///./src/Client/.fable/Fulma.2.10.0/Elements/Content.fs.js","webpack:///./src/Client/.fable/Fable.Elmish.3.1.0/ring.fs.js","webpack:///./src/Client/.fable/fable-library.3.1.5/Array.js","webpack:///./src/Client/.fable/Fable.Elmish.3.1.0/program.fs.js","webpack:///./src/Client/.fable/Fable.Elmish.React.3.0.1/common.fs.js","webpack:///./src/Client/.fable/Fable.Elmish.React.3.0.1/react.fs.js","webpack:///./src/Client/Client.fs.js","webpack:///./src/Client/.fable/Fulma.2.10.0/Layouts/Footer.fs.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isArrayLike","x","Array","isArray","ArrayBuffer","isView","isHashable","GetHashCode","sameConstructor","y","getPrototypeOf","constructor","padWithZeros","str","toString","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","idMap","has","set","count","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","arrayHash","structuralHash","Date","getTime","dateHash","values","map","v","id","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","comparePrimitives","compareArrays","comp","compareArraysWith","compare","CompareTo","isComparable","compareObjects","max","comparer","createAtom","atom","isSetter","WeakMap","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","Error","curry","checkArity","args1","args2","undefined","concat","partialApply","args","seqToString","self","callStack","iterator","cons","entries","join","String","compareList","other","tail","res","head","List","this","cur","next","done","from","Union","cases","tag","fields","withParens","field","indexOf","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","Record","FSharpRef","contentsOrGetter","setter","Some","some","toArray","opt","defaultArg","defaultValue","mapping","binder","symbol","isNumeric","multiply","toFixed","dp","toPrecision","sd","toExponential","toHex","Number","P","_this","mul","e","cmp","NAME","INVALID","INVALID_DP","NUMERIC","parse","nl","test","charAt","replace","search","substring","round","Big","DP","RM","rm","more","xc","isZero","findIndex","xci","idx","unshift","pop","stringify","k","z","NE","PE","abs","isneg","yc","Math","div","a","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","reverse","mod","ygtx","times","add","pow","one","sqrt","half","valueOf","toJSON","_Big_","normalize","version","Decimal","NumberStyles","getRange","unsigned","bitsize","isValid","style","exec","prefix","digits","getInvalidDigits","AllowHexSpecifier","getRadix","regexMatch","sign","validResponse","tryParse","defValue","contents","parseInt","isNaN","umin","umax","min","_a","wasm","WebAssembly","Instance","Module","Uint8Array","Long","low","high","isLong","obj","substr","fromBytes","toBytes","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","RangeError","radixToPower","size","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isNegative","radixLong","divide","rem1","subtract","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","toBytesLE","toBytesBE","bytes","fromBytesLE","fromBytesBE","Enumerator","iter","current","getEnumerator","GetEnumerator","toIterator","en","hasNext","__failIfNone","Seq","makeSeq","isArrayOrBufferView","xs","append","ys","delay","firstDone","iters","unfold","_b","output","innerIter","hasFinished","collect","empty","singleton","filter","fold","acc","tryHead","iterate","_","iterateIndexed","mapIndexed","compareFn","Compare","minBy","skip","sumBy","adder","Add","GetZero","take","truncate","fst","CaseInfo","declaringType","TypeInfo","fullname","generics","construct","parent","enumCases","fullName","gen","getHashCode","getGenerics","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","class_type","record_type","union_type","caseNames","tuple_type","lambda_type","argType","returnType","option_type","generic","list_type","obj_type","unit_type","string_type","bool_type","int32_type","float64_type","endsWith","assertUnion","CaseRules","dashify","separator","toLowerCase","changeCase","caseRule","toUpperCase","keyValueList","definedCaseRule","fail","kvPair","assign","tryGetValue","addToDict","dict","getItemFromDict","dateOffsetToString","isMinus","minutes","dateToHalfUTCString","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","_c","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","_provider","escape","fsFormatRegExp","formatRegExp","isLessThan","numericCompare","printf","input","cont","createPrinter","padRef","strCopy","arg","formatOnce","continuePrint","toText","formatReplacement","flags","padLength","precision","dateToString","zeroFlag","minusFlag","ch","padLeft","str2","pattern","intPart","decimalPart","delimiter","isRight","Dictionary","pairs","this$","hashMap","Map","enumerator","pair","Dictionary__Add_5BDDA1","Dispose","item","Dictionary__Clear","matchValue","Dictionary__TryFind_2B595","array","arrayIndex","Dictionary__get_Count","Dictionary__Remove_2B595","Dictionary__get_Item_2B595","Dictionary__TryFindIndex_2B595","Dictionary__ContainsKey_2B595","Dictionary__set_Item_5BDDA1","thisArg","outArg","clear","msg","HashSet","items","HashSet__Add_2B595","HashSet__Clear","HashSet__Contains_2B595","HashSet__get_Count","HashSet__Remove_2B595","HashSet_$ctor_Z6150332D","HashSet__TryFindIndex_2B595","v_1","foldIndexed","state","f_mut","i_mut","acc_mut","_arg1_mut","_arg1","foldIndexedAux","state_mut","xs_mut","List_1","ofSeq","fold_1","collect_1","unitVar0","ofArrayWithTail","tail_1","col","ofArray","tryPickIndexed","tryPickIndexedAux","tryFindIndexed","findIndexed","value_1","tryItem","choose","contains","list","loop","groupBy","projection","key_1","PolylineProps","CircleProps","MapProps","CircleProps_Custom_433E080","ComparisonIdentity_Structural","e1","e2","x_1","LanguagePrimitives_FastGenericComparer","MapTreeLeaf$2","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","m_mut","m2","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","value_2","matchValue_1","matchValue_2","matchValue_3","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","k_mut","MapTreeModule_iter","MapTreeModule_iterOpt","MapTreeModule_toList","m_1_mut","MapTreeModule_ofArray","arr","forLoopVar","MapTreeModule_ofSeq","tupledArg","MapTreeModule_ofList","ie","e_mut","patternInput","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","stack","started","MapTreeModule_collapseLHS","stack_mut","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","combineHash","activePatternResult4293","FSharpMap__ComputeHashCode","that","m1","e1c","e2c","map_2","kv","cur1","cur2","iter1","iter2","compareWith","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","MapTreeModule_copyToArray","FSharpMap__get_Count","iterate_1","FSharpMap_$ctor","FSharpMap_Create","MapTreeModule_find","MapTreeModule_mem","tryFind","table","FSharpMap__TryFind","elements","toList","distinct","set$","empty_1","singleton_1","CancellationToken","cancelled","_id","_cancelled","_listeners","listener","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","onSuccess","ex","protectedReturn","computation1","computation2","Bind","generator","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","Log_onError","text","console","error","Cmd_exec","dispatch","cmd","Cmd_none","Cmd_batch","cmds","lists","DOMAttr","HTMLAttr","CSSProp","Reflection_getCaseName","case$","Reflection_getCaseTag","Screen","Screen_ToString_2D2414B4","screen","Color_IColor","Color_ofColor","level","TextSize_Option_ToString_Z2E0B9453","TextAlignment_Option","Modifier_IModifier","Modifier_parseModifiers","options","option","screen_3","screen_7","typ","amount","Modifier_ofText","warn","display","Display_toDisplayOnlyClass","Modifier_ofInvisible","Modifier_ofInvisibleOnly","Modifier_ofHidden","Modifier_ofHiddenOnly","Modifier_ofBackground","Common_GenericOptions","Props","Classes","RemovedClasses","Common_GenericOptions_Parse_9AE2F7C","parser","baseClass","baseProps","result_1","Common_GenericOptions__AddClass_Z721C83C5","Common_GenericOptions__AddProps_416C4D0B","Common_GenericOptions__AddProp_7BFEDA81","prop","props","cl","Common_GenericOptions__AddCaseName_1505","Common_GenericOptions__AddModifiers_5BB435D5","modifiers","Common_GenericOptions__ToReactElement_Z6D3CD4B7","el","children","children_1","cls","Common_parseOptions","Option","btnView","element","pattern_matching_result","Item_item","Item_div","react","Brand_brand","Start_start","Start_div","title","footer","ISize_ToString_2283FB3F","columns","screen_4","size_4","x_2","arg30","arg20","arg10","screen_5","size_5","x_3","arg30_1","arg20_1","arg10_1","size_3","y_1","props_1","suffix","column","className","ofWidth","RingState$1","RingBuffer$1","target","targetIndex","start","fill","RingBuffer$1__Push_2B595","__","wix_1","rix","items_1","wix$0027","ix","first","step","last","rangeNumber","RingBuffer$1__doubleSize","wix","Program$4","init","update","subscribe","view","setState","syncDispatch","ProgramModule_withSetState","program","ProgramModule_view","ProgramModule_runWith","model","rb","reentered","nextMsg","msg_1","patternInput_1","model$0027","ex_1","rix$0027","RingBuffer$1__Pop","ex_3","ex_2","LazyProps$1","render","equal","Components_LazyView$1","nextProps","_nextState","Component","Common_lazyView2With","Program_Internal_withReactBatchedUsing","lazyView2With","placeholderId","lastRequest","cancelAnimationFrame","requestAnimationFrame","react$002Ddom","document","getElementById","USE_ARROWS","animationActive","posOnLine","fraction","x1","y1","x2","y2","x1_1","y1_1","arrowPolyLine","headlen","fromx","fromy","tox","toy","arrowy","arrowx","angle","atan2","cos","sin","Marker","Latitude","Longitude","Ident","Title","Weight","Year","Properties","Marker$reflection","PropertyDef","PropertyDef$reflection","grey","propertiesDef","tryInt","tryFloat","tryParse_1","split","sep","ofSeq_1","s_1","trim","splitters","removeEmpty","arguments","splits","reg","RegExp","index","lastIndex","split_1","lines","map_1","s_2","mkData","li","yMin","yMax","x_6","s_4","lnglat","lng","lat","year","loc","weight","arg50","arg40","ident","y_3","defProp","properties","parse_1","xs_1","sortBy","x_4","s_3","x_5","y_2","Page","Page$reflection","Animation","From","Range$","End","Step","Interval","Range","Animation$reflection","MapInfo","Zoom","Center","MapInfo$reflection","Msg","Msg$reflection","Model","RawData","Markers","Edges","Model$reflection","GraphType","GraphType$reflection","toGraph","nodeLabels","headerCode","footerCode","edges","label_1","n_2","n_3","tupledArg_1","g_1","tuple_1","n_4","tooltip","n_1","y_4","label","node","tuple","y_5","tupledArg_2","loadData","nodes","merge","g","min_1","x_7","x_8","tupledArg_7","g_3","tuple_2","tupledArg_6","x_14","y_7","tupledArg_4","tupledArg_5","x_13","y_6","tupledArg_3","_arg5","x_11","_arg2","x_10","mapIndexed_1","x_9","x_12","x_15","y_8","data_1","initAnimation","m_1","max_1","setAnimationTick","setInterval","currentModel","inputRecord","a_1","a$0027","components","safeComponents","href","button","txt","onClick","mapRef","getColor","getTitle","opacity","zoomDynSize","getNumberOfLines","maxNumberOfLines","minNumberOfLines","markers","opacity_1","dist","mapInfo","center","info","updateInfo","props_25","css","navbar","Option_1","children_3","_arg2_1","columns_1","Option_2","_arg3","_arg4","_arg1_1","onChange","ev","rows","cols","linStep","r_2","max_2","extraProps","props_9","Circle","Popup","Tooltip","sticky","filter_1","props_19","props_21","opacity_2","extraProps_1","p_2","Polyline","x_16","x_17","y_9","x_19","y_11","y_12","x_20","x_21","y_13","x_22","y_14","x_23","y_15","x_24","y_16","viewport","zoom","m_4","x_25","x_26","x_27","Map$","append_1","TileLayer","attribution","url","content","Option_3","footer_1","main","toConsole","ProgramModule_run","Program_withReactBatched","dispatch_1"],"mappings":"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AK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,MACznC,IAAI7R,QAEb,MAAOwL,IAaA,SAASsG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","file":"app.6e0f5eb64906911f42b5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([213,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    toJSON() { return Array.from(this); }\n    toString() { return seqToString(this); }\n    GetHashCode() { return combineHashCodes(Array.from(this).map(structuralHash)); }\n    Equals(other) { return compareList(this, other) === 0; }\n    CompareTo(other) { return compareList(this, other); }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        if (this.fields.length === 0) {\n            return this.name;\n        }\n        else {\n            let fields = \"\";\n            let withParens = true;\n            if (this.fields.length === 1) {\n                const field = toString(this.fields[0]);\n                withParens = field.indexOf(\" \") >= 0;\n                fields = field;\n            }\n            else {\n                fields = this.fields.map((x) => toString(x)).join(\", \");\n            }\n            return this.name + (withParens ? \" (\" : \" \") + fields + (withParens ? \")\" : \"\");\n        }\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            const isZero = xc.findIndex((xci, idx) => idx >= i && xci > 0) < 0;\n            more = more || !isZero;\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal.js\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long.js\";\nimport { some, value } from \"./Option.js\";\nimport { compare, equals } from \"./Util.js\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nclass Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    [Symbol.iterator]() { return new Seq(this.f); }\n    next() {\n        var _a;\n        this.iter = (_a = this.iter) !== null && _a !== void 0 ? _a : this.f();\n        return this.iter.next();\n    }\n    toString() {\n        return \"seq [\" + Array.from(this).join(\"; \") + \"]\";\n    }\n}\nfunction makeSeq(f) {\n    return new Seq(f);\n}\nfunction isArrayOrBufferView(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs);\n}\nexport function ofArray(xs) {\n    if (Array.isArray(xs)) {\n        return delay(() => xs);\n    }\n    else {\n        return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n    }\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output;\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null ? [output, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    let cur1;\n    let cur2;\n    let c = 0;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        c = f(cur1.value, cur2.value);\n        if (c !== 0) {\n            break;\n        }\n    }\n    return (c !== 0) ? c : (cur1.done && !cur2.done) ? -1 : (!cur1.done && cur2.done) ? 1 : 0;\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return delay(() => []);\n}\nexport function singleton(y) {\n    return delay(() => [y]);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            try {\n                return empty();\n            }\n            finally {\n                finalFn();\n            }\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const ar2 = isArrayOrBufferView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (isArrayOrBufferView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return isArrayOrBufferView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    const firstNum = first.charCodeAt(0);\n    const lastNum = last.charCodeAt(0);\n    return delay(() => unfold((x) => x <= lastNum ? [String.fromCharCode(x), x + 1] : undefined, firstNum));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next() {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next() {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next() {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n            // * match: matched substring\n            // * p1, p2, ...: nth capture group string\n            // * offset: offset of matched substring\n            // * string: whole string examined\n            // * groups: named capturing groups\n            //           ONLY if regex contains a named capture group AND browser supports named groups\n            // -> last element can be groups OR input string\n            // -> check if last element is string\n            const withGroups = typeof arguments[len - 1] !== \"string\";\n            let pLast = withGroups ? len - 3 : len - 2;\n            for (let i = 0; i < pLast; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[pLast++];\n            match.input = arguments[pLast++];\n            if (withGroups) {\n                match.groups = arguments[pLast];\n            }\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        replacement =\n            replacement\n                // $0 doesn't work with JS regex, see #1155\n                .replace(/\\$0/g, (_s) => \"$&\")\n                // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n                .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { FSharpRef, toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(input, values) {\n    let i = 0;\n    return input.replace(interpolateRegExp, (_, prefix, flags, padLength, precision, format) => {\n        return formatReplacement(values[i++], prefix, flags, padLength, precision, format);\n    });\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, prefix, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return prefix ? prefix + rep : rep;\n}\nfunction formatOnce(str2, rep, padRef) {\n    return str2.replace(fsFormatRegExp, (match, prefix, flags, padLength, precision, format) => {\n        if (padRef.contents != null) {\n            padLength = padRef.contents;\n            padRef.contents = null;\n        }\n        else if (padLength === \"*\") {\n            if (rep < 0) {\n                throw new Error(\"Non-negative number required\");\n            }\n            padRef.contents = rep;\n            return match;\n        }\n        const once = formatReplacement(rep, prefix, flags, padLength, precision, format);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont, padRef = new FSharpRef(null)) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg, padRef);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont, padRef)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { equals } from \"./Util.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { format } from \"./String.js\";\n\nexport class Dictionary {\n    constructor(pairs, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-1\"] = 1;\n        const enumerator = getEnumerator(pairs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"Dictionary\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        let pattern_matching_result;\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return false;\n            }\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                void Dictionary__Remove_2B595(this$, item[0]);\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get size() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    clear() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return Dictionary__Remove_2B595(this$, k);\n    }\n    entries() {\n        const this$ = this;\n        return map((p) => [p[0], p[1]], this$);\n    }\n    get(k) {\n        const this$ = this;\n        return Dictionary__get_Item_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return Dictionary__ContainsKey_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((p) => p[0], this$);\n    }\n    set(k, v) {\n        const this$ = this;\n        Dictionary__set_Item_5BDDA1(this$, k, v);\n        return this$;\n    }\n    values() {\n        const this$ = this;\n        return map((p) => p[1], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((p) => {\n            f(p[1], p[0], this$);\n        }, this$);\n    }\n}\n\nexport function Dictionary$reflection(gen0, gen1) {\n    return class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\n}\n\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\n    return new Dictionary(pairs, comparer);\n}\n\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nexport function Dictionary__TryFind_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Dictionary__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function Dictionary__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function Dictionary__get_Count(this$) {\n    return sumBy((pairs) => pairs.length, this$.hashMap.values(), {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    });\n}\n\nexport function Dictionary__get_Item_2B595(this$, k) {\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\n    if (matchValue != null) {\n        return matchValue[1];\n    }\n    else {\n        throw (new Error(\"The item was not found in collection\"));\n    }\n}\n\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            const msg = format(\"An item with the same key has already been added. Key: {0}\", k);\n            throw (new Error(msg));\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__ContainsKey_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function Dictionary__Remove_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { some } from \"./Option.js\";\n\nexport class HashSet {\n    constructor(items, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-2\"] = 1;\n        const enumerator = getEnumerator(items);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                void HashSet__Add_2B595(this$.contents, enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"HashSet\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        void HashSet__Add_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, item);\n    }\n    get size() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    add(k) {\n        const this$ = this;\n        void HashSet__Add_2B595(this$, k);\n        return this$;\n    }\n    clear() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    values() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    entries() {\n        const this$ = this;\n        return map((v) => [v, v], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((x) => {\n            f(x, x, this$);\n        }, this$);\n    }\n}\n\nexport function HashSet$reflection(gen0) {\n    return class_type(\"Fable.Collections.HashSet\", [gen0], HashSet);\n}\n\nexport function HashSet_$ctor_Z6150332D(items, comparer) {\n    return new HashSet(items, comparer);\n}\n\nfunction HashSet__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((v_1) => this$.comparer.Equals(k, v_1))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nfunction HashSet__TryFind_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return some(getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]]);\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function HashSet__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function HashSet__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function HashSet__get_Count(this$) {\n    return sumBy((pairs) => pairs.length, this$.hashMap.values(), {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    });\n}\n\nexport function HashSet__Add_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return false;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push(k));\n                return true;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [k]);\n                return true;\n            }\n        }\n    }\n}\n\nexport function HashSet__Contains_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function HashSet__Remove_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { List } from \"./Types.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { FSharpRef, List as List_1 } from \"./Types.js\";\nimport { transpose as transpose_1, pairwise as pairwise_1, collect as collect_1, scanBack as scanBack_1, scan as scan_1, foldBack2 as foldBack2_1, fold2 as fold2_1, fold as fold_1, map as map_1 } from \"./Seq.js\";\nimport { uncurry, count } from \"./Util.js\";\nimport { splitInto as splitInto_1, chunkBySize as chunkBySize_1, permute as permute_1, findIndexBack as findIndexBack_1, tryFindIndexBack as tryFindIndexBack_1 } from \"./Array.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet } from \"./MapUtil.js\";\nimport { Dictionary } from \"./MutableMap.js\";\n\nexport function empty() {\n    return new List();\n}\n\nexport function singleton(x) {\n    return new List(x, empty());\n}\n\nexport function cons(x, xs) {\n    return new List(x, xs);\n}\n\nexport function head(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.head;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function tryHead(_arg1) {\n    if (_arg1.tail != null) {\n        return some(_arg1.head);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function tail(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.tail;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function last(_arg1_mut) {\n    last:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return _arg1.head;\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue last;\n            }\n        }\n        else {\n            throw (new Error(\"List was empty\"));\n        }\n        break;\n    }\n}\n\nexport function tryLast(_arg1_mut) {\n    tryLast:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return some(_arg1.head);\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue tryLast;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    else {\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1, ys_1];\n                if (matchValue[0].tail != null) {\n                    if (matchValue[1].tail != null) {\n                        const matchValue_1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n                        if (matchValue_1 === 0) {\n                            xs_1_mut = matchValue[0].tail;\n                            ys_1_mut = matchValue[1].tail;\n                            continue loop;\n                        }\n                        else {\n                            return matchValue_1 | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1].tail == null) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n                break;\n            }\n        };\n        return loop(xs, ys) | 0;\n    }\n}\n\nexport function foldIndexedAux(f_mut, i_mut, acc_mut, _arg1_mut) {\n    foldIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            f_mut = f;\n            i_mut = (i + 1);\n            acc_mut = f(i, acc, _arg1.head);\n            _arg1_mut = _arg1.tail;\n            continue foldIndexedAux;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function foldIndexed(f, state, xs) {\n    return foldIndexedAux(f, 0, state, xs);\n}\n\nexport function fold(f_mut, state_mut, xs_mut) {\n    fold:\n    while (true) {\n        const f = f_mut, state = state_mut, xs = xs_mut;\n        if (xs.tail != null) {\n            f_mut = f;\n            state_mut = f(state, xs.head);\n            xs_mut = xs.tail;\n            continue fold;\n        }\n        else {\n            return state;\n        }\n        break;\n    }\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => (new List_1(x, acc)), new List_1(), xs);\n}\n\nexport function foldBack(f, xs, state) {\n    return fold((acc, x) => f(x, acc), state, reverse(xs));\n}\n\nexport function toSeq(xs) {\n    return map_1((x) => x, xs);\n}\n\nexport function ofSeq(xs) {\n    return reverse(fold_1((acc, x) => (new List_1(x, acc)), new List_1(), xs));\n}\n\nexport function concat(lists) {\n    return reverse(fold_1((state, xs) => fold((acc, x) => (new List_1(x, acc)), state, xs), new List_1(), lists));\n}\n\nexport function foldIndexed2Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut) {\n    foldIndexed2Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y);\n                bs_mut = xs;\n                cs_mut = ys;\n                continue foldIndexed2Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed2(f, state, xs, ys) {\n    return foldIndexed2Aux(f, 0, state, xs, ys);\n}\n\nexport function fold2(f, state, xs, ys) {\n    return fold2_1(f, state, xs, ys);\n}\n\nexport function foldBack2(f, xs, ys, state) {\n    return foldBack2_1(f, xs, ys, state);\n}\n\nexport function unfold(f, state) {\n    const unfoldInner = (acc_mut, state_1_mut) => {\n        unfoldInner:\n        while (true) {\n            const acc = acc_mut, state_1 = state_1_mut;\n            const matchValue = f(state_1);\n            if (matchValue != null) {\n                acc_mut = (new List_1(matchValue[0], acc));\n                state_1_mut = matchValue[1];\n                continue unfoldInner;\n            }\n            else {\n                return reverse(acc);\n            }\n            break;\n        }\n    };\n    return unfoldInner(new List_1(), state);\n}\n\nexport function foldIndexed3Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut, ds_mut) {\n    foldIndexed3Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut, ds = ds_mut;\n        const matchValue = [bs, cs, ds];\n        let pattern_matching_result, x, xs, y, ys, z, zs;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[2].tail != null) {\n                    pattern_matching_result = 1;\n                    x = matchValue[0].head;\n                    xs = matchValue[0].tail;\n                    y = matchValue[1].head;\n                    ys = matchValue[1].tail;\n                    z = matchValue[2].head;\n                    zs = matchValue[2].tail;\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            if (matchValue[2].tail == null) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y, z);\n                bs_mut = xs;\n                cs_mut = ys;\n                ds_mut = zs;\n                continue foldIndexed3Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed3(f, seed, xs, ys, zs) {\n    return foldIndexed3Aux(f, 0, seed, xs, ys, zs);\n}\n\nexport function fold3(f, state, xs, ys, zs) {\n    return foldIndexed3((_arg1, acc, x, y, z) => f(acc, x, y, z), state, xs, ys, zs);\n}\n\nexport function scan(f, state, xs) {\n    return ofSeq(scan_1(f, state, xs));\n}\n\nexport function scanBack(f, xs, state) {\n    return ofSeq(scanBack_1(f, xs, state));\n}\n\nexport function length(xs) {\n    return fold((acc, _arg1) => (acc + 1), 0, xs);\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => (new List_1(x, acc)), ys, reverse(xs));\n}\n\nexport function collect(f, xs) {\n    return ofSeq(collect_1(f, xs));\n}\n\nexport function map(f, xs) {\n    return reverse(fold((acc, x) => (new List_1(f(x), acc)), new List_1(), xs));\n}\n\nexport function mapIndexed(f, xs) {\n    return reverse(foldIndexed((i, acc, x) => (new List_1(f(i, x), acc)), new List_1(), xs));\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(f, xs, ys) {\n    return reverse(fold2((acc, x, y) => (new List_1(f(x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function mapIndexed2(f, xs, ys) {\n    return reverse(foldIndexed2((i, acc, x, y) => (new List_1(f(i, x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function map3(f, xs, ys, zs) {\n    return reverse(fold3((acc, x, y, z) => (new List_1(f(x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapIndexed3(f, xs, ys, zs) {\n    return reverse(foldIndexed3((i, acc, x, y, z) => (new List_1(f(i, x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapFold(f, s, xs) {\n    const patternInput_1 = fold((tupledArg, x) => {\n        const patternInput = f(tupledArg[1], x);\n        return [new List_1(patternInput[0], tupledArg[0]), patternInput[1]];\n    }, [new List_1(), s], xs);\n    return [reverse(patternInput_1[0]), patternInput_1[1]];\n}\n\nexport function mapFoldBack(f, xs, s) {\n    return mapFold((s_1, v) => f(v, s_1), s, reverse(xs));\n}\n\nexport function iterate(f, xs) {\n    return fold((unitVar0, x) => {\n        f(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(f, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        f(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(f, xs) {\n    return foldIndexed((i, unitVar1, x) => {\n        f(i, x);\n    }, void 0, xs);\n}\n\nexport function iterateIndexed2(f, xs, ys) {\n    return foldIndexed2((i, unitVar1, x, y) => {\n        f(i, x, y);\n    }, void 0, xs, ys);\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = count(xs) - 1; i >= 0; i--) {\n        res = (new List_1(xs[i], res));\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, new List_1());\n}\n\nexport function isEmpty(_arg1) {\n    if (_arg1.tail == null) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function tryPickIndexedAux(f_mut, i_mut, _arg1_mut) {\n    tryPickIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            const result = f(i, _arg1.head);\n            if (result == null) {\n                f_mut = f;\n                i_mut = (i + 1);\n                _arg1_mut = _arg1.tail;\n                continue tryPickIndexedAux;\n            }\n            else {\n                return result;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function tryPickIndexed(f, xs) {\n    return tryPickIndexedAux(f, 0, xs);\n}\n\nexport function tryPick(f, xs) {\n    return tryPickIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function tryFindIndexed(f, xs) {\n    return tryPickIndexed((i, x) => (f(i, x) ? some(x) : (void 0)), xs);\n}\n\nexport function tryFind(f, xs) {\n    return tryPickIndexed((_arg1, x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function findIndexed(f, xs) {\n    const matchValue = tryFindIndexed(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function find(f, xs) {\n    return findIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function findBack(f, xs) {\n    return find(f, reverse(xs));\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFind(f, reverse(xs));\n}\n\nexport function tryFindIndex(f, xs) {\n    return tryPickIndexed((i, x) => (f(x) ? i : (void 0)), xs);\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, Array.from(xs));\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue != null) {\n        return matchValue | 0;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function findIndexBack(f, xs) {\n    return findIndexBack_1(f, Array.from(xs));\n}\n\nexport function item(n, xs) {\n    return findIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function tryItem(n, xs) {\n    return tryFindIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function filter(f, xs) {\n    return reverse(fold((acc, x) => (f(x) ? (new List_1(x, acc)) : acc), new List_1(), xs));\n}\n\nexport function partition(f, xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => (f(x) ? [new List_1(x, lacc), racc] : [lacc, new List_1(x, racc)]);\n    }), [new List_1(), new List_1()], reverse(xs));\n}\n\nexport function choose(f, xs) {\n    return reverse(fold((acc, x) => {\n        const matchValue = f(x);\n        return (matchValue == null) ? acc : (new List_1(value_1(matchValue), acc));\n    }, new List_1(), xs));\n}\n\nexport function contains(value, list, eq) {\n    const loop = (xs_mut) => {\n        loop:\n        while (true) {\n            const xs = xs_mut;\n            if (xs.tail != null) {\n                if (eq.Equals(value, xs.head)) {\n                    return true;\n                }\n                else {\n                    xs_mut = xs.tail;\n                    continue loop;\n                }\n            }\n            else {\n                return false;\n            }\n            break;\n        }\n    };\n    return loop(list);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (isEmpty(array)) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return filter((arg00) => addToSet(arg00, cached), array);\n    }\n}\n\nexport function initialize(n, f) {\n    let xs = new List_1();\n    for (let i = 0; i <= (n - 1); i++) {\n        xs = (new List_1(f(i), xs));\n    }\n    return reverse(xs);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, _arg1) {\n    if (_arg1.tail != null) {\n        return fold(f, _arg1.head, _arg1.tail);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function reduceBack(f, _arg1) {\n    if (_arg1.tail != null) {\n        return foldBack(f, _arg1.tail, _arg1.head);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f_mut, _arg1_mut) {\n    exists:\n    while (true) {\n        const f = f_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (f(_arg1.head)) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                _arg1_mut = _arg1.tail;\n                continue exists;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function exists2(f_mut, bs_mut, cs_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(x, y)) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    bs_mut = xs;\n                    cs_mut = ys;\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1])], xs, [new List_1(), new List_1()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1]), new List_1(tupledArg[2], tupledArg_1[2])], xs, [new List_1(), new List_1(), new List_1()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sort(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(x, y))), xs_1)));\n}\n\nexport function sortBy(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y)))), xs_1)));\n}\n\nexport function sortDescending(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1))), xs_1)));\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1))), xs_1)));\n}\n\nexport function sortWith(comparer, xs) {\n    let comparer_1, xs_1;\n    return ofArray((comparer_1 = comparer, (xs_1 = Array.from(xs), (xs_1.sort(comparer_1), xs_1))));\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(li, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), li);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, x), averager.GetZero(), xs), length(xs));\n}\n\nexport function averageBy(f, xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, f(x)), averager.GetZero(), xs), length(xs));\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, Array.from(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return map((xs_2) => ofArray(xs_2), ofArray(chunkBySize_1(chunkSize, Array.from(xs))));\n}\n\nexport function skip(i, xs) {\n    const skipInner = (i_1_mut, xs_1_mut) => {\n        skipInner:\n        while (true) {\n            const i_1 = i_1_mut, xs_1 = xs_1_mut;\n            const matchValue = [i_1, xs_1];\n            if (matchValue[0] === 0) {\n                return xs_1;\n            }\n            else if (matchValue[1].tail != null) {\n                i_1_mut = (i_1 - 1);\n                xs_1_mut = matchValue[1].tail;\n                continue skipInner;\n            }\n            else {\n                throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n            }\n            break;\n        }\n    };\n    const matchValue_1 = [i, xs];\n    if (matchValue_1[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_4, xs_4;\n        if (matchValue_1[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue_1[0] === 1) {\n            if (matchValue_1[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_4 = matchValue_1[0];\n                xs_4 = matchValue_1[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_4 = matchValue_1[0];\n            xs_4 = matchValue_1[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return xs;\n            }\n            case 1: {\n                return matchValue_1[1].tail;\n            }\n            case 2: {\n                return skipInner(i_4, xs_4);\n            }\n        }\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        let pattern_matching_result, h_1, t_1;\n        if (xs.tail != null) {\n            if (predicate(xs.head)) {\n                pattern_matching_result = 0;\n                h_1 = xs.head;\n                t_1 = xs.tail;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                predicate_mut = predicate;\n                xs_mut = t_1;\n                continue skipWhile;\n            }\n            case 1: {\n                return xs;\n            }\n        }\n        break;\n    }\n}\n\nexport function takeSplitAux(error_mut, i_mut, acc_mut, xs_mut) {\n    takeSplitAux:\n    while (true) {\n        const error = error_mut, i = i_mut, acc = acc_mut, xs = xs_mut;\n        const matchValue = [i, xs];\n        if (matchValue[0] === 0) {\n            return [reverse(acc), xs];\n        }\n        else if (matchValue[1].tail != null) {\n            error_mut = error;\n            i_mut = (i - 1);\n            acc_mut = (new List_1(matchValue[1].head, acc));\n            xs_mut = matchValue[1].tail;\n            continue takeSplitAux;\n        }\n        else if (error) {\n            throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n        }\n        else {\n            return [reverse(acc), xs];\n        }\n        break;\n    }\n}\n\nexport function take(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function takeWhile(predicate, xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail == null) {\n            if (predicate(xs.head)) {\n                return xs;\n            }\n            else {\n                return xs.tail;\n            }\n        }\n        else if (!predicate(xs.head)) {\n            return new List_1();\n        }\n        else {\n            return new List_1(xs.head, takeWhile(predicate, xs.tail));\n        }\n    }\n    else {\n        return xs;\n    }\n}\n\nexport function truncate(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(false, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function splitAt(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_2;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_2 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_2 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [new List_1(), xs];\n            }\n            case 1: {\n                return [new List_1(matchValue[1].head, new List_1()), matchValue[1].tail];\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_2);\n            }\n        }\n    }\n}\n\nexport function outOfRange() {\n    throw (new Error(\"Index out of range\"));\n}\n\nexport function getSlice(lower, upper, xs) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const hasUpper = upper != null;\n    if (lower_1 < 0) {\n        return outOfRange();\n    }\n    else if (hasUpper ? (value_1(upper) < lower_1) : false) {\n        return new List_1();\n    }\n    else {\n        let lastIndex = -1;\n        const res = foldIndexed((i, acc, x) => {\n            lastIndex = i;\n            if ((lower_1 <= i) ? ((!hasUpper) ? true : (i <= value_1(upper))) : false) {\n                return new List_1(x, acc);\n            }\n            else {\n                return acc;\n            }\n        }, new List_1(), xs);\n        if ((lower_1 > (lastIndex + 1)) ? true : (hasUpper ? (value_1(upper) > lastIndex) : false)) {\n            outOfRange();\n        }\n        return reverse(res);\n    }\n}\n\nexport function distinctBy(projection, xs, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), xs);\n}\n\nexport function distinct(xs, eq) {\n    return distinctBy((x) => x, xs, eq);\n}\n\nexport function exactlyOne(xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail != null) {\n            throw (new Error(\"Input list too long\\\\nParameter name: list\"));\n        }\n        else {\n            return xs.head;\n        }\n    }\n    else {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: list\"));\n    }\n}\n\nexport function groupBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, new List_1(v, matchValue[1]));\n        }\n        else {\n            addToDict(dict, key, new List_1(v, new List_1()));\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, reverse(getItemFromDict(dict, key_1))], result));\n    }, keys);\n    return result;\n}\n\nexport function countBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, getItemFromDict(dict, key_1)], result));\n    }, keys);\n    return result;\n}\n\nexport function where(predicate, source) {\n    return filter(predicate, source);\n}\n\nexport function pairwise(source) {\n    return ofSeq(pairwise_1(source));\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res = new List_1();\n    for (let i = length(source); i >= windowSize; i--) {\n        res = (new List_1(getSlice(i - windowSize, i - 1, source), res));\n    }\n    return res;\n}\n\nexport function splitInto(chunks, source) {\n    return map((xs_1) => ofArray(xs_1), ofArray(splitInto_1(chunks, Array.from(source))));\n}\n\nexport function transpose(lists) {\n    return ofSeq(map_1((xs) => ofSeq(xs), transpose_1(lists)));\n}\n\n","import { Union } from \"../fable-library.3.1.5/Types.js\";\nimport { array_type, tuple_type, class_type, union_type, lambda_type, unit_type, string_type, bool_type, float64_type, obj_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { keyValueList } from \"../fable-library.3.1.5/MapUtil.js\";\n\nexport class GridLayerProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"TileSize\", \"Opacity\", \"UpdateWhenIdle\", \"UpdateWhenZooming\", \"UpdateInterval\", \"Attribution\", \"ZIndex\", \"Bounds\", \"MinZoom\", \"MaxZoom\", \"NoWrap\", \"Pane\", \"ClassName\", \"KeepBuffer\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function GridLayerProps$reflection() {\n    return union_type(\"ReactLeaflet.GridLayerProps\", [], GridLayerProps, () => [[[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class TileLayerProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"TileSize\", \"Opacity\", \"UpdateWhenIdle\", \"UpdateWhenZooming\", \"UpdateInterval\", \"Attribution\", \"ZIndex\", \"Bounds\", \"NoWrap\", \"Pane\", \"ClassName\", \"KeepBuffer\", \"MinZoom\", \"MaxZoom\", \"MaxNativeZoom\", \"MinNativeZoom\", \"Subdomains\", \"ErrorTileUrl\", \"ZoomOffset\", \"Tms\", \"ZoomReverse\", \"DetectRetina\", \"CrossOrigin\", \"Url\", \"OnLoading\", \"OnLoad\", \"OnTileLoadstart\", \"OnTileLoad\", \"OnTileUnload\", \"OnTileError\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function TileLayerProps$reflection() {\n    return union_type(\"ReactLeaflet.TileLayerProps\", [], TileLayerProps, () => [[[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.TileEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.TileEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.TileEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.TileEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class WMSTileLayerProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"TileSize\", \"Opacity\", \"UpdateWhenIdle\", \"UpdateWhenZooming\", \"UpdateInterval\", \"Attribution\", \"ZIndex\", \"Bounds\", \"NoWrap\", \"Pane\", \"ClassName\", \"KeepBuffer\", \"MinZoom\", \"MaxZoom\", \"MaxNativeZoom\", \"MinNativeZoom\", \"Subdomains\", \"ErrorTileUrl\", \"ZoomOffset\", \"Tms\", \"ZoomReverse\", \"DetectRetina\", \"CrossOrigin\", \"Url\", \"Layers\", \"Styles\", \"Format\", \"Transparent\", \"Version\", \"Crs\", \"Uppercase\", \"OnLoading\", \"OnLoad\", \"OnTileLoadstart\", \"OnTileLoad\", \"OnTileUnload\", \"OnTileError\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function WMSTileLayerProps$reflection() {\n    return union_type(\"ReactLeaflet.WMSTileLayerProps\", [], WMSTileLayerProps, () => [[[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Leaflet.CRS\")]], [[\"Item\", bool_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.TileEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.TileEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.TileEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.TileEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class ImageOverlayProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Opacity\", \"Alt\", \"Interactive\", \"Attribution\", \"CrossOrigin\", \"Url\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function ImageOverlayProps$reflection() {\n    return union_type(\"ReactLeaflet.ImageOverlayProps\", [], ImageOverlayProps, () => [[[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class PathProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Attribution\", \"Interactive\", \"Stroke\", \"Color\", \"Weight\", \"Opacity\", \"LineCap\", \"LineJoin\", \"DashArray\", \"DashOffset\", \"Fill\", \"FillColor\", \"FillOpacity\", \"FillRule\", \"Renderer\", \"ClassName\", \"OnClick\", \"OnDblClick\", \"OnMouseDown\", \"OnMouseOver\", \"OnMouseOut\", \"OnContextMenu\", \"OnAdd\", \"OnRemove\", \"OnPopupOpen\", \"OnPopupClose\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function PathProps$reflection() {\n    return union_type(\"ReactLeaflet.PathProps\", [], PathProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Leaflet.Renderer\")]], [[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class PolylineProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Attribution\", \"Interactive\", \"Stroke\", \"Color\", \"Weight\", \"Opacity\", \"LineCap\", \"LineJoin\", \"DashArray\", \"DashOffset\", \"Fill\", \"FillColor\", \"FillOpacity\", \"FillRule\", \"Renderer\", \"ClassName\", \"SmoothFactor\", \"NoClip\", \"OnClick\", \"OnDblClick\", \"OnMouseDown\", \"OnMouseOver\", \"OnMouseOut\", \"OnContextMenu\", \"OnAdd\", \"OnRemove\", \"OnPopupOpen\", \"OnPopupClose\", \"Positions\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function PolylineProps$reflection() {\n    return union_type(\"ReactLeaflet.PolylineProps\", [], PolylineProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Leaflet.Renderer\")]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", obj_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class PolygonProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"SmoothFactor\", \"NoClip\", \"Pane\", \"Attribution\", \"Interactive\", \"Stroke\", \"Color\", \"Weight\", \"Opacity\", \"LineCap\", \"LineJoin\", \"DashArray\", \"DashOffset\", \"Fill\", \"FillColor\", \"FillOpacity\", \"FillRule\", \"Renderer\", \"ClassName\", \"OnClick\", \"OnDblClick\", \"OnMouseDown\", \"OnMouseOver\", \"OnMouseOut\", \"OnContextMenu\", \"OnAdd\", \"OnRemove\", \"OnPopupOpen\", \"OnPopupClose\", \"Positions\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function PolygonProps$reflection() {\n    return union_type(\"ReactLeaflet.PolygonProps\", [], PolygonProps, () => [[[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Leaflet.Renderer\")]], [[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", obj_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class CircleMarkerProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Attribution\", \"Interactive\", \"Stroke\", \"Color\", \"Weight\", \"Opacity\", \"LineCap\", \"LineJoin\", \"DashArray\", \"DashOffset\", \"Fill\", \"FillColor\", \"FillOpacity\", \"FillRule\", \"Renderer\", \"ClassName\", \"Radius\", \"OnClick\", \"OnDblClick\", \"OnMouseDown\", \"OnMouseOver\", \"OnMouseOut\", \"OnContextMenu\", \"OnAdd\", \"OnRemove\", \"OnPopupOpen\", \"OnPopupClose\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function CircleMarkerProps$reflection() {\n    return union_type(\"ReactLeaflet.CircleMarkerProps\", [], CircleMarkerProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Leaflet.Renderer\")]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class CircleProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Attribution\", \"Interactive\", \"Stroke\", \"Color\", \"Weight\", \"Opacity\", \"LineCap\", \"LineJoin\", \"DashArray\", \"DashOffset\", \"Fill\", \"FillColor\", \"FillOpacity\", \"FillRule\", \"Renderer\", \"ClassName\", \"Radius\", \"OnClick\", \"OnDblClick\", \"OnMouseDown\", \"OnMouseOver\", \"OnMouseOut\", \"OnContextMenu\", \"OnAdd\", \"OnRemove\", \"OnPopupOpen\", \"OnPopupClose\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function CircleProps$reflection() {\n    return union_type(\"ReactLeaflet.CircleProps\", [], CircleProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Leaflet.Renderer\")]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class GeoJSONProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Attribution\", \"Data\", \"PointToLayer\", \"Style\", \"OnEachFeature\", \"Filter\", \"CoordsToLatLng\", \"OnClick\", \"OnDblClick\", \"OnMouseOver\", \"OnMouseOut\", \"OnContextMenu\", \"OnLayerAdd\", \"OnLayerRemove\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function GeoJSONProps$reflection() {\n    return union_type(\"ReactLeaflet.GeoJSONProps\", [], GeoJSONProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Geojson.GeoJsonObject\")]], [[\"Item\", lambda_type(tuple_type(class_type(\"Geojson.Feature`2\", [class_type(\"Geojson.Point\"), obj_type]), class_type(\"Leaflet.LatLng\")), class_type(\"Leaflet.Layer\"))]], [[\"Item\", lambda_type(class_type(\"Geojson.Feature`2\", [class_type(\"Geojson.GeometryObject\"), obj_type]), class_type(\"Leaflet.PathOptions\"))]], [[\"Item\", lambda_type(tuple_type(class_type(\"Geojson.Feature`2\", [class_type(\"Geojson.GeometryObject\"), obj_type]), class_type(\"Leaflet.Layer\")), unit_type)]], [[\"Item\", lambda_type(class_type(\"Geojson.Feature`2\", [class_type(\"Geojson.GeometryObject\"), obj_type]), bool_type)]], [[\"Item\", lambda_type(obj_type, class_type(\"Leaflet.LatLng\"))]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayerEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayerEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class MapProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"PreferCanvas\", \"AttributionControl\", \"ZoomControl\", \"ClosePopupOnClick\", \"ZoomSnap\", \"ZoomDelta\", \"TrackResize\", \"BoxZoom\", \"DoubleClickZoom\", \"Dragging\", \"Crs\", \"Layers\", \"Renderer\", \"FadeAnimation\", \"MarkerZoomAnimation\", \"Transform3DLimit\", \"ZoomAnimation\", \"ZoomAnimationThreshold\", \"Inertia\", \"InertiaDeceleration\", \"InertiaMaxSpeed\", \"EaseLinearity\", \"WorldCopyJump\", \"MaxBoundsViscosity\", \"Keyboard\", \"KeyboardPanDelta\", \"ScrollWheelZoom\", \"WheelDebounceTime\", \"WheelPxPerZoomLevel\", \"Tap\", \"TapTolerance\", \"TouchZoom\", \"BounceAtZoomLimits\", \"Animate\", \"Bounds\", \"BoundsOptions\", \"Center\", \"ClassName\", \"Id\", \"MaxBounds\", \"MinZoom\", \"UseFlyTo\", \"Zoom\", \"Watch\", \"SetView\", \"MaxZoom\", \"Timeout\", \"MaximumAge\", \"EnableHighAccuracy\", \"Duration\", \"NoMoveStart\", \"PaddingTopLeft\", \"PaddingBottomRight\", \"Padding\", \"OnClick\", \"OnDblClick\", \"OnMouseDown\", \"OnMouseUp\", \"OnMouseOver\", \"OnMouseOut\", \"OnMouseMove\", \"OnContextMenu\", \"OnFocus\", \"OnBlur\", \"OnPreClick\", \"OnLoad\", \"OnUnload\", \"OnViewReset\", \"OnMove\", \"OnMoveStart\", \"OnMoveEnd\", \"OnDragStart\", \"OnDrag\", \"OnDragEnd\", \"OnZoomStart\", \"OnZoomEnd\", \"OnZoomLevelsChange\", \"OnResize\", \"OnAutopaSstart\", \"OnLayerAdd\", \"OnLayerRemove\", \"OnBaseLayerChange\", \"OnOverLayerAdd\", \"OnOverLayerRemove\", \"OnLocationFound\", \"OnLocationError\", \"OnPopupOpen\", \"OnPopupClose\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function MapProps$reflection() {\n    return union_type(\"ReactLeaflet.MapProps\", [], MapProps, () => [[[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", class_type(\"Leaflet.CRS\")]], [[\"Item\", array_type(class_type(\"Leaflet.Layer\"))]], [[\"Item\", class_type(\"Leaflet.Renderer\")]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", class_type(\"Leaflet.FitBoundsOptions\")]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.DragEndEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.ResizeEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayerEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayerEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayersControlEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayersControlEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayersControlEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LocationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.ErrorEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class MapControlProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Position\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function MapControlProps$reflection() {\n    return union_type(\"ReactLeaflet.MapControlProps\", [], MapControlProps, () => [[[\"Item\", string_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class ZoomProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Position\", \"ZoomInText\", \"ZoomInTitle\", \"ZoomOutText\", \"ZoomOutTitle\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function ZoomProps$reflection() {\n    return union_type(\"ReactLeaflet.ZoomProps\", [], ZoomProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class PopupProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Offset\", \"ZoomAnimation\", \"ClassName\", \"Pane\", \"MaxWidth\", \"MinWidth\", \"MaxHeight\", \"AutoPan\", \"AutoPanPaddingTopLeft\", \"AutoPanPaddingBottomRight\", \"AutoPanPadding\", \"KeepInView\", \"CloseButton\", \"AutoClose\", \"CloseOnClick\", \"OnClose\", \"OnOpen\", \"Position\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function PopupProps$reflection() {\n    return union_type(\"ReactLeaflet.PopupProps\", [], PopupProps, () => [[[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.Popup\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.Popup\"), unit_type)]], [[\"Item\", obj_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class TooltipProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ZoomAnimation\", \"ClassName\", \"Pane\", \"Offset\", \"Direction\", \"Permanent\", \"Sticky\", \"Interactive\", \"Opacity\", \"OnClose\", \"OnOpen\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function TooltipProps$reflection() {\n    return union_type(\"ReactLeaflet.TooltipProps\", [], TooltipProps, () => [[[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.Tooltip\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.Tooltip\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class MarkerProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Attribution\", \"Interactive\", \"Icon\", \"Clickable\", \"Draggable\", \"Keyboard\", \"Title\", \"Alt\", \"ZIndexOffset\", \"Opacity\", \"RiseOnHover\", \"RiseOffset\", \"Position\", \"OnClick\", \"OnDblClick\", \"OnMouseDown\", \"OnMouseOver\", \"OnMouseOut\", \"OnContextMenu\", \"OnDragStart\", \"OnDrag\", \"OnDragEnd\", \"OnMove\", \"OnAdd\", \"OnRemove\", \"OnPopupOpen\", \"OnPopupClose\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function MarkerProps$reflection() {\n    return union_type(\"ReactLeaflet.MarkerProps\", [], MarkerProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.DragEndEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class RectangleProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Bounds\", \"Pane\", \"Attribution\", \"Interactive\", \"Stroke\", \"Color\", \"Weight\", \"Opacity\", \"LineCap\", \"LineJoin\", \"DashArray\", \"DashOffset\", \"Fill\", \"FillColor\", \"FillOpacity\", \"FillRule\", \"Renderer\", \"ClassName\", \"OnClick\", \"OnDblClick\", \"OnMouseDown\", \"OnMouseOver\", \"OnMouseOut\", \"OnContextMenu\", \"OnAdd\", \"OnRemove\", \"OnPopupOpen\", \"OnPopupClose\", \"PopupContainer\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function RectangleProps$reflection() {\n    return union_type(\"ReactLeaflet.RectangleProps\", [], RectangleProps, () => [[[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Leaflet.Renderer\")]], [[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.PopupEvent\"), unit_type)]], [[\"Item\", class_type(\"Leaflet.FeatureGroup`1\", [obj_type])]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class AttributionControlProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Prefix\", \"Position\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function AttributionControlProps$reflection() {\n    return union_type(\"ReactLeaflet.AttributionControlProps\", [], AttributionControlProps, () => [[[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class LayersControlProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BaseLayers\", \"Overlays\", \"OnBaseLayerChange\", \"OnOverLayerAdd\", \"OnOverLayerRmove\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function LayersControlProps$reflection() {\n    return union_type(\"ReactLeaflet.LayersControlProps\", [], LayersControlProps, () => [[[\"Item\", class_type(\"Leaflet.ControlModule.LayersObject\")]], [[\"Item\", class_type(\"Leaflet.ControlModule.LayersObject\")]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayersControlEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayersControlEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayersControlEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class ScaleControlProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"MaxWidth\", \"Metric\", \"Imperial\", \"UpdateWhenIdle\", \"Position\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function ScaleControlProps$reflection() {\n    return union_type(\"ReactLeaflet.ScaleControlProps\", [], ScaleControlProps, () => [[[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class ZoomControlProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ZoomInText\", \"ZoomInTitle\", \"ZoomOutText\", \"ZoomOutTitle\", \"Position\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function ZoomControlProps$reflection() {\n    return union_type(\"ReactLeaflet.ZoomControlProps\", [], ZoomControlProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class PaneProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Name\", \"Map\", \"ClassName\", \"Pane\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function PaneProps$reflection() {\n    return union_type(\"ReactLeaflet.PaneProps\", [], PaneProps, () => [[[\"Item\", string_type]], [[\"Item\", class_type(\"Leaflet.Map\")]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class MapLayerProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Attribution\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function MapLayerProps$reflection() {\n    return union_type(\"ReactLeaflet.MapLayerProps\", [], MapLayerProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class LayerGroupProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Attribution\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function LayerGroupProps$reflection() {\n    return union_type(\"ReactLeaflet.LayerGroupProps\", [], LayerGroupProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport class FeatureGroupProps extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Pane\", \"Attribution\", \"Interactive\", \"Stroke\", \"Color\", \"Weight\", \"Opacity\", \"LineCap\", \"LineJoin\", \"DashArray\", \"DashOffset\", \"Fill\", \"FillColor\", \"FillOpacity\", \"FillRule\", \"Renderer\", \"ClassName\", \"OnClick\", \"OnDblClick\", \"OnMouseOver\", \"OnMouseOut\", \"OnContextMenu\", \"OnLayerAdd\", \"OnLayerRemove\", \"Ref\", \"Key\"];\n    }\n}\n\nexport function FeatureGroupProps$reflection() {\n    return union_type(\"ReactLeaflet.FeatureGroupProps\", [], FeatureGroupProps, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", class_type(\"Leaflet.Renderer\")]], [[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LeafletMouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayerEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Leaflet.LayerEvent\"), unit_type)]], [[\"Item\", lambda_type(obj_type, unit_type)]], [[\"Item\", string_type]]]);\n}\n\nexport function GridLayerProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function TileLayerProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function WMSTileLayerProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function ImageOverlayProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function PathProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function PolylineProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function PolygonProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function CircleMarkerProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function CircleProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function GeoJSONProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function MapProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function MapProps_Style_7213C43C(css) {\n    return [\"style\", keyValueList(css, 1)];\n}\n\nexport function MapControlProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function ZoomProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function PopupProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function TooltipProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function MarkerProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function RectangleProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function AttributionControlProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function LayersControlProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function ScaleControlProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function ZoomControlProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function PaneProps_Style_7213C43C(css) {\n    return [\"style\", keyValueList(css, 1)];\n}\n\nexport function PaneProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function MapLayerProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function LayerGroupProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\nexport function FeatureGroupProps_Custom_433E080(key, value) {\n    return [key, value];\n}\n\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\n\nexport function HashIdentity_FromFunctions(hash, eq) {\n    return {\n        Equals(x, y) {\n            return eq(x, y);\n        },\n        GetHashCode(x_1) {\n            return hash(x_1);\n        },\n    };\n}\n\nexport function HashIdentity_Structural() {\n    return HashIdentity_FromFunctions((obj) => structuralHash(obj), (e1, e2) => equals(e1, e2));\n}\n\nexport function HashIdentity_Reference() {\n    return HashIdentity_FromFunctions((obj) => physicalHash(obj), (e1, e2) => (e1 === e2));\n}\n\nexport function ComparisonIdentity_FromFunction(comparer) {\n    return {\n        Compare(x, y) {\n            return comparer(x, y);\n        },\n    };\n}\n\nexport function ComparisonIdentity_Structural() {\n    return ComparisonIdentity_FromFunction((e1, e2) => compare(e1, e2));\n}\n\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { clear, int32ToString } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { sumBy } from \"./Seq.js\";\n\nexport class StringBuilder {\n    constructor(value, capacity) {\n        this.buf = [];\n        if (!isNullOrEmpty(value)) {\n            void (this.buf.push(value));\n        }\n    }\n    toString() {\n        const __ = this;\n        return join(\"\", __.buf);\n    }\n}\n\nexport function StringBuilder$reflection() {\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\n\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\n    return new StringBuilder(value, capacity);\n}\n\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\n\nexport function StringBuilder_$ctor_Z721C83C5(value) {\n    return StringBuilder_$ctor_Z18115A39(value, 16);\n}\n\nexport function StringBuilder_$ctor() {\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\n\nexport function StringBuilder__Append_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    return x;\n}\n\nexport function StringBuilder__Append_244C7CD6(x, c) {\n    void (x.buf.push(c));\n    return x;\n}\n\nexport function StringBuilder__Append_Z524259A4(x, o) {\n    void (x.buf.push(int32ToString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_5E38073B(x, o) {\n    void (x.buf.push(o.toString()));\n    return x;\n}\n\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_4E60E31B(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_695F1130(x, cs) {\n    void (x.buf.push(cs.join('')));\n    return x;\n}\n\nexport function StringBuilder__Append_43A65C09(x, s) {\n    void (x.buf.push(toString(s)));\n    return x;\n}\n\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\n    void (x.buf.push(format(fmt, o)));\n    return x;\n}\n\nexport function StringBuilder__AppendLine(x) {\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__get_Length(x) {\n    return sumBy((str) => str.length, x.buf, {\n        GetZero: () => 0,\n        Add: (x_1, y) => (x_1 + y),\n    });\n}\n\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n    return substring(toString(x), firstIndex, length);\n}\n\nexport function StringBuilder__Clear(x) {\n    clear(x.buf);\n    return x;\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        void StringBuilder__Append_Z721C83C5(builder, s);\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n    }, builder, format);\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_2 } from \"./Option.js\";\nimport { Record, List } from \"./Types.js\";\nimport { fold as fold_1 } from \"./List.js\";\nimport { structuralHash, compare, equals, isArrayLike } from \"./Util.js\";\nimport { empty as empty_1, tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, toIterator, map as map_2, unfold, getEnumerator } from \"./Seq.js\";\nimport { format, join } from \"./String.js\";\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\nimport { Dictionary_$ctor_6623D9B3 } from \"./MutableMap.js\";\n\nexport class MapTreeLeaf$2 {\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\n\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\n}\n\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\n    return new MapTreeLeaf$2(k, v);\n}\n\nexport function MapTreeLeaf$2__get_Key(_) {\n    return _.k;\n}\n\nexport function MapTreeLeaf$2__get_Value(_) {\n    return _.v;\n}\n\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\n    constructor(k, v, left, right, h) {\n        super(k, v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function MapTreeNode$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\n}\n\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\n    return new MapTreeNode$2(k, v, left, right, h);\n}\n\nexport function MapTreeNode$2__get_Left(_) {\n    return _.left;\n}\n\nexport function MapTreeNode$2__get_Right(_) {\n    return _.right;\n}\n\nexport function MapTreeNode$2__get_Height(_) {\n    return _.h;\n}\n\nexport function MapTreeModule_empty() {\n    return void 0;\n}\n\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\n    MapTreeModule_sizeAux:\n    while (true) {\n        const acc = acc_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_sizeAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_size(x) {\n    return MapTreeModule_sizeAux(0, x);\n}\n\nexport function MapTreeModule_mk(l, k, v, r) {\n    let hl;\n    const m = l;\n    if (m != null) {\n        const m2 = m;\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const m_1 = r;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\n    if (m_2 === 0) {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n    else {\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\n    }\n}\n\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\n    let m_2, m2_2, m_3, m2_3;\n    let t1h;\n    const m = t1;\n    if (m != null) {\n        const m2 = m;\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const m_1 = t2;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_2(t2);\n        if (matchValue instanceof MapTreeNode$2) {\n            if ((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? (m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_2(MapTreeNode$2__get_Left(matchValue));\n                if (matchValue_1 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_2(t1);\n        if (matchValue_2 instanceof MapTreeNode$2) {\n            if ((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? (m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_2(MapTreeNode$2__get_Right(matchValue_2));\n                if (matchValue_3 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else {\n        return MapTreeModule_mk(t1, k, v, t2);\n    }\n}\n\nexport function MapTreeModule_add(comparer, k, v, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c < 0) {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\n        }\n        else if (c === 0) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        }\n        else {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\n        }\n    }\n    else {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n}\n\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_tryFind:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c === 0) {\n                return some(MapTreeLeaf$2__get_Value(m2));\n            }\n            else if (m2 instanceof MapTreeNode$2) {\n                comparer_mut = comparer;\n                k_mut = k;\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\n                continue MapTreeModule_tryFind;\n            }\n            else {\n                return void 0;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_find(comparer, k, m) {\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\n    if (matchValue == null) {\n        throw (new Error());\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n    if (f(k, v)) {\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n    }\n    else {\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n    }\n}\n\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n    MapTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue MapTreeModule_partitionAux;\n            }\n            else {\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_partition(comparer, f, m) {\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\n\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\n    if (f(k, v)) {\n        return MapTreeModule_add(comparer, k, v, acc);\n    }\n    else {\n        return acc;\n    }\n}\n\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n    MapTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                acc_mut = acc_2;\n                continue MapTreeModule_filterAux;\n            }\n            else {\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_filter(comparer, f, m) {\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\n\nexport function MapTreeModule_spliceOutSuccessor(m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            if (MapTreeNode$2__get_Left(m2) == null) {\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\n            }\n            else {\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\n            }\n        }\n        else {\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\n    }\n}\n\nexport function MapTreeModule_remove(comparer, k, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c === 0) {\n            return MapTreeModule_empty();\n        }\n        else {\n            return m;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_change(comparer, k, u, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_1 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_2(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                }\n                else if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c_1 < 0) {\n                const matchValue_2 = u(void 0);\n                if (matchValue_2 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_2(matchValue_2), MapTreeModule_empty(), m, 2);\n                }\n                else {\n                    return m;\n                }\n            }\n            else if (c_1 === 0) {\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_3 != null) {\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_2(matchValue_3));\n                }\n                else {\n                    return MapTreeModule_empty();\n                }\n            }\n            else {\n                const matchValue_4 = u(void 0);\n                if (matchValue_4 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_2(matchValue_4), m, MapTreeModule_empty(), 2);\n                }\n                else {\n                    return m;\n                }\n            }\n        }\n    }\n    else {\n        const matchValue = u(void 0);\n        if (matchValue != null) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_2(matchValue));\n        }\n        else {\n            return m;\n        }\n    }\n}\n\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (m2 instanceof MapTreeNode$2) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Left(m2);\n                    continue MapTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\n    MapTreeModule_iterOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_iterOpt;\n            }\n            else {\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iter(f, m) {\n    MapTreeModule_iterOpt(f, m);\n}\n\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\n    MapTreeModule_tryPickOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\n                if (matchValue == null) {\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                    if (matchValue_1 == null) {\n                        f_mut = f;\n                        m_mut = MapTreeNode$2__get_Right(m2);\n                        continue MapTreeModule_tryPickOpt;\n                    }\n                    else {\n                        return matchValue_1;\n                    }\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_tryPick(f, m) {\n    return MapTreeModule_tryPickOpt(f, m);\n}\n\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\n    MapTreeModule_existsOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_existsOpt;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_exists(f, m) {\n    return MapTreeModule_existsOpt(f, m);\n}\n\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\n    MapTreeModule_forallOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_forallOpt;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_forall(f, m) {\n    return MapTreeModule_forallOpt(f, m);\n}\n\nexport function MapTreeModule_map(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapiOpt(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapi(f, m) {\n    return MapTreeModule_mapiOpt(f, m);\n}\n\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n    MapTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, m = m_mut, x = x_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                x_mut = x_2;\n                continue MapTreeModule_foldBackOpt;\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_foldBack(f, m, x) {\n    return MapTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n    MapTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                f_mut = f;\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_foldOpt;\n            }\n            else {\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_fold(f, x, m) {\n    return MapTreeModule_foldOpt(f, x, m);\n}\n\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\n        foldFromTo:\n        while (true) {\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\n                    const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\n                    if (cKeyHi < 0) {\n                        f_1_mut = f_1;\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\n                        x_1_mut = x_3;\n                        continue foldFromTo;\n                    }\n                    else {\n                        return x_3;\n                    }\n                }\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) ? (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) : false) {\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                }\n                else {\n                    return x_1;\n                }\n            }\n            else {\n                return x_1;\n            }\n            break;\n        }\n    };\n    if (comparer.Compare(lo, hi) === 1) {\n        return x;\n    }\n    else {\n        return foldFromTo(f, m, x);\n    }\n}\n\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\n\nexport function MapTreeModule_toList(m) {\n    const loop = (m_1_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const m_1 = m_1_mut, acc = acc_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\n                    acc_mut = (new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc)));\n                    continue loop;\n                }\n                else {\n                    return new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(m, new List());\n}\n\nexport function MapTreeModule_toArray(m) {\n    return Array.from(MapTreeModule_toList(m));\n}\n\nexport function MapTreeModule_ofList(comparer, l) {\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\n}\n\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    MapTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            comparer_mut = comparer;\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n            e_mut = e;\n            continue MapTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_ofArray(comparer, arr) {\n    let res = MapTreeModule_empty();\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\n        const forLoopVar = arr[idx];\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n    }\n    return res;\n}\n\nexport function MapTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return MapTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof List) {\n        return MapTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport function MapTreeModule_copyToArray(m, arr, i) {\n    let j = i | 0;\n    MapTreeModule_iter((x, y) => {\n        arr[j] = [x, y];\n        j = (j + 1);\n    }, m);\n}\n\nexport class MapTreeModule_MapIterator$2 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\n}\n\nexport function MapTreeModule_collapseLHS(stack_mut) {\n    MapTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const rest = stack.tail;\n            const m = stack.head;\n            if (m != null) {\n                const m2 = m;\n                if (m2 instanceof MapTreeNode$2) {\n                    stack_mut = (new List(MapTreeNode$2__get_Left(m2), new List(MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), new List(MapTreeNode$2__get_Right(m2), rest))));\n                    continue MapTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue MapTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return new List();\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_mkIterator(m) {\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(new List(m, new List())), false);\n}\n\nexport function MapTreeModule_notStarted() {\n    throw (new Error(\"enumeration not started\"));\n}\n\nexport function MapTreeModule_alreadyFinished() {\n    throw (new Error(\"enumeration already finished\"));\n}\n\nexport function MapTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n                }\n                else {\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n            }\n        }\n        else {\n            return MapTreeModule_alreadyFinished();\n        }\n    }\n    else {\n        return MapTreeModule_notStarted();\n    }\n}\n\nexport function MapTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = MapTreeModule_collapseLHS(matchValue.tail);\n                    return !(i.stack.tail == null);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function MapTreeModule_mkIEnumerator(m) {\n    let i = MapTreeModule_mkIterator(m);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return MapTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = MapTreeModule_mkIterator(m);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function MapTreeModule_toSeq(s) {\n    return unfold((en_1) => {\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n        }\n        else {\n            return void 0;\n        }\n    }, MapTreeModule_mkIEnumerator(s));\n}\n\nexport class FSharpMap {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        if (that instanceof FSharpMap) {\n            const e1 = getEnumerator(this$);\n            try {\n                const e2 = getEnumerator(that);\n                try {\n                    const loop = () => {\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            if (!m1) {\n                                return true;\n                            }\n                            else {\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\n                                    return loop();\n                                }\n                                else {\n                                    return false;\n                                }\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    };\n                    return loop();\n                }\n                finally {\n                    e2.Dispose();\n                }\n            }\n            finally {\n                e1.Dispose();\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    toString() {\n        const this$ = this;\n        return (\"map [\" + join(\"; \", map_2((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpMap\";\n    }\n    GetEnumerator() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    CompareTo(obj) {\n        const m = this;\n        if (obj instanceof FSharpMap) {\n            return compareWith((kvp1, kvp2) => {\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\n            }, m, obj) | 0;\n        }\n        else {\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const m = this;\n        MapTreeModule_copyToArray(m.tree, arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    get size() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    clear() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    delete(_arg1) {\n        throw (new Error(\"Map cannot be mutated\"));\n        return false;\n    }\n    entries() {\n        const m = this;\n        return map_2((p) => [p[0], p[1]], m);\n    }\n    get(k) {\n        const m = this;\n        return FSharpMap__get_Item(m, k);\n    }\n    has(k) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, k);\n    }\n    keys() {\n        const m = this;\n        return map_2((p) => p[0], m);\n    }\n    set(k, v) {\n        const m = this;\n        throw (new Error(\"Map cannot be mutated\"));\n        return m;\n    }\n    values() {\n        const m = this;\n        return map_2((p) => p[1], m);\n    }\n    forEach(f, thisArg) {\n        const m = this;\n        iterate_1((p) => {\n            f(p[1], p[0], m);\n        }, m);\n    }\n}\n\nexport function FSharpMap$reflection(gen0, gen1) {\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\n\nexport function FSharpMap_$ctor(comparer, tree) {\n    return new FSharpMap(comparer, tree);\n}\n\n(() => {\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\n})();\n\nexport function FSharpMap_get_Empty() {\n    return FSharpMap.empty;\n}\n\nexport function FSharpMap_Create(ie) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\n\nexport function FSharpMap__get_Comparer(m) {\n    return m.comparer;\n}\n\nexport function FSharpMap__get_Tree(m) {\n    return m.tree;\n}\n\nexport function FSharpMap__Add(m, key, value) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\n\nexport function FSharpMap__Change(m, key, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\n\nexport function FSharpMap__get_IsEmpty(m) {\n    return m.tree == null;\n}\n\nexport function FSharpMap__get_Item(m, key) {\n    return MapTreeModule_find(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__TryPick(m, f) {\n    return MapTreeModule_tryPick(f, m.tree);\n}\n\nexport function FSharpMap__Exists(m, predicate) {\n    return MapTreeModule_exists(predicate, m.tree);\n}\n\nexport function FSharpMap__Filter(m, predicate) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\n\nexport function FSharpMap__ForAll(m, predicate) {\n    return MapTreeModule_forall(predicate, m.tree);\n}\n\nexport function FSharpMap__Fold(m, f, acc) {\n    return MapTreeModule_foldBack(f, m.tree, acc);\n}\n\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\n\nexport function FSharpMap__Iterate(m, f) {\n    MapTreeModule_iter(f, m.tree);\n}\n\nexport function FSharpMap__MapRange(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\n\nexport function FSharpMap__Map(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\n\nexport function FSharpMap__Partition(m, predicate) {\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\n\nexport function FSharpMap__get_Count(m) {\n    return MapTreeModule_size(m.tree);\n}\n\nexport function FSharpMap__ContainsKey(m, key) {\n    return MapTreeModule_mem(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__Remove(m, key) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\n\nexport function FSharpMap__TryGetValue(__, key, value) {\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\n    if (matchValue == null) {\n        return false;\n    }\n    else {\n        const v = value_2(matchValue);\n        value.contents = v;\n        return true;\n    }\n}\n\nexport function FSharpMap__TryFind(m, key) {\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__ToList(m) {\n    return MapTreeModule_toList(m.tree);\n}\n\nexport function FSharpMap__ToArray(m) {\n    return MapTreeModule_toArray(m.tree);\n}\n\nexport function FSharpMap__ComputeHashCode(this$) {\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const activePatternResult4293 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = combineHash(res, structuralHash(activePatternResult4293[0]));\n            res = combineHash(res, structuralHash(activePatternResult4293[1]));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return res | 0;\n}\n\nexport function isEmpty(table) {\n    return FSharpMap__get_IsEmpty(table);\n}\n\nexport function add(key, value, table) {\n    return FSharpMap__Add(table, key, value);\n}\n\nexport function change(key, f, table) {\n    return FSharpMap__Change(table, key, f);\n}\n\nexport function find(key, table) {\n    return FSharpMap__get_Item(table, key);\n}\n\nexport function tryFind(key, table) {\n    return FSharpMap__TryFind(table, key);\n}\n\nexport function remove(key, table) {\n    return FSharpMap__Remove(table, key);\n}\n\nexport function containsKey(key, table) {\n    return FSharpMap__ContainsKey(table, key);\n}\n\nexport function iterate(action, table) {\n    FSharpMap__Iterate(table, action);\n}\n\nexport function tryPick(chooser, table) {\n    return FSharpMap__TryPick(table, chooser);\n}\n\nexport function pick(chooser, table) {\n    const matchValue = tryPick(chooser, table);\n    if (matchValue != null) {\n        return value_2(matchValue);\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function exists(predicate, table) {\n    return FSharpMap__Exists(table, predicate);\n}\n\nexport function filter(predicate, table) {\n    return FSharpMap__Filter(table, predicate);\n}\n\nexport function partition(predicate, table) {\n    return FSharpMap__Partition(table, predicate);\n}\n\nexport function forAll(predicate, table) {\n    return FSharpMap__ForAll(table, predicate);\n}\n\nexport function map(mapping, table) {\n    return FSharpMap__Map(table, mapping);\n}\n\nexport function fold(folder, state, table) {\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\n\nexport function foldBack(folder, table, state) {\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\n\nexport function toSeq(table) {\n    return map_2((kvp) => [kvp[0], kvp[1]], table);\n}\n\nexport function findKey(predicate, table) {\n    return pick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function tryFindKey(predicate, table) {\n    return tryPick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function ofList(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofSeq(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofArray(elements) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\n\nexport function toList(table) {\n    return FSharpMap__ToList(table);\n}\n\nexport function toArray(table) {\n    return FSharpMap__ToArray(table);\n}\n\nexport function empty() {\n    return FSharpMap_get_Empty();\n}\n\nexport function createMutable(source, comparer) {\n    return Dictionary_$ctor_6623D9B3(source, comparer);\n}\n\nexport function groupBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const key = projection(v);\n            if (dict.has(key)) {\n                void (dict.get(key).push(v));\n            }\n            else {\n                void dict.set(key, [v]);\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return map_2((tupledArg) => [tupledArg[0], tupledArg[1]], dict.entries());\n}\n\nexport function countBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const key = projection(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            void (dict.has(key) ? dict.set(key, dict.get(key) + 1) : dict.set(key, 1));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return dict.entries();\n}\n\nexport function count(table) {\n    return FSharpMap__get_Count(table);\n}\n\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { toString, List, Record } from \"./Types.js\";\nimport { singleton as singleton_1, collect, empty as empty_1, delay, fold as fold_2, reduce, iterate as iterate_1, toIterator, map as map_1, getEnumerator } from \"./Seq.js\";\nimport { fold as fold_1 } from \"./Array.js\";\nimport { join } from \"./String.js\";\nimport { structuralHash } from \"./Util.js\";\nimport { HashSet__Add_2B595, HashSet_$ctor_Z6150332D } from \"./MutableSet.js\";\n\nexport class SetTreeLeaf$1 {\n    constructor(k) {\n        this.k = k;\n    }\n}\n\nexport function SetTreeLeaf$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\n}\n\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\n    return new SetTreeLeaf$1(k);\n}\n\nexport function SetTreeLeaf$1__get_Key(_) {\n    return _.k;\n}\n\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\n    constructor(v, left, right, h) {\n        super(v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function SetTreeNode$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\n}\n\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\n    return new SetTreeNode$1(v, left, right, h);\n}\n\nexport function SetTreeNode$1__get_Left(_) {\n    return _.left;\n}\n\nexport function SetTreeNode$1__get_Right(_) {\n    return _.right;\n}\n\nexport function SetTreeNode$1__get_Height(_) {\n    return _.h;\n}\n\nexport function SetTreeModule_empty() {\n    return void 0;\n}\n\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\n    SetTreeModule_countAux:\n    while (true) {\n        const t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\n                continue SetTreeModule_countAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_count(s) {\n    return SetTreeModule_countAux(s, 0);\n}\n\nexport function SetTreeModule_mk(l, k, r) {\n    let hl;\n    const t = l;\n    if (t != null) {\n        const t2 = t;\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const t_1 = r;\n    if (t_1 != null) {\n        const t2_1 = t_1;\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m = ((hl < hr) ? hr : hl) | 0;\n    if (m === 0) {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n    else {\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\n    }\n}\n\nexport function SetTreeModule_rebalance(t1, v, t2) {\n    let t_2, t2_3, t_3, t2_4;\n    let t1h;\n    const t = t1;\n    if (t != null) {\n        const t2_1 = t;\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const t_1 = t2;\n    if (t_1 != null) {\n        const t2_2 = t_1;\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_1(t2);\n        if (matchValue instanceof SetTreeNode$1) {\n            if ((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? (t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_1(SetTreeNode$1__get_Left(matchValue));\n                if (matchValue_1 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_1(t1);\n        if (matchValue_2 instanceof SetTreeNode$1) {\n            if ((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? (t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_1(SetTreeNode$1__get_Right(matchValue_2));\n                if (matchValue_3 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else {\n        return SetTreeModule_mk(t1, v, t2);\n    }\n}\n\nexport function SetTreeModule_add(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                return t;\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c_1 < 0) {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\n            }\n            else if (c_1 === 0) {\n                return t;\n            }\n            else {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\n            }\n        }\n    }\n    else {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n}\n\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\n                    }\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\n                    }\n                    else {\n                        return SetTreeModule_mk(t1, k, t2);\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\n            }\n        }\n        else {\n            return SetTreeModule_add(comparer, k, t1);\n        }\n    }\n    else {\n        return SetTreeModule_add(comparer, k, t2);\n    }\n}\n\nexport function SetTreeModule_split(comparer, pivot, t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c < 0) {\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n            else if (c === 0) {\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\n            if (c_1 < 0) {\n                return [t, false, SetTreeModule_empty()];\n            }\n            else if (c_1 === 0) {\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\n            }\n            else {\n                return [SetTreeModule_empty(), false, t];\n            }\n        }\n    }\n    else {\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\n    }\n}\n\nexport function SetTreeModule_spliceOutSuccessor(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            if (SetTreeNode$1__get_Left(t2) == null) {\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n        }\n        else {\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\n    }\n}\n\nexport function SetTreeModule_remove(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                if (SetTreeNode$1__get_Left(t2) == null) {\n                    return SetTreeNode$1__get_Right(t2);\n                }\n                else if (SetTreeNode$1__get_Right(t2) == null) {\n                    return SetTreeNode$1__get_Left(t2);\n                }\n                else {\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\n                }\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else if (c === 0) {\n            return SetTreeModule_empty();\n        }\n        else {\n            return t;\n        }\n    }\n    else {\n        return t;\n    }\n}\n\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\n    SetTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (t2 instanceof SetTreeNode$1) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Left(t2);\n                    continue SetTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_iter(f_mut, t_mut) {\n    SetTreeModule_iter:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\n                f(SetTreeLeaf$1__get_Key(t2));\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_iter;\n            }\n            else {\n                f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\n    SetTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, t = t_mut, x = x_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\n                continue SetTreeModule_foldBackOpt;\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBack(f, m, x) {\n    return SetTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\n    SetTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_foldOpt;\n            }\n            else {\n                return f(x, SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_fold(f, x, m) {\n    return SetTreeModule_foldOpt(f, x, m);\n}\n\nexport function SetTreeModule_forall(f_mut, t_mut) {\n    SetTreeModule_forall:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_forall;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_exists(f_mut, t_mut) {\n    SetTreeModule_exists:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_exists;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_subset(comparer, a, b) {\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\n}\n\nexport function SetTreeModule_properSubset(comparer, a, b) {\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\n    SetTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\n                continue SetTreeModule_filterAux;\n            }\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_filter(comparer, f, s) {\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\n    SetTreeModule_diffAux:\n    while (true) {\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\n        if (acc == null) {\n            return acc;\n        }\n        else if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                comparer_mut = comparer;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\n                continue SetTreeModule_diffAux;\n            }\n            else {\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_diff(comparer, a, b) {\n    return SetTreeModule_diffAux(comparer, b, a);\n}\n\nexport function SetTreeModule_union(comparer, t1, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\n                    }\n                    else {\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n            }\n        }\n        else {\n            return t1;\n        }\n    }\n    else {\n        return t2;\n    }\n}\n\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\n    SetTreeModule_intersectionAux:\n    while (true) {\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\n                comparer_mut = comparer;\n                b_mut = b;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = acc_2;\n                continue SetTreeModule_intersectionAux;\n            }\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_intersection(comparer, a, b) {\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\n    if (f(k)) {\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\n    }\n    else {\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\n    }\n}\n\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\n    SetTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue SetTreeModule_partitionAux;\n            }\n            else {\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_partition(comparer, f, s) {\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\n}\n\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\n    SetTreeModule_minimumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_minimumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_minimumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\n    SetTreeModule_maximumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Right(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_maximumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_maximumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_minimumElement(s) {\n    const matchValue = SetTreeModule_minimumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function SetTreeModule_maximumElement(s) {\n    const matchValue = SetTreeModule_maximumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport class SetTreeModule_SetIterator$1 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\n}\n\nexport function SetTreeModule_collapseLHS(stack_mut) {\n    SetTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const x = stack.head;\n            const rest = stack.tail;\n            if (x != null) {\n                const x2 = x;\n                if (x2 instanceof SetTreeNode$1) {\n                    stack_mut = (new List(SetTreeNode$1__get_Left(x2), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), new List(SetTreeNode$1__get_Right(x2), rest))));\n                    continue SetTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue SetTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return new List();\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_mkIterator(s) {\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(new List(s, new List())), false);\n}\n\nexport function SetTreeModule_notStarted() {\n    throw (new Error(\"Enumeration not started\"));\n}\n\nexport function SetTreeModule_alreadyFinished() {\n    throw (new Error(\"Enumeration already started\"));\n}\n\nexport function SetTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail == null) {\n            return SetTreeModule_alreadyFinished();\n        }\n        else if (matchValue.head != null) {\n            const t = matchValue.head;\n            return SetTreeLeaf$1__get_Key(t);\n        }\n        else {\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\n        }\n    }\n    else {\n        return SetTreeModule_notStarted();\n    }\n}\n\nexport function SetTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const t = matchValue.head;\n                if (t instanceof SetTreeNode$1) {\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = SetTreeModule_collapseLHS(matchValue.tail);\n                    return !(i.stack.tail == null);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function SetTreeModule_mkIEnumerator(s) {\n    let i = SetTreeModule_mkIterator(s);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return SetTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = SetTreeModule_mkIterator(s);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\n    SetTreeModule_compareStacks:\n    while (true) {\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\n        const matchValue = [l1, l2];\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[1].head != null) {\n                    if (matchValue[0].head != null) {\n                        const x1_3 = matchValue[0].head;\n                        const x2_3 = matchValue[1].head;\n                        if (x1_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\n                                if (x2_3 instanceof SetTreeNode$1) {\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                        if (c !== 0) {\n                                            return c | 0;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Right(x1_3), matchValue[0].tail));\n                                            l2_mut = (new List(SetTreeNode$1__get_Right(x2_3), matchValue[1].tail));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    else {\n                                        const matchValue_3 = [l1, l2];\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\n                                        if (matchValue_3[0].tail != null) {\n                                            if (matchValue_3[0].head != null) {\n                                                pattern_matching_result = 0;\n                                                t1_6 = matchValue_3[0].tail;\n                                                x1_4 = matchValue_3[0].head;\n                                            }\n                                            else if (matchValue_3[1].tail != null) {\n                                                if (matchValue_3[1].head != null) {\n                                                    pattern_matching_result = 1;\n                                                    t2_6 = matchValue_3[1].tail;\n                                                    x2_4 = matchValue_3[1].head;\n                                                }\n                                                else {\n                                                    pattern_matching_result = 2;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else if (matchValue_3[1].tail != null) {\n                                            if (matchValue_3[1].head != null) {\n                                                pattern_matching_result = 1;\n                                                t2_6 = matchValue_3[1].tail;\n                                                x2_4 = matchValue_3[1].head;\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result = 2;\n                                        }\n                                        switch (pattern_matching_result) {\n                                            case 0: {\n                                                if (x1_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = (new List(SetTreeNode$1__get_Left(x1_4), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0), t1_6)));\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4)), t1_6)));\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 1: {\n                                                if (x2_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new List(SetTreeNode$1__get_Left(x2_4), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4)), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 2: {\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                    if (c_1 !== 0) {\n                                        return c_1 | 0;\n                                    }\n                                    else {\n                                        comparer_mut = comparer;\n                                        l1_mut = (new List(SetTreeNode$1__get_Right(x1_3), matchValue[0].tail));\n                                        l2_mut = (new List(SetTreeModule_empty(), matchValue[1].tail));\n                                        continue SetTreeModule_compareStacks;\n                                    }\n                                }\n                            }\n                            else {\n                                const matchValue_4 = [l1, l2];\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\n                                if (matchValue_4[0].tail != null) {\n                                    if (matchValue_4[0].head != null) {\n                                        pattern_matching_result_1 = 0;\n                                        t1_7 = matchValue_4[0].tail;\n                                        x1_5 = matchValue_4[0].head;\n                                    }\n                                    else if (matchValue_4[1].tail != null) {\n                                        if (matchValue_4[1].head != null) {\n                                            pattern_matching_result_1 = 1;\n                                            t2_7 = matchValue_4[1].tail;\n                                            x2_5 = matchValue_4[1].head;\n                                        }\n                                        else {\n                                            pattern_matching_result_1 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else if (matchValue_4[1].tail != null) {\n                                    if (matchValue_4[1].head != null) {\n                                        pattern_matching_result_1 = 1;\n                                        t2_7 = matchValue_4[1].tail;\n                                        x2_5 = matchValue_4[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_1 = 2;\n                                }\n                                switch (pattern_matching_result_1) {\n                                    case 0: {\n                                        if (x1_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Left(x1_5), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0), t1_7)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5)), t1_7)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeNode$1__get_Left(x2_5), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0), t2_7)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5)), t2_7)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else if (x2_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                if (c_2 !== 0) {\n                                    return c_2 | 0;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeModule_empty(), matchValue[0].tail));\n                                    l2_mut = (new List(SetTreeNode$1__get_Right(x2_3), matchValue[1].tail));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            else {\n                                const matchValue_5 = [l1, l2];\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\n                                if (matchValue_5[0].tail != null) {\n                                    if (matchValue_5[0].head != null) {\n                                        pattern_matching_result_2 = 0;\n                                        t1_8 = matchValue_5[0].tail;\n                                        x1_6 = matchValue_5[0].head;\n                                    }\n                                    else if (matchValue_5[1].tail != null) {\n                                        if (matchValue_5[1].head != null) {\n                                            pattern_matching_result_2 = 1;\n                                            t2_8 = matchValue_5[1].tail;\n                                            x2_6 = matchValue_5[1].head;\n                                        }\n                                        else {\n                                            pattern_matching_result_2 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else if (matchValue_5[1].tail != null) {\n                                    if (matchValue_5[1].head != null) {\n                                        pattern_matching_result_2 = 1;\n                                        t2_8 = matchValue_5[1].tail;\n                                        x2_6 = matchValue_5[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 2;\n                                }\n                                switch (pattern_matching_result_2) {\n                                    case 0: {\n                                        if (x1_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Left(x1_6), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0), t1_8)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6)), t1_8)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeNode$1__get_Left(x2_6), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6)), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                            if (c_3 !== 0) {\n                                return c_3 | 0;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = matchValue[0].tail;\n                                l2_mut = matchValue[1].tail;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                    }\n                    else {\n                        const x2 = matchValue[1].head;\n                        const matchValue_1 = [l1, l2];\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\n                        if (matchValue_1[0].tail != null) {\n                            if (matchValue_1[0].head != null) {\n                                pattern_matching_result_3 = 0;\n                                t1_2 = matchValue_1[0].tail;\n                                x1 = matchValue_1[0].head;\n                            }\n                            else if (matchValue_1[1].tail != null) {\n                                if (matchValue_1[1].head != null) {\n                                    pattern_matching_result_3 = 1;\n                                    t2_2 = matchValue_1[1].tail;\n                                    x2_1 = matchValue_1[1].head;\n                                }\n                                else {\n                                    pattern_matching_result_3 = 2;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else if (matchValue_1[1].tail != null) {\n                            if (matchValue_1[1].head != null) {\n                                pattern_matching_result_3 = 1;\n                                t2_2 = matchValue_1[1].tail;\n                                x2_1 = matchValue_1[1].head;\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_3 = 2;\n                        }\n                        switch (pattern_matching_result_3) {\n                            case 0: {\n                                if (x1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeNode$1__get_Left(x1), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1)), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                if (x2_1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = (new List(SetTreeNode$1__get_Left(x2_1), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0), t2_2)));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1)), t2_2)));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 2: {\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                            }\n                        }\n                    }\n                }\n                else if (matchValue[0].head != null) {\n                    const x1_1 = matchValue[0].head;\n                    const matchValue_2 = [l1, l2];\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\n                    if (matchValue_2[0].tail != null) {\n                        if (matchValue_2[0].head != null) {\n                            pattern_matching_result_4 = 0;\n                            t1_4 = matchValue_2[0].tail;\n                            x1_2 = matchValue_2[0].head;\n                        }\n                        else if (matchValue_2[1].tail != null) {\n                            if (matchValue_2[1].head != null) {\n                                pattern_matching_result_4 = 1;\n                                t2_4 = matchValue_2[1].tail;\n                                x2_2 = matchValue_2[1].head;\n                            }\n                            else {\n                                pattern_matching_result_4 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else if (matchValue_2[1].tail != null) {\n                        if (matchValue_2[1].head != null) {\n                            pattern_matching_result_4 = 1;\n                            t2_4 = matchValue_2[1].tail;\n                            x2_2 = matchValue_2[1].head;\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_4 = 2;\n                    }\n                    switch (pattern_matching_result_4) {\n                        case 0: {\n                            if (x1_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = (new List(SetTreeNode$1__get_Left(x1_2), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2)), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 1: {\n                            if (x2_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = (new List(SetTreeNode$1__get_Left(x2_2), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0), t2_4)));\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2)), t2_4)));\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 2: {\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                        }\n                    }\n                }\n                else {\n                    comparer_mut = comparer;\n                    l1_mut = matchValue[0].tail;\n                    l2_mut = matchValue[1].tail;\n                    continue SetTreeModule_compareStacks;\n                }\n            }\n            else {\n                return 1;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_compare(comparer, t1, t2) {\n    if (t1 == null) {\n        if (t2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (t2 == null) {\n        return 1;\n    }\n    else {\n        return SetTreeModule_compareStacks(comparer, new List(t1, new List()), new List(t2, new List())) | 0;\n    }\n}\n\nexport function SetTreeModule_choose(s) {\n    return SetTreeModule_minimumElement(s);\n}\n\nexport function SetTreeModule_toList(t) {\n    const loop = (t$0027_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const t$0027 = t$0027_mut, acc = acc_mut;\n            if (t$0027 != null) {\n                const t2 = t$0027;\n                if (t2 instanceof SetTreeNode$1) {\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\n                    acc_mut = (new List(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc)));\n                    continue loop;\n                }\n                else {\n                    return new List(SetTreeLeaf$1__get_Key(t2), acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(t, new List());\n}\n\nexport function SetTreeModule_copyToArray(s, arr, i) {\n    let j = i | 0;\n    SetTreeModule_iter((x) => {\n        arr[j] = x;\n        j = (j + 1);\n    }, s);\n}\n\nexport function SetTreeModule_toArray(s) {\n    const n = SetTreeModule_count(s) | 0;\n    const res = new Array(n);\n    SetTreeModule_copyToArray(s, res, 0);\n    return res;\n}\n\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    SetTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            comparer_mut = comparer;\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\n            e_mut = e;\n            continue SetTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_ofSeq(comparer, c) {\n    const ie = getEnumerator(c);\n    try {\n        return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\n    }\n    finally {\n        ie.Dispose();\n    }\n}\n\nexport function SetTreeModule_ofArray(comparer, l) {\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport class FSharpSet {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpSet__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\n    }\n    toString() {\n        const this$ = this;\n        return (\"set [\" + join(\"; \", map_1((x) => {\n            let copyOfStruct = x;\n            return toString(copyOfStruct);\n        }, this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpSet\";\n    }\n    CompareTo(that) {\n        const s = this;\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const s = this;\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const s = this;\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    GetEnumerator() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    get size() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    add(k) {\n        const s = this;\n        throw (new Error(\"Set cannot be mutated\"));\n        return s;\n    }\n    clear() {\n        throw (new Error(\"Set cannot be mutated\"));\n    }\n    delete(k) {\n        throw (new Error(\"Set cannot be mutated\"));\n        return false;\n    }\n    has(k) {\n        const s = this;\n        return FSharpSet__Contains(s, k);\n    }\n    keys() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    values() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    entries() {\n        const s = this;\n        return map_1((v) => [v, v], s);\n    }\n    forEach(f, thisArg) {\n        const s = this;\n        iterate_1((x) => {\n            f(x, x, s);\n        }, s);\n    }\n}\n\nexport function FSharpSet$reflection(gen0) {\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\n}\n\nexport function FSharpSet_$ctor(comparer, tree) {\n    return new FSharpSet(comparer, tree);\n}\n\nexport function FSharpSet__get_Comparer(set$) {\n    return set$.comparer;\n}\n\nexport function FSharpSet__get_Tree(set$) {\n    return set$.tree;\n}\n\nexport function FSharpSet_Empty(comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\n}\n\nexport function FSharpSet__Add(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Remove(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__get_Count(s) {\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Contains(s, value) {\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Iterate(s, x) {\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Fold(s, f, z) {\n    const f_1 = f;\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__get_IsEmpty(s) {\n    return FSharpSet__get_Tree(s) == null;\n}\n\nexport function FSharpSet__Partition(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return [s, s];\n    }\n    else {\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\n    }\n}\n\nexport function FSharpSet__Filter(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return s;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\n    }\n}\n\nexport function FSharpSet__Map(s, f, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Exists(s, f) {\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__ForAll(s, f) {\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet_op_Subtraction(set1, set2) {\n    if (FSharpSet__get_Tree(set1) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_op_Addition(set1, set2) {\n    if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set1) == null) {\n        return set2;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_Intersection(a, b) {\n    if (FSharpSet__get_Tree(b) == null) {\n        return b;\n    }\n    else if (FSharpSet__get_Tree(a) == null) {\n        return a;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\n    }\n}\n\nexport function FSharpSet_IntersectionMany(sets) {\n    return reduce((s1, s2) => FSharpSet_Intersection(s1, s2), sets);\n}\n\nexport function FSharpSet_Equality(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\n}\n\nexport function FSharpSet_Compare(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\n}\n\nexport function FSharpSet__get_Choose(x) {\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MinimumElement(x) {\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MaximumElement(x) {\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToList(x) {\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToArray(x) {\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ComputeHashCode(this$) {\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = (((res << 1) + structuralHash(x_1)) + 631);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Math.abs(res) | 0;\n}\n\nexport function isEmpty(set$) {\n    return FSharpSet__get_IsEmpty(set$);\n}\n\nexport function contains(element, set$) {\n    return FSharpSet__Contains(set$, element);\n}\n\nexport function add(value, set$) {\n    return FSharpSet__Add(set$, value);\n}\n\nexport function singleton(value, comparer) {\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\n}\n\nexport function remove(value, set$) {\n    return FSharpSet__Remove(set$, value);\n}\n\nexport function union(set1, set2) {\n    return FSharpSet_op_Addition(set1, set2);\n}\n\nexport function unionMany(sets, comparer) {\n    return fold_2((s1, s2) => FSharpSet_op_Addition(s1, s2), FSharpSet_Empty(comparer), sets);\n}\n\nexport function intersect(set1, set2) {\n    return FSharpSet_Intersection(set1, set2);\n}\n\nexport function intersectMany(sets) {\n    return FSharpSet_IntersectionMany(sets);\n}\n\nexport function iterate(action, set$) {\n    FSharpSet__Iterate(set$, action);\n}\n\nexport function empty(comparer) {\n    return FSharpSet_Empty(comparer);\n}\n\nexport function forAll(predicate, set$) {\n    return FSharpSet__ForAll(set$, predicate);\n}\n\nexport function exists(predicate, set$) {\n    return FSharpSet__Exists(set$, predicate);\n}\n\nexport function filter(predicate, set$) {\n    return FSharpSet__Filter(set$, predicate);\n}\n\nexport function partition(predicate, set$) {\n    return FSharpSet__Partition(set$, predicate);\n}\n\nexport function fold(folder, state, set$) {\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\n}\n\nexport function foldBack(folder, set$, state) {\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\n}\n\nexport function map(mapping, set$, comparer) {\n    return FSharpSet__Map(set$, mapping, comparer);\n}\n\nexport function count(set$) {\n    return FSharpSet__get_Count(set$);\n}\n\nexport function ofList(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function ofArray(array, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\n}\n\nexport function toList(set$) {\n    return FSharpSet__ToList(set$);\n}\n\nexport function toArray(set$) {\n    return FSharpSet__ToArray(set$);\n}\n\nexport function toSeq(set$) {\n    return map_1((x) => x, set$);\n}\n\nexport function ofSeq(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function difference(set1, set2) {\n    return FSharpSet_op_Subtraction(set1, set2);\n}\n\nexport function isSubset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isSuperset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function isProperSubset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isProperSuperset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function minElement(set$) {\n    return FSharpSet__get_MinimumElement(set$);\n}\n\nexport function maxElement(set$) {\n    return FSharpSet__get_MaximumElement(set$);\n}\n\nexport function createMutable(source, comparer) {\n    return HashSet_$ctor_Z6150332D(source, comparer);\n}\n\nexport function distinct(xs, comparer) {\n    return delay(() => {\n        const set$ = HashSet_$ctor_Z6150332D(empty_1(), comparer);\n        return collect((x) => (HashSet__Add_2B595(set$, x) ? singleton_1(x) : empty_1()), xs);\n    });\n}\n\nexport function distinctBy(projection, xs, comparer) {\n    return delay(() => {\n        const set$ = HashSet_$ctor_Z6150332D(empty_1(), comparer);\n        return collect((x) => (HashSet__Add_2B595(set$, projection(x)) ? singleton_1(x) : empty_1()), xs);\n    });\n}\n\nexport function unionWith(s1, s2) {\n    return fold_2((acc, x) => acc.add(x), s1, s2);\n}\n\nexport function intersectWith(s1, s2, comparer) {\n    const s2_1 = ofSeq(s2, comparer);\n    const enumerator = getEnumerator(s1.keys());\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (!FSharpSet__Contains(s2_1, x)) {\n                void s1.delete(x);\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function exceptWith(s1, s2) {\n    const enumerator = getEnumerator(s2);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            void s1.delete(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function isSubsetOf(s1, s2, comparer) {\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isSupersetOf(s1, s2, comparer) {\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSubsetOf(s1, s2, comparer) {\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSupersetOf(s1, s2, comparer) {\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\n","\nexport const data = \"Jarov\\t49.946944, 14.0675\\t1882\\tVojtěch Skopový\\t\\tnarození\\nVosůvek\\t49.85, 14.091389\\t1841\\tVojtěch Skopový\\t\\tnarození        edgeColorGrey\\nVosov\\t49.85, 14.083333\\t1841\\tVojtěch Skopový\\t\\to\\nVosůvek\\t49.85, 14.091389\\t1817\\tJosef Skopový\\t\\tnarození\\nSkřipel\\t49.842068, 14.067082\\t1821\\tVeronika Eiseltová\\t\\tnarození\\nVosůvek\\t49.85, 14.091389\\t1821\\tVeronika Eiseltová\\t\\to\\nVosůvek\\t49.85, 14.091389\\t1783\\tVáclav Skopový\\t\\tnarození\\nChlumec\\t49.827769, 14.087077\\t1789\\tLudmila Frajerová\\t\\tnarození\\nSkřipel\\t49.842068, 14.067082\\t1789\\tLudmila Frajerová\\t\\to\\nVosov\\t49.85, 14.083333\\t1789\\tVáclav Eiselt\\t\\tnarození\\nSkřipel\\t49.842068, 14.067082\\t1789\\tVáclav Eiselt\\t\\to\\nNeumětely\\t49.852542, 14.036667\\t1782\\tVeronika Kocmanová\\t\\t\\nSkřipel\\t49.842068, 14.067082\\t1782\\tVeronika Kocmanová\\t\\t\\nVosůvek\\t49.85, 14.091389\\t1771\\tJosef Skopový\\t\\tnarození\\nVosov\\t49.85, 14.083333\\t1775\\tMagdalena Stibalová\\tzhruba\\tnarození\\nVosůvek\\t49.85, 14.091389\\t1775\\tMagdalena Stibalová\\tzhruba\\to\\nChlumec\\t49.827769, 14.087077\\t1748\\tMatěj Frajer\\t\\tnarození\\nSkřipel\\t49.842068, 14.067082\\t1757\\tKateřina Münzpergerová\\t\\tnarození\\nChlumec\\t49.827769, 14.087077\\t1757\\tKateřina Münzpergerová\\t\\to\\nSkřipel\\t49.842068, 14.067082\\t1755\\tFrantišek Eiselt\\t\\to\\nVosov\\t49.85, 14.083333\\t1755\\tFrantišek Eiselt\\t\\tnarození\\nSkuhrov\\t49.873398, 14.146781\\t1760\\tAnna Trnková\\tzhruba\\tnarození\\nVosov\\t49.85, 14.083333\\t1760\\tAnna Trnková\\tzhruba\\to\\nNeumětely\\t49.852542, 14.036667\\t1755\\tVáclav Kocman\\tzhruba\\tnarození\\nNeumětely\\t49.852542, 14.036667\\t1758\\tKateřina Šebeková\\t\\tnarození\\nVosůvek\\t49.85, 14.091389\\t1730\\tTomáš Skopový\\tzhruba\\tnarození\\nChlumec\\t49.827769, 14.087077\\t1745\\tDorota Šmejkalová\\tzhruba\\tnarození\\nVosůvek\\t49.85, 14.091389\\t1745\\tDorota Šmejkalová\\tzhruba\\to\\nVosov\\t49.85, 14.083333\\t1735\\tMatěj Stibal\\tzhruba\\t\\nChlumec\\t49.827769, 14.087077\\t1725\\tJiří Frajer\\tzhruba\\t\\nSkřipel\\t49.842068, 14.067082\\t1721\\tJan Münzperger\\t\\t\\nSkřipel\\t49.842068, 14.067082\\t1726\\tAntonín Eiselt\\t\\tnarození\\nVosov\\t49.85, 14.083333\\t1726\\tAntonín Eiselt\\t\\to\\nVosov\\t49.85, 14.083333\\t1732\\tAnna Prochásková\\t\\tnarození\\nVosůvek\\t49.85, 14.091389\\t1710\\tVavřinec Skopový\\tzhruba\\tnarození\\nVosůvek\\t49.85, 14.091389\\t1685\\tVáclav Skopový\\tzhruba\\tnarození\\nVosůvek\\t49.85, 14.091389\\t1660\\tJiří Skopový\\tzhruba\\t\\nSkuhrov\\t49.873398, 14.146781\\t1735\\tFrantišek Trnka\\tzhruba\\t\\nNeumětely\\t49.852542, 14.036667\\t1735\\tAdalbert Kocman\\tzhruba\\t\\nNeumětely\\t49.852542, 14.036667\\t1735\\tVáclav Šebek\\tzhruba\\t\\nLážovice\\t49.85829, 14.071334\\t1847\\tBarbora Houbová\\t\\tnarození\\nVosov\\t49.85, 14.083333\\t1847\\tBarbora Houbová\\t\\to\\nVinařice\\t49.892629, 14.098126\\t1796\\tFrantišek Houba\\t\\tnarození\\nLážovice\\t49.85829, 14.071334\\t1796\\tFrantišek Houba\\t\\to\\nLážovice\\t49.85829, 14.071334\\t1810\\tBarbora Veselá\\t\\tnarození\\nVinařice\\t49.892629, 14.098126\\t1771\\tVáclav Houba\\t\\tnarození\\nNesvačily\\t49.881342, 14.124413\\t1776\\tMarie Šťastná\\t\\tnarození\\nVšeradice\\t49.873735, 14.10482\\t1776\\tMarie Šťastná\\t\\to\\nVinařice\\t49.892629, 14.098126\\t1776\\tMarie Šťastná\\t\\to\\nLážovice\\t49.85829, 14.071334\\t1782\\tMatěj Veselý\\t\\tnarození\\nBykoš\\t49.883037, 14.063718\\t1784\\tKateřina Kliková\\t\\tnarození\\nLážovice\\t49.85829, 14.071334\\t1784\\tKateřina Kliková\\t\\to\\nVinařice\\t49.892629, 14.098126\\t1728\\tMartin Houba\\t\\t\\nVšeradice\\t49.873735, 14.10482\\t1734\\tJosef Šťastný\\t\\tnarození\\nNesvačily\\t49.881342, 14.124413\\t1731\\tKateřina Kačírková\\t\\tnarození\\nVšeradice\\t49.873735, 14.10482\\t1731\\tKateřina Kačírková\\t\\to\\nLážovice\\t49.85829, 14.071334\\t1755\\tVojtěch Veselý\\tzhruba\\t\\nBykoš\\t49.883037, 14.063718\\t1745\\tMichal Klika\\tzhruba\\tnarození\\nSuchomasty\\t49.895439, 14.056667\\t1745\\tLudmila Staňková\\tzhruba\\tnarození\\nBykoš\\t49.883037, 14.063718\\t1745\\tLudmila Staňková\\tzhruba\\to\\nVšeradice\\t49.873735, 14.10482\\t1702\\tVáclav Šťastný\\t\\t\\nNesvačily\\t49.881342, 14.124413\\t1705\\tOndřej Kačírek\\tzhruba\\t\\nBykoš\\t49.883037, 14.063718\\t1720\\tVáclav Klika\\tzhruba\\t\\nSuchomasty\\t49.895439, 14.056667\\t1720\\tJan Staněk\\tzhruba\\t\\nBzová\\t49.897975, 13.86246\\t1882\\tBarbora Drábeková\\t\\tnarození\\nBzová\\t49.897975, 13.86246\\t1845\\tVojtěch Drábek\\t\\tnarození\\nBzová\\t49.897975, 13.86246\\t1848\\tMarie Spoustová\\t\\tnarození\\nBzová\\t49.897975, 13.86246\\t1812\\tMatěj Drábek\\t\\tnarození\\nHlohovičky\\t49.894167, 13.673611\\t1825\\tAnna Herinková\\t\\tnarození\\nBzová\\t49.897975, 13.86246\\t1825\\tAnna Herinková\\t\\to\\nBzová\\t49.897975, 13.86246\\t1810\\tTomáš Spousta\\t\\tnarození\\nKublov\\t49.943786, 13.876735\\t1811\\tKateřina Tvrzová\\t\\tnarození\\nBzová\\t49.897975, 13.86246\\t1811\\tKateřina Tvrzová\\t\\to\\nBzová\\t49.897975, 13.86246\\t1789\\tMatěj Drábek\\t\\tnarození\\nHředle\\t49.903882, 13.920662\\t1796\\tLudmila Bradáčová\\tzhruba\\tnarození\\nBzová\\t49.897975, 13.86246\\t1796\\tLudmila Bradáčová\\tzhruba\\to\\nHlohovičky\\t49.894167, 13.673611\\t1788\\tJosef Häring\\tzhruba\\tnarození\\nTýček\\t49.869333, 13.794372\\t1799\\tVeronika Herinková\\tzhruba\\tnarození\\nHlohovičky\\t49.894167, 13.673611\\t1799\\tVeronika Herinková\\tzhruba\\to\\nBřezová\\t49.904167, 13.883069\\t1778\\tJosef Spousta\\t\\tnarození\\nBzová\\t49.897975, 13.86246\\t1778\\tJosef Spousta\\t\\to\\nHředle\\t49.903882, 13.920662\\t1779\\tKateřina Sklenářová\\t\\tnarození\\nBřezová\\t49.904167, 13.883069\\t1779\\tKateřina Sklenářová\\t\\to\\nBroumy\\t49.955155, 13.852324\\t1777\\tFrantišek Tvrz\\t\\tnarození\\nKublov\\t49.943786, 13.876735\\t1777\\tFrantišek Tvrz\\t\\to\\nKublov\\t49.943786, 13.876735\\t1773\\tKateřina Holečková\\t\\tnarození\\nBzová\\t49.897975, 13.86246\\t1754\\tVáclav Drábek\\tzhruba\\t\\nHředle\\t49.903882, 13.920662\\t1770\\tJan Bradáč\\tzhruba\\t\\nTýček\\t49.869333, 13.794372\\t1770\\tAntonín Herink\\tzhruba\\tnarození\\nDrozdov\\t49.863225, 13.840636\\t1775\\tEva Vinslová\\tzhruba\\tnarození\\nTýček\\t49.869333, 13.794372\\t1775\\tEva Vinslová\\tzhruba\\to\\nBřezová\\t49.904167, 13.883069\\t1754\\tJosef Spousta\\t\\tnarození\\nHředle\\t49.903882, 13.920662\\t1755\\tRozina Sklenárová\\tzhruba\\tnarození\\nBřezová\\t49.904167, 13.883069\\t1755\\tRozina Sklenárová\\tzhruba\\to\\nHředle\\t49.903882, 13.920662\\t1760\\tTomáš Skleonář\\tzhruba\\tnarození\\nZbirov\\t49.813451, 13.799689\\t1760\\tLudmila později Sklenářová\\tzhruba\\tnarození\\nHředle\\t49.903882, 13.920662\\t1760\\tLudmila později Sklenářová\\tzhruba\\to\\nBroumy\\t49.955155, 13.852324\\t1745\\tJosef Tvrz\\t\\tnarození\\nBroumy\\t49.955155, 13.852324\\t1748\\tMagdalena Krupičková\\t\\tnarození\\nZdice\\t49.912159, 13.977528\\t1750\\tJosef Holeček\\tzhruba\\tnarození\\nKublov\\t49.943786, 13.876735\\t1750\\tJosef Holeček\\tzhruba\\to\\nKublov\\t49.943786, 13.876735\\t1750\\tKateřina Pavlíková\\tzhruba\\tnarození\\nBřezová\\t49.904167, 13.883069\\t1730\\tMartin Spousta\\tzhruba\\tnarození\\nKublov\\t49.943786, 13.876735\\t1730\\tLudmila později Spoustová\\tzhruba\\tnarození\\nBřezová\\t49.904167, 13.883069\\t1730\\tLudmila později Spoustová\\tzhruba\\to\\nHředle\\t49.903882, 13.920662\\t1725\\tDaniel Sklenář\\tzhruba\\t\\nBřezová\\t49.904167, 13.883069\\t1705\\tVáclav Spousta\\tzhruba\\t\\nBroumy\\t49.955155, 13.852324\\t1714\\tVáclav Tvrz\\t\\tnarození\\nBroumy\\t49.955155, 13.852324\\t1720\\tDorota Pelcová\\tzhruba\\tnarození\\nBroumy\\t49.955155, 13.852324\\t1720\\tJan Krupička\\tzhruba\\t\\nZdice\\t49.912159, 13.977528\\t1720\\tMatěj Holeček\\tzhruba\\t\\nKublov\\t49.943786, 13.876735\\t1725\\tJosef Pavlík\\tzhruba\\t\\nZbečno\\t50.041882, 13.920429\\t1690\\tVeronika Semencová\\tzhruba\\tnarození\\nBroumy\\t49.955155, 13.852324\\t1690\\tVeronika Semencová\\tzhruba\\to\\nMěstečko\\t50.050723, 13.863631\\t1687\\tJindřich Tvrz\\t\\tnarození\\nBroumy\\t49.955155, 13.852324\\t1687\\tJindřich Tvrz\\t\\to\\nZbečno\\t50.041882, 13.920429\\t1665\\tJan Semenec\\t\\tnarození\\nAujezdec nad Zbečnem\\t50.041389, 13.903889\\t1668\\tAnna Vysoká\\t\\tnarození\\nZbečno\\t50.041882, 13.920429\\t1668\\tAnna Vysoká\\t\\to\\nMěstečko\\t50.050723, 13.863631\\t1660\\tAdam Tvrz\\tzhruba\\t\\nKozohory\\t49.776111, 14.268333\\t1875\\tJosef Pinta\\t\\tnarození\\nHranice\\t49.756667, 14.251667\\t1844\\tJosef Pinta\\t\\tnarození\\nKozohory\\t49.776111, 14.268333\\t1844\\tJosef Pinta\\t\\to\\nDrhovy\\t49.73914, 14.232433\\t1844\\tMarie Hovorková\\t\\tnarození\\nKozohory\\t49.776111, 14.268333\\t1844\\tMarie Hovorková\\t\\to\\nHranice\\t49.756667, 14.251667\\t1815\\tJosef Pinta\\t\\tnarození\\nHranice\\t49.756667, 14.251667\\t1822\\tMagdalena Mašková\\t\\tnarození\\nDrhovy\\t49.73914, 14.232433\\t1806\\tFrantišek Hovorka\\t\\tnarození\\nLibčice\\t49.753611, 14.308889\\t1817\\tMarie Pokorná\\t\\tnarození\\nDrhovy\\t49.73914, 14.232433\\t1817\\tMarie Pokorná\\t\\to\\nJablonce u Nečína\\t49.685, 14.224167\\t1790\\tMartin Pinta\\t\\tnarození\\nHranice\\t49.756667, 14.251667\\t1790\\tMartin Pinta\\t\\to\\nŽebráky\\t49.704167, 14.249722\\t1781\\tKateřina Masopustová\\t\\tnarození\\nHranice\\t49.756667, 14.251667\\t1781\\tKateřina Masopustová\\t\\to\\nHranice\\t49.756667, 14.251667\\t1761\\tMartin Mašek\\tzhruba\\tnarození\\nHranice\\t49.756667, 14.251667\\t1780\\tMarie Koza\\tzhruba\\tnarození\\nDrhovy\\t49.73914, 14.232433\\t1783\\tJan Hovorka\\tzhruba\\tnarození\\nSkalice\\t49.715556, 14.186944\\t1780\\tMagdalena Soukupová\\tzhruba\\tnarození\\nDrhovy\\t49.73914, 14.232433\\t1780\\tMagdalena Soukupová\\tzhruba\\to\\nLibčice\\t49.753611, 14.308889\\t1786\\tJosef Pokorný\\t\\tnarození\\nNové Dvory\\t49.803302, 14.35697\\t1792\\tRozálie Hájek\\tzhruba\\tnarození\\nLibčice\\t49.753611, 14.308889\\t1792\\tRozálie Hájek\\tzhruba\\to\\nPlaná\\t49.564200, 14.223400\\t1757\\tFranz Pinta\\t\\tnarození\\nJablonce u Nečína\\t49.685, 14.224167\\t1757\\tFranz Pinta\\t\\to\\nJablonce u Nečína\\t49.685, 14.224167\\t1760\\tAnna Žalová\\tzhruba\\to\\nŽebráky\\t49.704167, 14.249722\\t1750\\tMatěj Masopust\\tzhruba\\t\\nDrašetice\\t49.745556, 14.296667\\t1735\\tJosef Mašek\\tzhruba\\tnarození\\nHranice\\t49.756667, 14.251667\\t1735\\tJosef Mašek\\tzhruba\\to\\nStarý Knín\\t49.7869, 14.2851\\t1740\\tMagdalena později Mašková\\tzhruba\\tnarození\\nHranice\\t49.756667, 14.251667\\t1740\\tMagdalena později Mašková\\tzhruba\\to\\nHranice\\t49.756667, 14.251667\\t1750\\tVít Koza\\tzhruba\\t\\nDrhovy\\t49.73914, 14.232433\\t1750\\tMatěj Hovorka\\tzhruba\\t\\nSkalice\\t49.715556, 14.186944\\t1750\\tTomáš Soupuk\\tzhruba\\t\\nValká Lečice\\t49.81479, 14.323537\\t1762\\tMatěj Pokorný\\tzhruba\\tnarození\\nLibčice\\t49.753611, 14.308889\\t1762\\tMatěj Pokorný\\tzhruba\\to\\nLibčice\\t49.753611, 14.308889\\t1766\\tKateřina Butková\\tzhruba\\tnarození\\nNové Dvory\\t49.803302, 14.35697\\t1770\\tVáclav Hájěk\\tzhruba\\t\\nValká Lečice\\t49.81479, 14.323537\\t1735\\tVáclav Pokorný\\tzhruba\\t\\nLipiny\\t49.699444, 14.249167\\t1729\\tJan Budka\\t\\tnarození\\nLibčice\\t49.753611, 14.308889\\t1729\\tJan Budka\\t\\to\\nPlaná\\t49.564200, 14.223400\\t1706\\tJan Pinta\\t\\tnarození\\nPlaná\\t49.564200, 14.223400\\t1725\\tRozina Lumpusová\\tzhruba\\t\\nPlaná\\t49.564200, 14.223400\\t1670\\tJan Pinta\\tzhruba\\tnarození\\nPlaná\\t49.564200, 14.223400\\t1640\\tMatěj Pinta\\tzhruba\\tnarození\\nPlaná\\t49.564200, 14.223400\\t1590\\tJan Pinta\\tzhruba\\tnarození\\nPlaná\\t49.564200, 14.223400\\t1565\\tMatyáš Pinta\\tzhruba\\t\\nMokrovraty\\t49.797315, 14.255507\\t1880\\tMarie Kolářová\\t\\tnarození\\nChramiště\\t49.764722, 14.275\\t1845\\tFrantišek Kolář\\t\\tnarození\\nMokrovraty\\t49.797315, 14.255507\\t1845\\tFrantišek Kolář\\t\\to\\nMokrovraty\\t49.797315, 14.255507\\t1852\\tMarie Durdilová\\t\\tnarození\\nVelké Hraštice\\t49.805833, 14.293611\\t1813\\tFrantišek Kolář\\t\\tnarození\\nChramiště\\t49.764722, 14.275\\t1813\\tFrantišek Kolář\\t\\to\\nChramiště\\t49.764722, 14.275\\t1814\\tAnna Čermáková\\t\\tnarození\\nMokrovraty\\t49.797315, 14.255507\\t1821\\tJan Durdil\\t\\tnarození\\nLíšnice\\t49.888859, 14.319021\\t1826\\tPaulina Dvořáková\\t\\tnarození\\nMokrovraty\\t49.797315, 14.255507\\t1826\\tPaulina Dvořáková\\t\\to\\nMalá Hraštice\\t49.807584, 14.279928\\t1779\\tMartin Kolář\\t\\tnarození\\nVelká Lečice\\t49.81479, 14.323537\\t1781\\tAnna Šrámková\\t\\tnarození\\nVelké Hraštice\\t49.805833, 14.293611\\t1781\\tAnna Šrámková\\tzhruba\\to\\nChramiště\\t49.764722, 14.275\\t1780\\tVojtěch Čermák\\tzhruba\\tnarození\\nZáborná Lhota\\t49.768889, 14.322778\\t1784\\tLudmila Šnejdarová\\t\\tnarození\\nChramiště\\t49.764722, 14.275\\t1784\\tLudmila Šnejdarová\\t\\to\\nMokrovraty\\t49.797315, 14.255507\\t1777\\tMatěj Durdil\\tzhruba\\tnarození\\nMokrovraty\\t49.797315, 14.255507\\t1780\\tAlžběta Novotná\\t\\tnarození\\nLíšnice\\t49.888859, 14.319021\\t1784\\tJan Dvořák\\t\\tnarození\\nKlínec\\t49.900931, 14.343309\\t1784\\tMarie Rákosníková\\t\\tnarození\\nLíšnice\\t49.888859, 14.319021\\t1784\\tMarie Rákosníková\\t\\to\\nMalá Hraštice\\t49.807584, 14.279928\\t1750\\tVáclav Kolář\\tzhruba\\t\\nVelká Lečice\\t49.81479, 14.323537\\t1750\\tJosef Šrámek\\tzhruba\\t\\nZáborná Lhota\\t49.768889, 14.322778\\t1754\\tFrantišek Šnejdar\\tzhruba\\t\\nMokrovraty\\t49.797315, 14.255507\\t1750\\tVáclav Durdil\\tzhruba\\t\\nMokrovraty\\t49.797315, 14.255507\\t1740\\tTomáš Novotný\\tzhruba\\t\\nMokrovraty\\t49.797315, 14.255507\\t1740\\tAnna Boušková\\tzhruba\\t\\nLíšnice\\t49.888859, 14.319021\\t1750\\tVojtěch Dvořák\\tzhruba\\t\\nLíšnice\\t49.888859, 14.319021\\t1760\\tDorota Jelínková\\tzhruba\\t\\nKlínec\\t49.900931, 14.343309\\t1760\\tMatěj Rákosník\\tzhruba\\t\\nKlínec\\t49.900931, 14.343309\\t1760\\tKateřina Kotlář\\tzhruba\\t\\nToušice\\t49.987949, 15.006537\\t1875\\tAntonín Starý\\t\\tnarození\\nPřerov\\t49.455, 17.465833\\t1875\\tAntonín Starý\\t\\to\\nDolní Chvatliny\\t49.980562, 15.069348\\t1847\\tVáclav Starý\\t\\tnarození\\nToušice\\t49.987949, 15.006537\\t1847\\tVáclav Starý\\t\\to\\nKrásno\\t49.475, 17.971944\\t1844\\tMarie Jelínková\\t\\tnarození\\nToušice\\t49.987949, 15.006537\\t1844\\tMarie Jelínková\\t\\to\\nDolní Chvatliny\\t49.980562, 15.069348\\t1808\\tFrantišek Starý\\t\\tnarození\\nBečváry\\t49.956769, 15.079873\\t1813\\tAnna Jiranova\\t\\tnarození\\nDolní Chvatliny\\t49.980562, 15.069348\\t1813\\tAnna Jiranova\\t\\to\\nNesměň\\t49.936389, 15.017222\\t1811\\tFrantišek Jelínek\\t\\tnarození\\nKrásno\\t49.475, 17.971944\\t1811\\tFrantišek Jelínek\\t\\to\\nNesměň\\t49.936389, 15.017222\\t1818\\tMarie Kořínková\\t\\tnarození\\nKrásno\\t49.475, 17.971944\\t1818\\tMarie Kořínková\\t\\to\\nZásmuky\\t49.954767, 15.030642\\t1772\\tAntonín Starý\\t\\tnarození\\nDolní Chvatliny\\t49.980562, 15.069348\\t1772\\tAntonín Starý\\t\\to\\nDolní Chvatliny\\t49.980562, 15.069348\\t1782\\tDorota Zeminová\\tzhruba\\tnarození\\nBečváry\\t49.956769, 15.079873\\t1785\\tFrantišek Jirán\\tzhruba\\tnarození\\nPoboř\\t50.023611, 15.047778\\t1787\\tAnna Hanušová\\tzhruba\\tnarození\\nNesměň\\t49.936389, 15.017222\\t1776\\tFranc Jelínek\\tzhruba\\tnarození\\nBřežany\\t50.034986, 15.079016\\t1780\\tAlžběta Vošaustová\\tzhruba\\tnarození\\nNesměň\\t49.936389, 15.017222\\t1780\\tFranc Kořínek\\tzhruba\\t\\nDoubravčany\\t49.961389, 15.004167\\t1780\\tMarie Beránková\\tzhruba\\t\\nVavřinec\\t49.913702, 15.033207\\t1719\\tMatěj Starý\\t\\tnarození\\nZásmuky\\t49.954767, 15.030642\\t1719\\tMatěj Starý\\t\\to\\nMlíkovice\\t49.981111, 15.026389\\t1737\\tAnna Svatušková\\t\\tnarození\\nZásmuky\\t49.954767, 15.030642\\t1737\\tAnna Svatušková\\t\\to\\nDolní Chvatliny\\t49.980562, 15.069348\\t1755\\tTomáš Zemina\\tzhruba\\t\\nVelké Bečváry\\t49.956769, 15.079873\\t1755\\tFranc Jirán\\tzhruba\\t\\nPoboř\\t50.023611, 15.047778\\t1760\\tVáclav Hanuš\\tzhruba\\t\\nNesměň\\t49.936389, 15.017222\\t1750\\tJosef Jelínek\\tzhruba\\t\\nBřežany\\t50.034986, 15.079016\\t1755\\tMatěj Vošaust\\tzhruba\\t\\nDoubravčany\\t49.961389, 15.004167\\t1755\\tJan Beránek\\tzhruba\\t\\nMlíkovice\\t49.981111, 15.026389\\t1710\\tVáclav Svatuška\\tzhruba\\t\\nChmeliště\\t49.896389, 15.054444\\t1695\\tLukáš Starý\\tzhruba\\t\\nHranice\\t49.547964, 17.734723\\t1875\\tMarie Pazderová\\t\\tnarození\\nPřerov\\t49.455, 17.465833\\t1875\\tMarie Pazderová\\t\\to\\nSkalička\\t49.515396, 17.795895\\t1837\\tFilip Pazdera\\t\\tnarození\\nLipník\\t49.527549, 17.586338\\t1837\\tFilip Pazdera\\t\\to\\nHranice\\t49.547964, 17.734723\\t1837\\tFilip Pazdera\\t\\to\\nDřevohostice\\t49.425947, 17.592069\\t1841\\tFrantiška Malíková\\t\\tnarození\\nLipník\\t49.527549, 17.586338\\t1841\\tFrantiška Malíková\\t\\to\\nHranice\\t49.547964, 17.734723\\t1841\\tFrantiška Malíková\\t\\to\\nDolní Újezd\\t49.545973, 17.535506\\t1802\\tFrantišek Pazdera\\tzhruba\\tnarození\\nTrnávka\\t49.536389, 17.558333\\t1802\\tFrantišek Pazdera\\tzhruba\\to\\nSkalička\\t49.515396, 17.795895\\t1802\\tFrantišek Pazdera\\tzhruba\\to\\nDolní Újezd\\t49.545973, 17.535506\\t1804\\tAnna Nováková\\t\\tnarození\\nDřevohostice\\t49.425947, 17.592069\\t1806\\tAntonín Malík\\tzhruba\\tnarození\\nDřevohostice\\t49.425947, 17.592069\\t1812\\tJosefa Skálová\\t\\tnarození\\nDolní Újezd\\t49.545973, 17.535506\\t1780\\tJosef Pazdera\\tzhruba\\t\\nDolní Újezd\\t49.545973, 17.535506\\t1780\\tTomáš Novák\\tzhruba\\t\\nOsek\\t49.511219, 17.528323\\t1780\\tAnna Šurek\\tzhruba\\t\\nDřevohostice\\t49.425947, 17.592069\\t1780\\tJosef Malík\\tzhruba\\t\\nDřevohostice\\t49.425947, 17.592069\\t1780\\tBarbora Janečková\\tzhruba\\t\\nDřevohostice\\t49.425947, 17.592069\\t1779\\tPetr Skála\\tzhruba\\t\\nTurovice\\t49.423722, 17.580803\\t1780\\tAnežka Zlámalová\\t\\t\\nTurovice\\t49.423722, 17.580803\\t1753\\tPavel Zlámal\\t\\t\\nTurovice\\t49.423722, 17.580803\\t1719\\tCyril Zlámal\\t\\t\\nTurovice\\t49.423722, 17.580803\\t1695\\tMartin Zlámal\\tzhruba\\t\";\n\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { map } from \"./Seq.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { some } from \"../fable-library.3.1.5/Option.js\";\nimport Timer from \"../fable-library.3.1.5/Timer.js\";\nimport { add } from \"../fable-library.3.1.5/Observable.js\";\n\nexport function Log_onError(text, ex) {\n    console.error(some(text), ex);\n}\n\nexport function Log_toConsole(text, o) {\n    console.log(some(text), o);\n}\n\nexport function Timer_delay(interval, callback) {\n    let t;\n    let returnVal = new Timer(interval);\n    returnVal.AutoReset = false;\n    t = returnVal;\n    add(callback, t.Elapsed);\n    t.Enabled = true;\n    t.Start();\n}\n\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.1.5/List.js\";\nimport { singleton as singleton_1 } from \"../fable-library.3.1.5/AsyncBuilder.js\";\nimport { startImmediate, catchAsync } from \"../fable-library.3.1.5/Async.js\";\nimport { Timer_delay } from \"./prelude.fs.js\";\n\nexport function Cmd_exec(onError, dispatch, cmd) {\n    iterate((call) => {\n        try {\n            call(dispatch);\n        }\n        catch (ex) {\n            onError(ex);\n        }\n    }, cmd);\n}\n\nexport function Cmd_none() {\n    return empty();\n}\n\nexport function Cmd_map(f, cmd) {\n    return map((g) => ((arg_1) => {\n        g((arg) => {\n            arg_1(f(arg));\n        });\n    }), cmd);\n}\n\nexport function Cmd_batch(cmds) {\n    return concat(cmds);\n}\n\nexport function Cmd_ofSub(sub) {\n    return singleton(sub);\n}\n\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        try {\n            return dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n            return dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        try {\n            dispatch(ofSuccess(task(arg)));\n        }\n        catch (x) {\n        }\n    });\n}\n\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        try {\n            task(arg);\n        }\n        catch (x) {\n            dispatch(ofError(x));\n        }\n    });\n}\n\nexport function Cmd_OfFunc_result(msg) {\n    return singleton((dispatch) => {\n        dispatch(msg);\n    });\n}\n\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 0) {\n                arg_1(ofSuccess(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\n    return singleton((arg_1) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\n            const r = _arg1;\n            if (r.tag === 1) {\n                arg_1(ofError(r.fields[0]));\n                return singleton_1.Zero();\n            }\n            else {\n                return singleton_1.Zero();\n            }\n        })));\n    });\n}\n\nexport function Cmd_OfAsyncWith_result(start, task) {\n    return singleton((arg) => {\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\n            arg(_arg1);\n            return singleton_1.Zero();\n        })));\n    });\n}\n\nexport function Cmd_OfAsync_start(x) {\n    Timer_delay(0, (_arg1) => {\n        startImmediate(x);\n    });\n}\n\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\n    });\n}\n\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\n    return singleton((dispatch) => {\n        void task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\n    });\n}\n\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\n    return singleton((dispatch) => {\n        void task(arg).catch((arg_2) => {\n            dispatch(ofError(arg_2));\n        });\n    });\n}\n\nexport function Cmd_OfPromise_result(task) {\n    return singleton((dispatch) => {\n        void task.then(dispatch);\n    });\n}\n\nexport function Cmd_attemptFunc(task, arg, ofError) {\n    return Cmd_OfFunc_attempt(task, arg, ofError);\n}\n\n","import { toString, Record, Union } from \"../fable-library.3.1.5/Types.js\";\nimport { array_type, float64_type, int32_type, bool_type, obj_type, record_type, option_type, lambda_type, unit_type, class_type, union_type, string_type } from \"../fable-library.3.1.5/Reflection.js\";\n\nexport class FragmentProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\"];\n    }\n}\n\nexport function FragmentProp$reflection() {\n    return union_type(\"Fable.React.Props.FragmentProp\", [], FragmentProp, () => [[[\"Item\", string_type]]]);\n}\n\nexport class Prop extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Key\", \"Ref\", \"ref\", \"ref\"];\n    }\n}\n\nexport function Prop$reflection() {\n    return union_type(\"Fable.React.Props.Prop\", [], Prop, () => [[[\"Item\", string_type]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Element\"), unit_type)]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]], [[\"Item\", class_type(\"Fable.React.IRefValue`1\", [option_type(class_type(\"Browser.Types.Element\"))])]]]);\n}\n\nexport class DangerousHtml extends Record {\n    constructor(__html) {\n        super();\n        this.__html = __html;\n    }\n}\n\nexport function DangerousHtml$reflection() {\n    return record_type(\"Fable.React.Props.DangerousHtml\", [], DangerousHtml, () => [[\"__html\", string_type]]);\n}\n\nexport class DOMAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DangerouslySetInnerHTML\", \"OnCut\", \"OnPaste\", \"OnCompositionEnd\", \"OnCompositionStart\", \"OnCopy\", \"OnCompositionUpdate\", \"OnFocus\", \"OnBlur\", \"OnChange\", \"OnInput\", \"OnSubmit\", \"OnReset\", \"OnLoad\", \"OnError\", \"OnKeyDown\", \"OnKeyPress\", \"OnKeyUp\", \"OnAbort\", \"OnCanPlay\", \"OnCanPlayThrough\", \"OnDurationChange\", \"OnEmptied\", \"OnEncrypted\", \"OnEnded\", \"OnLoadedData\", \"OnLoadedMetadata\", \"OnLoadStart\", \"OnPause\", \"OnPlay\", \"OnPlaying\", \"OnProgress\", \"OnRateChange\", \"OnSeeked\", \"OnSeeking\", \"OnStalled\", \"OnSuspend\", \"OnTimeUpdate\", \"OnVolumeChange\", \"OnWaiting\", \"OnClick\", \"OnContextMenu\", \"OnDoubleClick\", \"OnDrag\", \"OnDragEnd\", \"OnDragEnter\", \"OnDragExit\", \"OnDragLeave\", \"OnDragOver\", \"OnDragStart\", \"OnDrop\", \"OnMouseDown\", \"OnMouseEnter\", \"OnMouseLeave\", \"OnMouseMove\", \"OnMouseOut\", \"OnMouseOver\", \"OnMouseUp\", \"OnSelect\", \"OnTouchCancel\", \"OnTouchEnd\", \"OnTouchMove\", \"OnTouchStart\", \"OnScroll\", \"OnWheel\", \"OnAnimationStart\", \"OnAnimationEnd\", \"OnAnimationIteration\", \"OnTransitionEnd\"];\n    }\n}\n\nexport function DOMAttr$reflection() {\n    return union_type(\"Fable.React.Props.DOMAttr\", [], DOMAttr, () => [[[\"Item\", DangerousHtml$reflection()]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.ClipboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.CompositionEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.FocusEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.KeyboardEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.DragEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.Event\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TouchEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.UIEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.WheelEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.AnimationEvent\"), unit_type)]], [[\"Item\", lambda_type(class_type(\"Browser.Types.TransitionEvent\"), unit_type)]]]);\n}\n\nexport class SVGAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"ClipPath\", \"Cx\", \"Cy\", \"D\", \"Dx\", \"Dy\", \"Fill\", \"FillOpacity\", \"FontFamily\", \"FontSize\", \"Fx\", \"Fy\", \"GradientTransform\", \"GradientUnits\", \"Height\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"Offset\", \"Opacity\", \"PatternContentUnits\", \"PatternUnits\", \"Points\", \"PreserveAspectRatio\", \"R\", \"Rx\", \"Ry\", \"SpreadMethod\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TextAnchor\", \"Transform\", \"Version\", \"ViewBox\", \"Width\", \"X1\", \"X2\", \"X\", \"XlinkActuate\", \"XlinkArcrole\", \"XlinkHref\", \"XlinkRole\", \"XlinkShow\", \"XlinkTitle\", \"XlinkType\", \"XmlBase\", \"XmlLang\", \"XmlSpace\", \"Y1\", \"Y2\", \"Y\", \"Custom\"];\n    }\n}\n\nexport function SVGAttr$reflection() {\n    return union_type(\"Fable.React.Props.SVGAttr\", [], SVGAttr, () => [[[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class HTMLAttr extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"DefaultChecked\", \"DefaultValue\", \"Accept\", \"AcceptCharset\", \"AccessKey\", \"Action\", \"AllowFullScreen\", \"AllowTransparency\", \"Alt\", \"aria-atomic\", \"aria-busy\", \"aria-checked\", \"aria-colcount\", \"aria-colindex\", \"aria-colspan\", \"aria-controls\", \"aria-current\", \"aria-describedby\", \"aria-details\", \"aria-disabled\", \"aria-errormessage\", \"aria-expanded\", \"aria-flowto\", \"aria-haspopup\", \"aria-hidden\", \"aria-invalid\", \"aria-keyshortcuts\", \"aria-label\", \"aria-labelledby\", \"aria-level\", \"aria-live\", \"aria-modal\", \"aria-multiline\", \"aria-multiselectable\", \"aria-orientation\", \"aria-owns\", \"aria-placeholder\", \"aria-posinset\", \"aria-pressed\", \"aria-readonly\", \"aria-relevant\", \"aria-required\", \"aria-roledescription\", \"aria-rowcount\", \"aria-rowindex\", \"aria-rowspan\", \"aria-selected\", \"aria-setsize\", \"aria-sort\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-valuetext\", \"Async\", \"AutoComplete\", \"AutoFocus\", \"AutoPlay\", \"Capture\", \"CellPadding\", \"CellSpacing\", \"CharSet\", \"Challenge\", \"Checked\", \"ClassID\", \"ClassName\", \"className\", \"Cols\", \"ColSpan\", \"Content\", \"ContentEditable\", \"ContextMenu\", \"Controls\", \"Coords\", \"CrossOrigin\", \"data-toggle\", \"DateTime\", \"Default\", \"Defer\", \"Dir\", \"Disabled\", \"Download\", \"Draggable\", \"EncType\", \"Form\", \"FormAction\", \"FormEncType\", \"FormMethod\", \"FormNoValidate\", \"FormTarget\", \"FrameBorder\", \"Headers\", \"Height\", \"Hidden\", \"High\", \"Href\", \"HrefLang\", \"HtmlFor\", \"HttpEquiv\", \"Icon\", \"Id\", \"InputMode\", \"Integrity\", \"Is\", \"KeyParams\", \"KeyType\", \"Kind\", \"Label\", \"Lang\", \"List\", \"Loop\", \"Low\", \"Manifest\", \"MarginHeight\", \"MarginWidth\", \"Max\", \"MaxLength\", \"Media\", \"MediaGroup\", \"Method\", \"Min\", \"MinLength\", \"Multiple\", \"Muted\", \"Name\", \"NoValidate\", \"Open\", \"Optimum\", \"Pattern\", \"Placeholder\", \"Poster\", \"Preload\", \"RadioGroup\", \"ReadOnly\", \"Rel\", \"Required\", \"Role\", \"Rows\", \"RowSpan\", \"Sandbox\", \"Scope\", \"Scoped\", \"Scrolling\", \"Seamless\", \"Selected\", \"Shape\", \"Size\", \"Sizes\", \"Span\", \"SpellCheck\", \"Src\", \"SrcDoc\", \"SrcLang\", \"SrcSet\", \"Start\", \"Step\", \"Summary\", \"TabIndex\", \"Target\", \"Title\", \"Type\", \"UseMap\", \"Value\", \"value\", \"Width\", \"Wmode\", \"Wrap\", \"About\", \"Datatype\", \"Inlist\", \"Prefix\", \"Property\", \"Resource\", \"Typeof\", \"Vocab\", \"AutoCapitalize\", \"AutoCorrect\", \"AutoSave\", \"ItemProp\", \"ItemScope\", \"ItemType\", \"ItemID\", \"ItemRef\", \"Results\", \"Security\", \"Unselectable\", \"Custom\"];\n    }\n}\n\nexport function HTMLAttr$reflection() {\n    return union_type(\"Fable.React.Props.HTMLAttr\", [], HTMLAttr, () => [[[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", bool_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", int32_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", array_type(string_type)]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport class CSSProp extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"AlignContent\", \"AlignItems\", \"AlignSelf\", \"AlignmentAdjust\", \"AlignmentBaseline\", \"All\", \"Animation\", \"AnimationDelay\", \"AnimationDirection\", \"AnimationDuration\", \"AnimationFillMode\", \"AnimationIterationCount\", \"AnimationName\", \"AnimationPlayState\", \"AnimationTimingFunction\", \"Appearance\", \"BackfaceVisibility\", \"Background\", \"BackgroundAttachment\", \"BackgroundBlendMode\", \"BackgroundClip\", \"BackgroundColor\", \"BackgroundComposite\", \"BackgroundImage\", \"BackgroundOrigin\", \"BackgroundPosition\", \"BackgroundPositionX\", \"BackgroundPositionY\", \"BackgroundRepeat\", \"BackgroundSize\", \"BaselineShift\", \"Behavior\", \"BlockSize\", \"Border\", \"BorderBlockEnd\", \"BorderBlockEndColor\", \"BorderBlockEndStyle\", \"BorderBlockEndWidth\", \"BorderBlockStart\", \"BorderBlockStartColor\", \"BorderBlockStartStyle\", \"BorderBlockStartWidth\", \"BorderBottom\", \"BorderBottomColor\", \"BorderBottomLeftRadius\", \"BorderBottomRightRadius\", \"BorderBottomStyle\", \"BorderBottomWidth\", \"BorderCollapse\", \"BorderColor\", \"BorderCornerShape\", \"BorderImage\", \"BorderImageOutset\", \"BorderImageRepeat\", \"BorderImageSlice\", \"BorderImageSource\", \"BorderImageWidth\", \"BorderInlineEnd\", \"BorderInlineEndColor\", \"BorderInlineEndStyle\", \"BorderInlineEndWidth\", \"BorderInlineStart\", \"BorderInlineStartColor\", \"BorderInlineStartStyle\", \"BorderInlineStartWidth\", \"BorderLeft\", \"BorderLeftColor\", \"BorderLeftStyle\", \"BorderLeftWidth\", \"BorderRadius\", \"BorderRight\", \"BorderRightColor\", \"BorderRightStyle\", \"BorderRightWidth\", \"BorderSpacing\", \"BorderStyle\", \"BorderTop\", \"BorderTopColor\", \"BorderTopLeftRadius\", \"BorderTopRightRadius\", \"BorderTopStyle\", \"BorderTopWidth\", \"BorderWidth\", \"Bottom\", \"BoxAlign\", \"BoxDecorationBreak\", \"BoxDirection\", \"BoxFlex\", \"BoxFlexGroup\", \"BoxLineProgression\", \"BoxLines\", \"BoxOrdinalGroup\", \"BoxShadow\", \"BoxSizing\", \"BreakAfter\", \"BreakBefore\", \"BreakInside\", \"CaptionSide\", \"CaretColor\", \"Clear\", \"Clip\", \"ClipPath\", \"ClipRule\", \"Color\", \"ColorInterpolation\", \"ColorInterpolationFilters\", \"ColorProfile\", \"ColorRendering\", \"ColumnCount\", \"ColumnFill\", \"ColumnGap\", \"ColumnRule\", \"ColumnRuleColor\", \"ColumnRuleStyle\", \"ColumnRuleWidth\", \"ColumnSpan\", \"ColumnWidth\", \"Columns\", \"Content\", \"CounterIncrement\", \"CounterReset\", \"Cue\", \"CueAfter\", \"Cursor\", \"Direction\", \"Display\", \"DominantBaseline\", \"EmptyCells\", \"EnableBackground\", \"Fill\", \"FillOpacity\", \"FillRule\", \"Filter\", \"Flex\", \"FlexAlign\", \"FlexBasis\", \"FlexDirection\", \"FlexFlow\", \"FlexGrow\", \"FlexItemAlign\", \"FlexLinePack\", \"FlexOrder\", \"FlexShrink\", \"FlexWrap\", \"Float\", \"FloodColor\", \"FloodOpacity\", \"FlowFrom\", \"Font\", \"FontFamily\", \"FontFeatureSettings\", \"FontKerning\", \"FontLanguageOverride\", \"FontSize\", \"FontSizeAdjust\", \"FontStretch\", \"FontStyle\", \"FontSynthesis\", \"FontVariant\", \"FontVariantAlternates\", \"FontVariantCaps\", \"FontVariantEastAsian\", \"FontVariantLigatures\", \"FontVariantNumeric\", \"FontVariantPosition\", \"FontWeight\", \"GlyphOrientationHorizontal\", \"GlyphOrientationVertical\", \"Grid\", \"GridArea\", \"GridAutoColumns\", \"GridAutoFlow\", \"GridAutoRows\", \"GridColumn\", \"GridColumnEnd\", \"GridColumnGap\", \"GridColumnStart\", \"GridGap\", \"GridRow\", \"GridRowEnd\", \"GridRowGap\", \"GridRowPosition\", \"GridRowSpan\", \"GridRowStart\", \"GridTemplate\", \"GridTemplateAreas\", \"GridTemplateColumns\", \"GridTemplateRows\", \"HangingPunctuation\", \"Height\", \"HyphenateLimitChars\", \"HyphenateLimitLines\", \"HyphenateLimitZone\", \"Hyphens\", \"ImageOrientation\", \"ImageRendering\", \"ImageResolution\", \"ImeMode\", \"InlineSize\", \"Isolation\", \"JustifyContent\", \"JustifySelf\", \"Kerning\", \"LayoutGrid\", \"LayoutGridChar\", \"LayoutGridLine\", \"LayoutGridMode\", \"LayoutGridType\", \"Left\", \"LetterSpacing\", \"LightingColor\", \"LineBreak\", \"LineClamp\", \"LineHeight\", \"ListStyle\", \"ListStyleImage\", \"ListStylePosition\", \"ListStyleType\", \"Margin\", \"MarginBlockEnd\", \"MarginBlockStart\", \"MarginBottom\", \"MarginInlineEnd\", \"MarginInlineStart\", \"MarginLeft\", \"MarginRight\", \"MarginTop\", \"MarkerEnd\", \"MarkerMid\", \"MarkerStart\", \"MarqueeDirection\", \"MarqueeStyle\", \"Mask\", \"MaskBorder\", \"MaskBorderRepeat\", \"MaskBorderSlice\", \"MaskBorderSource\", \"MaskBorderWidth\", \"MaskClip\", \"MaskComposite\", \"MaskImage\", \"MaskMode\", \"MaskOrigin\", \"MaskPosition\", \"MaskRepeat\", \"MaskSize\", \"MaskType\", \"MaxFontSize\", \"MaxHeight\", \"MaxWidth\", \"MinBlockSize\", \"MinHeight\", \"MinInlineSize\", \"MinWidth\", \"MixBlendMode\", \"ObjectFit\", \"ObjectPosition\", \"OffsetBlockEnd\", \"OffsetBlockStart\", \"OffsetInlineEnd\", \"OffsetInlineStart\", \"Opacity\", \"Order\", \"Orphans\", \"Outline\", \"OutlineColor\", \"OutlineOffset\", \"OutlineStyle\", \"OutlineWidth\", \"OverflowStyle\", \"OverflowWrap\", \"OverflowX\", \"OverflowY\", \"Padding\", \"PaddingBlockEnd\", \"PaddingBlockStart\", \"PaddingBottom\", \"PaddingInlineEnd\", \"PaddingInlineStart\", \"PaddingLeft\", \"PaddingRight\", \"PaddingTop\", \"PageBreakAfter\", \"PageBreakBefore\", \"PageBreakInside\", \"Pause\", \"PauseAfter\", \"PauseBefore\", \"Perspective\", \"PerspectiveOrigin\", \"PointerEvents\", \"Position\", \"PunctuationTrim\", \"Quotes\", \"RegionFragment\", \"Resize\", \"RestAfter\", \"RestBefore\", \"Right\", \"RubyAlign\", \"RubyMerge\", \"RubyPosition\", \"ScrollBehavior\", \"ScrollSnapCoordinate\", \"ScrollSnapDestination\", \"ScrollSnapType\", \"ShapeImageThreshold\", \"ShapeInside\", \"ShapeMargin\", \"ShapeOutside\", \"ShapeRendering\", \"Speak\", \"SpeakAs\", \"StopColor\", \"StopOpacity\", \"Stroke\", \"StrokeDasharray\", \"StrokeDashoffset\", \"StrokeLinecap\", \"StrokeLinejoin\", \"StrokeMiterlimit\", \"StrokeOpacity\", \"StrokeWidth\", \"TabSize\", \"TableLayout\", \"TextAlign\", \"TextAlignLast\", \"TextAnchor\", \"TextCombineUpright\", \"TextDecoration\", \"TextDecorationColor\", \"TextDecorationLine\", \"TextDecorationLineThrough\", \"TextDecorationNone\", \"TextDecorationOverline\", \"TextDecorationSkip\", \"TextDecorationStyle\", \"TextDecorationUnderline\", \"TextEmphasis\", \"TextEmphasisColor\", \"TextEmphasisPosition\", \"TextEmphasisStyle\", \"TextHeight\", \"TextIndent\", \"TextJustify\", \"TextJustifyTrim\", \"TextKashidaSpace\", \"TextLineThrough\", \"TextLineThroughColor\", \"TextLineThroughMode\", \"TextLineThroughStyle\", \"TextLineThroughWidth\", \"TextOrientation\", \"TextOverflow\", \"TextOverline\", \"TextOverlineColor\", \"TextOverlineMode\", \"TextOverlineStyle\", \"TextOverlineWidth\", \"TextRendering\", \"TextScript\", \"TextShadow\", \"TextTransform\", \"TextUnderlinePosition\", \"TextUnderlineStyle\", \"Top\", \"TouchAction\", \"Transform\", \"TransformBox\", \"TransformOrigin\", \"TransformOriginZ\", \"TransformStyle\", \"Transition\", \"TransitionDelay\", \"TransitionDuration\", \"TransitionProperty\", \"TransitionTimingFunction\", \"UnicodeBidi\", \"UnicodeRange\", \"UserFocus\", \"UserInput\", \"UserSelect\", \"VerticalAlign\", \"Visibility\", \"VoiceBalance\", \"VoiceDuration\", \"VoiceFamily\", \"VoicePitch\", \"VoiceRange\", \"VoiceRate\", \"VoiceStress\", \"VoiceVolume\", \"WhiteSpace\", \"WhiteSpaceTreatment\", \"Widows\", \"Width\", \"WillChange\", \"WordBreak\", \"WordSpacing\", \"WordWrap\", \"WrapFlow\", \"WrapMargin\", \"WrapOption\", \"WritingMode\", \"ZIndex\", \"Zoom\", \"Custom\"];\n    }\n}\n\nexport function CSSProp$reflection() {\n    return union_type(\"Fable.React.Props.CSSProp\", [], CSSProp, () => [[[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", string_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item\", obj_type]], [[\"Item1\", string_type], [\"Item2\", obj_type]]]);\n}\n\nexport function stringEnum(case$) {\n    return toString(case$);\n}\n\nexport function CSSProp_Overflow_25F0CD75(overflow, overflowY) {\n    if (overflowY == null) {\n        return [\"overflow\", stringEnum(overflow)];\n    }\n    else {\n        const value = overflowY;\n        return [\"overflow\", (stringEnum(overflow) + \" \") + stringEnum(value)];\n    }\n}\n\n","import { record_type, list_type, class_type, bool_type, string_type, union_type, getCaseTag, getCaseName } from \"../fable-library.3.1.5/Reflection.js\";\nimport { Record, toString, Union } from \"../fable-library.3.1.5/Types.js\";\nimport { stringHash, int32ToString } from \"../fable-library.3.1.5/Util.js\";\nimport { defaultArg, some } from \"../fable-library.3.1.5/Option.js\";\nimport { contains, filter, append, empty, cons, fold } from \"../fable-library.3.1.5/List.js\";\nimport { HTMLAttr } from \"../Fable.React.7.2.0/Fable.React.Props.fs.js\";\nimport { join } from \"../fable-library.3.1.5/String.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../fable-library.3.1.5/MapUtil.js\";\n\nexport function Reflection_getCaseName(case$) {\n    return getCaseName(case$);\n}\n\nexport function Reflection_getCaseTag(case$) {\n    return getCaseTag(case$);\n}\n\nexport class Screen extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"All\", \"desktop\", \"tablet\", \"mobile\", \"widescreen\", \"touch\", \"fullhd\"];\n    }\n}\n\nexport function Screen$reflection() {\n    return union_type(\"Fulma.Screen\", [], Screen, () => [[], [], [], [], [], [], []]);\n}\n\nexport function Screen_ToString_2D2414B4(screen) {\n    switch (screen.tag) {\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6: {\n            return \"-\" + Reflection_getCaseName(screen);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport class Color_IColor extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-black\", \"is-dark\", \"is-light\", \"is-white\", \"is-primary\", \"is-info\", \"is-success\", \"is-warning\", \"is-danger\", \"is-link\", \"is-black-bis\", \"is-black-ter\", \"is-grey-darker\", \"is-grey-dark\", \"is-grey\", \"is-grey-light\", \"is-grey-lighter\", \"is-white-ter\", \"is-white-bis\", \"IsCustomColor\", \"NoColor\"];\n    }\n}\n\nexport function Color_IColor$reflection() {\n    return union_type(\"Fulma.Color.IColor\", [], Color_IColor, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [[\"Item\", string_type]], []]);\n}\n\nexport function Color_ofColor(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"is-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return Reflection_getCaseName(level);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport class Size_ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-small\", \"is-medium\", \"is-large\"];\n    }\n}\n\nexport function Size_ISize$reflection() {\n    return union_type(\"Fulma.Size.ISize\", [], Size_ISize, () => [[], [], []]);\n}\n\nexport class TextSize_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Is1\", \"Is2\", \"Is3\", \"Is4\", \"Is5\", \"Is6\", \"Is7\"];\n    }\n}\n\nexport function TextSize_Option$reflection() {\n    return union_type(\"Fulma.TextSize.Option\", [], TextSize_Option, () => [[], [], [], [], [], [], []]);\n}\n\nexport function TextSize_Option_ToString_Z2E0B9453(x) {\n    return int32ToString(Reflection_getCaseTag(x) + 1);\n}\n\nexport class TextAlignment_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-text-centered\", \"has-text-justified\", \"has-text-left\", \"has-text-right\"];\n    }\n}\n\nexport function TextAlignment_Option$reflection() {\n    return union_type(\"Fulma.TextAlignment.Option\", [], TextAlignment_Option, () => [[], [], [], []]);\n}\n\nexport class TextWeight_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-text-weight-light\", \"has-text-weight-normal\", \"has-text-weight-semibold\", \"has-text-weight-bold\", \"has-text-weight-medium\"];\n    }\n}\n\nexport function TextWeight_Option$reflection() {\n    return union_type(\"Fulma.TextWeight.Option\", [], TextWeight_Option, () => [[], [], [], [], []]);\n}\n\nexport class TextTransform_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-capitalized\", \"is-lowercase\", \"is-uppercase\", \"is-italic\"];\n    }\n}\n\nexport function TextTransform_Option$reflection() {\n    return union_type(\"Fulma.TextTransform.Option\", [], TextTransform_Option, () => [[], [], [], []]);\n}\n\nexport class Display_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"block\", \"flex\", \"inline\", \"inline-block\", \"inline-flex\"];\n    }\n}\n\nexport function Display_Option$reflection() {\n    return union_type(\"Fulma.Display.Option\", [], Display_Option, () => [[], [], [], [], []]);\n}\n\nexport function Display_toDisplayClass(screen, display) {\n    return (\"is-\" + Reflection_getCaseName(display)) + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Display_toDisplayOnlyClass(screen, display) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return ((\"is-\" + Reflection_getCaseName(display)) + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support display only.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport class Spacing_TypeAndDirection extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"mt\", \"mr\", \"mb\", \"ml\", \"my\", \"mx\", \"pt\", \"pr\", \"pb\", \"pl\", \"py\", \"px\"];\n    }\n}\n\nexport function Spacing_TypeAndDirection$reflection() {\n    return union_type(\"Fulma.Spacing.TypeAndDirection\", [], Spacing_TypeAndDirection, () => [[], [], [], [], [], [], [], [], [], [], [], []]);\n}\n\nexport class Spacing_Amount extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\n    }\n}\n\nexport function Spacing_Amount$reflection() {\n    return union_type(\"Fulma.Spacing.Amount\", [], Spacing_Amount, () => [[], [], [], [], [], [], []]);\n}\n\nexport function Spacing_toSpacingClass(typ, amount) {\n    return (Reflection_getCaseName(typ) + \"-\") + Reflection_getCaseName(amount);\n}\n\nexport function Modifier_ofBackground(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"has-background-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return \"has-background-\" + Reflection_getCaseName(level).slice(3, Reflection_getCaseName(level).length);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofText(level) {\n    switch (level.tag) {\n        case 19: {\n            return \"has-text-\" + level.fields[0];\n        }\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18: {\n            return \"has-text-\" + Reflection_getCaseName(level).slice(3, Reflection_getCaseName(level).length);\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofInvisible(screen) {\n    return \"is-invisible\" + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Modifier_ofHidden(screen) {\n    return \"is-hidden\" + Screen_ToString_2D2414B4(screen);\n}\n\nexport function Modifier_ofInvisibleOnly(screen) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return (\"is-invisible\" + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support `is-invisible-xxx-only`.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport function Modifier_ofHiddenOnly(screen) {\n    switch (screen.tag) {\n        case 2:\n        case 1:\n        case 4: {\n            return (\"is-hidden\" + Screen_ToString_2D2414B4(screen)) + \"-only\";\n        }\n        default: {\n            console.warn(some(\"Screen `%s` does not support `is-hidden-xxx-only`.\" + toString(screen)));\n            return \"\";\n        }\n    }\n}\n\nexport class Modifier_IModifier extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"BackgroundColor\", \"TextColor\", \"TextWeight\", \"TextSize\", \"TextSizeOnly\", \"TextAlignment\", \"TextAlignmentOnly\", \"TextTransform\", \"Display\", \"DisplayOnly\", \"is-clearfix\", \"is-pulled-left\", \"is-pulled-right\", \"is-marginless\", \"is-paddingless\", \"is-overlay\", \"is-clipped\", \"is-radiusless\", \"is-shadowless\", \"is-unselectable\", \"is-relative\", \"IsInvisible\", \"IsHidden\", \"IsInvisibleOnly\", \"IsHiddenOnly\", \"IsSrOnly\", \"IsScreenReaderOnly\", \"Spacing\"];\n    }\n}\n\nexport function Modifier_IModifier$reflection() {\n    return union_type(\"Fulma.Modifier.IModifier\", [], Modifier_IModifier, () => [[[\"Item\", Color_IColor$reflection()]], [[\"Item\", Color_IColor$reflection()]], [[\"Item\", TextWeight_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextSize_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextSize_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextAlignment_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", TextAlignment_Option$reflection()]], [[\"Item\", TextTransform_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", Display_Option$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", Display_Option$reflection()]], [], [], [], [], [], [], [], [], [], [], [], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [[\"Item1\", Screen$reflection()], [\"Item2\", bool_type]], [], [], [[\"Item1\", Spacing_TypeAndDirection$reflection()], [\"Item2\", Spacing_Amount$reflection()]]]);\n}\n\nexport function Modifier_parseModifiers(options) {\n    return fold((result, option) => {\n        let screen_3, screen_7;\n        switch (option.tag) {\n            case 1: {\n                return cons(Modifier_ofText(option.fields[0]), result);\n            }\n            case 2: {\n                return cons(Reflection_getCaseName(option.fields[0]), result);\n            }\n            case 3: {\n                return cons((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(option.fields[0]), result);\n            }\n            case 4: {\n                return cons((screen_3 = option.fields[0], (screen_3.tag === 2) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : ((screen_3.tag === 1) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : ((screen_3.tag === 4) ? (((\"is-size-\" + TextSize_Option_ToString_Z2E0B9453(option.fields[1])) + Screen_ToString_2D2414B4(screen_3)) + \"-only\") : (console.warn(some(\"Screen `%s` does not support `is-size-xxx-only`.\" + toString(screen_3))), \"\")))), result);\n            }\n            case 5: {\n                return cons(Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(option.fields[0]), result);\n            }\n            case 6: {\n                return cons((screen_7 = option.fields[0], (screen_7.tag === 2) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : ((screen_7.tag === 1) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : ((screen_7.tag === 4) ? ((Reflection_getCaseName(option.fields[1]) + Screen_ToString_2D2414B4(screen_7)) + \"-only\") : (console.warn(some(\"Screen `%s` does not support `is-size-xxx-only`.\" + toString(screen_7))), \"\")))), result);\n            }\n            case 7: {\n                return cons(Reflection_getCaseName(option.fields[0]), result);\n            }\n            case 8: {\n                return cons(Display_toDisplayClass(option.fields[0], option.fields[1]), result);\n            }\n            case 9: {\n                return cons(Display_toDisplayOnlyClass(option.fields[0], option.fields[1]), result);\n            }\n            case 21: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofInvisible(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 23: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofInvisibleOnly(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 22: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofHidden(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 24: {\n                if (option.fields[1]) {\n                    return cons(Modifier_ofHiddenOnly(option.fields[0]), result);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 25:\n            case 26: {\n                return cons(\"is-sr-only\", result);\n            }\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20: {\n                return cons(Reflection_getCaseName(option), result);\n            }\n            case 27: {\n                return cons(Spacing_toSpacingClass(option.fields[0], option.fields[1]), result);\n            }\n            default: {\n                return cons(Modifier_ofBackground(option.fields[0]), result);\n            }\n        }\n    }, empty(), options);\n}\n\nexport class Common_GenericOption extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Common_GenericOption$reflection() {\n    return union_type(\"Fulma.Common.GenericOption\", [], Common_GenericOption, () => [[[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport class Common_GenericOptions extends Record {\n    constructor(Props, Classes, RemovedClasses) {\n        super();\n        this.Props = Props;\n        this.Classes = Classes;\n        this.RemovedClasses = RemovedClasses;\n    }\n}\n\nexport function Common_GenericOptions$reflection() {\n    return record_type(\"Fulma.Common.GenericOptions\", [], Common_GenericOptions, () => [[\"Props\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))], [\"Classes\", list_type(string_type)], [\"RemovedClasses\", list_type(string_type)]]);\n}\n\nexport function Common_GenericOptions_get_Empty() {\n    return new Common_GenericOptions(empty(), empty(), empty());\n}\n\nexport function Common_GenericOptions_Parse_9AE2F7C(options, parser, baseClass, baseProps) {\n    const result = fold(parser, Common_GenericOptions_get_Empty(), options);\n    const result_1 = (baseClass == null) ? result : Common_GenericOptions__AddClass_Z721C83C5(result, baseClass);\n    if (baseProps == null) {\n        return result_1;\n    }\n    else {\n        return Common_GenericOptions__AddProps_416C4D0B(result_1, baseProps);\n    }\n}\n\nexport function Common_GenericOptions__AddProp_7BFEDA81(this$, prop) {\n    return new Common_GenericOptions(cons(prop, this$.Props), this$.Classes, this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__AddProps_416C4D0B(this$, props) {\n    return new Common_GenericOptions(append(props, this$.Props), this$.Classes, this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__AddClass_Z721C83C5(this$, cl) {\n    return new Common_GenericOptions(this$.Props, cons(cl, this$.Classes), this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__RemoveClass_Z721C83C5(this$, cl) {\n    return new Common_GenericOptions(this$.Props, this$.Classes, cons(cl, this$.RemovedClasses));\n}\n\nexport function Common_GenericOptions__AddCaseName_1505(this$, case$) {\n    return Common_GenericOptions__AddClass_Z721C83C5(this$, Reflection_getCaseName(case$));\n}\n\nexport function Common_GenericOptions__AddModifiers_5BB435D5(this$, modifiers) {\n    return new Common_GenericOptions(this$.Props, append(Modifier_parseModifiers(modifiers), this$.Classes), this$.RemovedClasses);\n}\n\nexport function Common_GenericOptions__ToReactElement_Z6D3CD4B7(this$, el, children) {\n    const children_1 = defaultArg(children, empty());\n    return el(cons(new HTMLAttr(64, join(\" \", filter((cls) => (!contains(cls, this$.RemovedClasses, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => stringHash(x),\n    })), this$.Classes))), this$.Props), children_1);\n}\n\nexport function Common_GenericOptions__ToReactElement_Z46A53D36(this$, el) {\n    return el(cons(new HTMLAttr(64, join(\" \", filter((cls) => (!contains(cls, this$.RemovedClasses, {\n        Equals: (x, y) => (x === y),\n        GetHashCode: (x) => stringHash(x),\n    })), this$.Classes))), this$.Props));\n}\n\nexport function Common_parseOptions(result, option) {\n    switch (option.tag) {\n        case 0: {\n            return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n        }\n        case 2: {\n            return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n        }\n        default: {\n            return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n        }\n    }\n}\n\nexport function Common_Helpers_classes(std, options, booleans) {\n    return new HTMLAttr(64, fold((complete_1, tupledArg) => {\n        if (tupledArg[1]) {\n            return (complete_1 + \" \") + tupledArg[0];\n        }\n        else {\n            return complete_1;\n        }\n    }, fold((complete, option) => {\n        if (option == null) {\n            return complete;\n        }\n        else {\n            return (complete + \" \") + option;\n        }\n    }, std, options), booleans));\n}\n\nexport function Text_p(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"p\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function Text_div(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function Text_span(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option)), (props, children_1) => react.createElement(\"span\", keyValueList(props, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.5/Types.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddProp_7BFEDA81, Common_GenericOptions__AddCaseName_1505, Reflection_getCaseName, Color_ofColor, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Size_ISize$reflection, Color_IColor$reflection } from \"../Common.fs.js\";\nimport { union_type, string_type, lambda_type, unit_type, list_type, class_type, bool_type } from \"../../fable-library.3.1.5/Reflection.js\";\nimport { DOMAttr, HTMLAttr } from \"../../Fable.React.7.2.0/Fable.React.Props.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.5/MapUtil.js\";\nimport { singleton, empty, cons, map, exists } from \"../../fable-library.3.1.5/List.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Color\", \"Size\", \"is-fullwidth\", \"is-link\", \"is-outlined\", \"is-inverted\", \"is-text\", \"is-rounded\", \"is-expanded\", \"is-hovered\", \"is-focused\", \"is-active\", \"is-loading\", \"is-static\", \"is-light\", \"Disabled\", \"Props\", \"OnClick\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Button.Option\", [], Option, () => [[[\"Item\", Color_IColor$reflection()]], [[\"Item\", Size_ISize$reflection()]], [], [], [], [], [], [], [], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [[\"Item\", bool_type]], [], [[\"Item\", bool_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function btnView(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        let pattern_matching_result, state;\n        switch (option.tag) {\n            case 1: {\n                pattern_matching_result = 1;\n                break;\n            }\n            case 3:\n            case 2:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 14: {\n                pattern_matching_result = 2;\n                break;\n            }\n            case 9: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 10: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 11: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 12: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 13: {\n                pattern_matching_result = 3;\n                state = option.fields[0];\n                break;\n            }\n            case 15: {\n                pattern_matching_result = 4;\n                break;\n            }\n            case 17: {\n                pattern_matching_result = 5;\n                break;\n            }\n            case 16: {\n                pattern_matching_result = 6;\n                break;\n            }\n            case 18: {\n                pattern_matching_result = 7;\n                break;\n            }\n            case 19: {\n                pattern_matching_result = 8;\n                break;\n            }\n            default: pattern_matching_result = 0}\n        switch (pattern_matching_result) {\n            case 0: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Color_ofColor(option.fields[0]));\n            }\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Reflection_getCaseName(option.fields[0]));\n            }\n            case 2: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 3: {\n                if (state) {\n                    return Common_GenericOptions__AddCaseName_1505(result, option);\n                }\n                else {\n                    return result;\n                }\n            }\n            case 4: {\n                return Common_GenericOptions__AddProp_7BFEDA81(result, new HTMLAttr(79, option.fields[0]));\n            }\n            case 5: {\n                return Common_GenericOptions__AddProp_7BFEDA81(result, new DOMAttr(40, option.fields[0]));\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n        }\n    }, \"button\"), element, children);\n}\n\nexport function button(options, children) {\n    return btnView((props, children_1) => react.createElement(\"button\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function span(options, children) {\n    return btnView((props, children_1) => react.createElement(\"span\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function a(options, children) {\n    return btnView((props, children_1) => react.createElement(\"a\", keyValueList(props, 1), ...children_1), options, children);\n}\n\nexport function Input_btnInput(typ, options) {\n    if (exists((opts) => {\n        if (opts.tag === 16) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, options)) {\n        return btnView((options_1, _arg1) => react.createElement(\"input\", keyValueList(options_1, 1)), map((opts_1) => {\n            if (opts_1.tag === 16) {\n                return new Option(16, cons(new HTMLAttr(159, typ), opts_1.fields[0]));\n            }\n            else {\n                return opts_1;\n            }\n        }, options), empty());\n    }\n    else {\n        return btnView((options_2, _arg2) => react.createElement(\"input\", keyValueList(options_2, 1)), cons(new Option(16, singleton(new HTMLAttr(159, typ))), options), empty());\n    }\n}\n\nexport function Input_reset(options) {\n    return Input_btnInput(\"reset\", options);\n}\n\nexport function Input_submit(options) {\n    return Input_btnInput(\"submit\", options);\n}\n\nexport class List_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"has-addons\", \"is-centered\", \"is-right\", \"are-small\", \"are-medium\", \"are-large\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function List_Option$reflection() {\n    return union_type(\"Fulma.Button.List.Option\", [], List_Option, () => [[], [], [], [], [], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function list(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"buttons\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.5/Types.js\";\nimport { Common_GenericOptions__AddProp_7BFEDA81, Color_ofColor, Common_parseOptions, Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Color_IColor$reflection } from \"../Common.fs.js\";\nimport { lambda_type, unit_type, bool_type, union_type, string_type, list_type, class_type } from \"../../fable-library.3.1.5/Reflection.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.5/MapUtil.js\";\nimport { DOMAttr } from \"../../Fable.React.7.2.0/Fable.React.Props.fs.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Color\", \"has-shadow\", \"is-transparent\", \"is-fixed-top\", \"is-fixed-bottom\", \"is-spaced\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Navbar.Option\", [], Option, () => [[[\"Item\", Color_IColor$reflection()]], [], [], [], [], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport class Menu_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-active\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Menu_Option$reflection() {\n    return union_type(\"Fulma.Navbar.Menu.Option\", [], Menu_Option, () => [[[\"Item\", bool_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport class Burger_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-active\", \"OnClick\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Burger_Option$reflection() {\n    return union_type(\"Fulma.Navbar.Burger.Option\", [], Burger_Option, () => [[[\"Item\", bool_type]], [[\"Item\", lambda_type(class_type(\"Browser.Types.MouseEvent\"), unit_type)]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport class Item_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-tab\", \"is-active\", \"is-hoverable\", \"has-dropdown\", \"is-expanded\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Item_Option$reflection() {\n    return union_type(\"Fulma.Navbar.Item.Option\", [], Item_Option, () => [[], [[\"Item\", bool_type]], [], [], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function Item_item(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 4:\n            case 0:\n            case 2:\n            case 3: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 5: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 6: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                if (option.fields[0]) {\n                    return Common_GenericOptions__AddCaseName_1505(result, option);\n                }\n                else {\n                    return result;\n                }\n            }\n        }\n    }, \"navbar-item\"), element, children);\n}\n\nexport function Item_div(x, y) {\n    return Item_item((props, children) => react.createElement(\"div\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function Item_a(x, y) {\n    return Item_item((props, children) => react.createElement(\"a\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport class Link_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-active\", \"is-arrowless\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Link_Option$reflection() {\n    return union_type(\"Fulma.Navbar.Link.Option\", [], Link_Option, () => [[[\"Item\", bool_type]], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function Link_link(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 2: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 3: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                if (option.fields[0]) {\n                    return Common_GenericOptions__AddCaseName_1505(result, option);\n                }\n                else {\n                    return result;\n                }\n            }\n        }\n    }, \"navbar-link\"), element, children);\n}\n\nexport function Link_div(x, y) {\n    return Link_link((props, children) => react.createElement(\"div\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function Link_a(x, y) {\n    return Link_link((props, children) => react.createElement(\"a\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport class Dropdown_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-active\", \"is-boxed\", \"is-right\", \"Props\", \"CustomClass\", \"Modifiers\"];\n    }\n}\n\nexport function Dropdown_Option$reflection() {\n    return union_type(\"Fulma.Navbar.Dropdown.Option\", [], Dropdown_Option, () => [[[\"Item\", bool_type]], [], [], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function Dropdown_dropdown(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 3: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 5: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                if (option.fields[0]) {\n                    return Common_GenericOptions__AddCaseName_1505(result, option);\n                }\n                else {\n                    return result;\n                }\n            }\n        }\n    }, \"navbar-dropdown\"), element, children);\n}\n\nexport function Dropdown_div(x, y) {\n    return Dropdown_dropdown((props, children) => react.createElement(\"div\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function Dropdown_a(x, y) {\n    return Dropdown_dropdown((props, children) => react.createElement(\"a\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function Brand_brand(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"navbar-brand\"), element, children);\n}\n\nexport function Brand_div(x, y) {\n    return Brand_brand((props, children) => react.createElement(\"div\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function Brand_a(x, y) {\n    return Brand_brand((props, children) => react.createElement(\"a\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function Start_start(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"navbar-start\"), element, children);\n}\n\nexport function Start_div(x, y) {\n    return Start_start((props, children) => react.createElement(\"div\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function Start_a(x, y) {\n    return Start_start((props, children) => react.createElement(\"a\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function End_end(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"navbar-end\"), element, children);\n}\n\nexport function End_div(x, y) {\n    return End_end((props, children) => react.createElement(\"div\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function End_a(x, y) {\n    return End_end((props, children) => react.createElement(\"a\", keyValueList(props, 1), ...children), x, y);\n}\n\nexport function navbar(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 3:\n            case 4:\n            case 2:\n            case 5: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 0: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Color_ofColor(option.fields[0]));\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 7: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"navbar\"), (props_1, children_1) => react.createElement(\"nav\", keyValueList(props_1, 1), ...children_1), children);\n}\n\nexport function menu(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 2: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 3: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                if (option.fields[0]) {\n                    return Common_GenericOptions__AddCaseName_1505(result, option);\n                }\n                else {\n                    return result;\n                }\n            }\n        }\n    }, \"navbar-menu\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\nexport function burger(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1: {\n                return Common_GenericOptions__AddProp_7BFEDA81(result, new DOMAttr(40, option.fields[0]));\n            }\n            case 2: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 3: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                if (option.fields[0]) {\n                    return Common_GenericOptions__AddCaseName_1505(result, option);\n                }\n                else {\n                    return result;\n                }\n            }\n        }\n    }, \"navbar-burger\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\nexport function content(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"navbar-content\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\nexport function divider(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"navbar-divider\"), (props, children_1) => react.createElement(\"div\", keyValueList(props, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.5/Types.js\";\nimport { union_type, list_type, class_type, string_type } from \"../../fable-library.3.1.5/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__RemoveClass_Z721C83C5, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.5/MapUtil.js\";\nimport { cons } from \"../../fable-library.3.1.5/List.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"subtitle`\", \"is-spaced\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Heading.Option\", [], Option, () => [[], [], [], [], [], [], [], [], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function title(element, options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 7: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__RemoveClass_Z721C83C5(result, \"title\"), \"subtitle\");\n            }\n            case 9: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 8: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 10: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"title\"), element, children);\n}\n\nexport function h1(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h1\", keyValueList(props, 1), ...children), cons(new Option(0), options), children_3);\n}\n\nexport function h2(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h2\", keyValueList(props, 1), ...children), cons(new Option(1), options), children_3);\n}\n\nexport function h3(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h3\", keyValueList(props, 1), ...children), cons(new Option(2), options), children_3);\n}\n\nexport function h4(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h4\", keyValueList(props, 1), ...children), cons(new Option(3), options), children_3);\n}\n\nexport function h5(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h5\", keyValueList(props, 1), ...children), cons(new Option(4), options), children_3);\n}\n\nexport function h6(options) {\n    return (children_3) => title((props, children) => react.createElement(\"h6\", keyValueList(props, 1), ...children), cons(new Option(5), options), children_3);\n}\n\nexport function p(opts, children) {\n    return title((props, children_1) => react.createElement(\"p\", keyValueList(props, 1), ...children_1), opts, children);\n}\n\n","import * as react from \"react\";\n\nexport const title = \"Ancestors map\";\n\nexport const footer = react.createElement(\"div\", {});\n\n","import { Union } from \"../../fable-library.3.1.5/Types.js\";\nimport { list_type, class_type, string_type, union_type } from \"../../fable-library.3.1.5/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Screen_ToString_2D2414B4, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddCaseName_1505, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Screen$reflection, Reflection_getCaseName } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.5/MapUtil.js\";\nimport { contains } from \"../../fable-library.3.1.5/List.js\";\nimport { stringHash } from \"../../fable-library.3.1.5/Util.js\";\nimport { printf, toText } from \"../../fable-library.3.1.5/String.js\";\nimport { some } from \"../../fable-library.3.1.5/Option.js\";\n\nexport class ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"is-7\", \"is-8\"];\n    }\n}\n\nexport function ISize$reflection() {\n    return union_type(\"Fulma.Columns.ISize\", [], ISize, () => [[], [], [], [], [], [], [], []]);\n}\n\nexport function ISize_ToString_2283FB3F(x) {\n    return Reflection_getCaseName(x);\n}\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-centered\", \"is-vcentered\", \"is-multiline\", \"is-gapless\", \"is-grid\", \"is-mobile\", \"is-desktop\", \"IsGap\", \"IsGapOnly\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Columns.Option\", [], Option, () => [[], [], [], [], [], [], [], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function columns(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        let screen_4, size_4, x_2, arg30, arg20, arg10, screen_5, size_5, x_3, arg30_1, arg20_1, arg10_1;\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 7: {\n                const size = option.fields[1];\n                const screen = option.fields[0];\n                if (!contains(\"is-variable\", result.Classes, {\n                    Equals: (x, y) => (x === y),\n                    GetHashCode: (x) => stringHash(x),\n                })) {\n                    return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__AddClass_Z721C83C5(result, \"is-variable\"), ISize_ToString_2283FB3F(size) + Screen_ToString_2D2414B4(screen));\n                }\n                else {\n                    return Common_GenericOptions__AddClass_Z721C83C5(result, ISize_ToString_2283FB3F(size) + Screen_ToString_2D2414B4(screen));\n                }\n            }\n            case 8: {\n                const size_3 = option.fields[1];\n                const screen_3 = option.fields[0];\n                if (!contains(\"is-variable\", result.Classes, {\n                    Equals: (x_1, y_1) => (x_1 === y_1),\n                    GetHashCode: (x_1) => stringHash(x_1),\n                })) {\n                    return Common_GenericOptions__AddClass_Z721C83C5(Common_GenericOptions__AddClass_Z721C83C5(result, \"is-variable\"), (screen_4 = screen_3, (size_4 = size_3, (screen_4.tag === 2) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : ((screen_4.tag === 1) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : ((screen_4.tag === 4) ? ((ISize_ToString_2283FB3F(size_4) + Screen_ToString_2D2414B4(screen_4)) + \"-only\") : (x_2 = screen_4, (console.warn(some((arg30 = Screen_ToString_2D2414B4(x_2), (arg20 = ISize_ToString_2283FB3F(size_4), (arg10 = Screen_ToString_2D2414B4(x_2), toText(printf(\"Screen `%s` does not support `is-%s-%s-only`.\"))(arg10)(arg20)(arg30)))))), \"\")))))));\n                }\n                else {\n                    return Common_GenericOptions__AddClass_Z721C83C5(result, (screen_5 = screen_3, (size_5 = size_3, (screen_5.tag === 2) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : ((screen_5.tag === 1) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : ((screen_5.tag === 4) ? ((ISize_ToString_2283FB3F(size_5) + Screen_ToString_2D2414B4(screen_5)) + \"-only\") : (x_3 = screen_5, (console.warn(some((arg30_1 = Screen_ToString_2D2414B4(x_3), (arg20_1 = ISize_ToString_2283FB3F(size_5), (arg10_1 = Screen_ToString_2D2414B4(x_3), toText(printf(\"Screen `%s` does not support `is-%s-%s-only`.\"))(arg10_1)(arg20_1)(arg30_1)))))), \"\")))))));\n                }\n            }\n            case 10: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 9: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 11: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }, \"columns\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.5/Types.js\";\nimport { list_type, class_type, string_type, union_type } from \"../../fable-library.3.1.5/Reflection.js\";\nimport { Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Reflection_getCaseName, Modifier_IModifier$reflection, Screen$reflection } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.5/MapUtil.js\";\n\nexport class ISize extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-one-quarter\", \"is-one-third\", \"is-half\", \"is-two-thirds\", \"is-three-quarters\", \"is-1\", \"is-2\", \"is-3\", \"is-4\", \"is-5\", \"is-6\", \"is-7\", \"is-8\", \"is-9\", \"is-10\", \"is-11\", \"is-12\", \"is-narrow\", \"is-full\", \"is-one-fifth\", \"is-two-fifths\", \"is-three-fifths\", \"is-four-fifths\"];\n    }\n}\n\nexport function ISize$reflection() {\n    return union_type(\"Fulma.Column.ISize\", [], ISize, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]);\n}\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Width\", \"Offset\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Column.Option\", [], Option, () => [[[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item1\", Screen$reflection()], [\"Item2\", ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nfunction suffix(_arg1) {\n    switch (_arg1.tag) {\n        case 1: {\n            return \"-desktop\";\n        }\n        case 2: {\n            return \"-tablet\";\n        }\n        case 3: {\n            return \"-mobile\";\n        }\n        case 4: {\n            return \"-widescreen\";\n        }\n        case 6: {\n            return \"-fullhd\";\n        }\n        case 5: {\n            return \"-touch\";\n        }\n        default: {\n            return \"\";\n        }\n    }\n}\n\nexport function ofWidth(screen, size) {\n    return Reflection_getCaseName(size) + suffix(screen);\n}\n\nexport function ofOffset(screen, offset) {\n    const className = Reflection_getCaseName(offset);\n    return (\"is-offset-\" + className.slice(3, className.length)) + suffix(screen);\n}\n\nexport function column(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, ofOffset(option.fields[0], option.fields[1]));\n            }\n            case 2: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 3: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, ofWidth(option.fields[0], option.fields[1]));\n            }\n        }\n    }, \"column\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../../fable-library.3.1.5/Types.js\";\nimport { Common_GenericOptions__AddCaseName_1505, Reflection_getCaseName, Common_GenericOptions__AddModifiers_5BB435D5, Common_GenericOptions__AddClass_Z721C83C5, Common_GenericOptions__AddProps_416C4D0B, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7, Modifier_IModifier$reflection, Size_ISize$reflection } from \"../Common.fs.js\";\nimport { union_type, list_type, class_type, string_type } from \"../../fable-library.3.1.5/Reflection.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.5/MapUtil.js\";\n\nexport class Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Size\", \"CustomClass\", \"Props\", \"Modifiers\"];\n    }\n}\n\nexport function Option$reflection() {\n    return union_type(\"Fulma.Content.Option\", [], Option, () => [[[\"Item\", Size_ISize$reflection()]], [[\"Item\", string_type]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]], [[\"Item\", list_type(Modifier_IModifier$reflection())]]]);\n}\n\nexport function content(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 2: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 1: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 3: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, Reflection_getCaseName(option.fields[0]));\n            }\n        }\n    }, \"content\"), (props_1, children_1) => react.createElement(\"div\", keyValueList(props_1, 1), ...children_1), children);\n}\n\nexport class Ol_Option extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"is-lower-roman\", \"is-upper-roman\", \"is-lower-alpha\", \"is-upper-alpha\", \"CustomClass\", \"Modifiers\", \"Props\"];\n    }\n}\n\nexport function Ol_Option$reflection() {\n    return union_type(\"Fulma.Content.Ol.Option\", [], Ol_Option, () => [[], [], [], [], [[\"Item\", string_type]], [[\"Item\", list_type(Modifier_IModifier$reflection())]], [[\"Item\", list_type(class_type(\"Fable.React.Props.IHTMLProp\"))]]]);\n}\n\nexport function Ol_ol(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => {\n        switch (option.tag) {\n            case 1:\n            case 2:\n            case 3: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n            case 6: {\n                return Common_GenericOptions__AddProps_416C4D0B(result, option.fields[0]);\n            }\n            case 4: {\n                return Common_GenericOptions__AddClass_Z721C83C5(result, option.fields[0]);\n            }\n            case 5: {\n                return Common_GenericOptions__AddModifiers_5BB435D5(result, option.fields[0]);\n            }\n            default: {\n                return Common_GenericOptions__AddCaseName_1505(result, option);\n            }\n        }\n    }), (props_1, children_1) => react.createElement(\"ol\", keyValueList(props_1, 1), ...children_1), children);\n}\n\n","import { Union } from \"../fable-library.3.1.5/Types.js\";\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { fill } from \"../fable-library.3.1.5/Array.js\";\nimport { comparePrimitives, max } from \"../fable-library.3.1.5/Util.js\";\nimport { some } from \"../fable-library.3.1.5/Option.js\";\nimport { rangeNumber, singleton, collect, take, skip, append, delay } from \"../fable-library.3.1.5/Seq.js\";\n\nexport class RingState$1 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Writable\", \"ReadWritable\"];\n    }\n}\n\nexport function RingState$1$reflection(gen0) {\n    return union_type(\"Elmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\n}\n\nexport class RingBuffer$1 {\n    constructor(size) {\n        this.state = (new RingState$1(0, fill(new Array(max((x, y) => comparePrimitives(x, y), size, 10)), 0, max((x, y) => comparePrimitives(x, y), size, 10), null), 0));\n    }\n}\n\nexport function RingBuffer$1$reflection(gen0) {\n    return class_type(\"Elmish.RingBuffer`1\", [gen0], RingBuffer$1);\n}\n\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\n    return new RingBuffer$1(size);\n}\n\nexport function RingBuffer$1__Pop(__) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items = matchValue.fields[0];\n        const rix$0027 = ((rix + 1) % items.length) | 0;\n        if (rix$0027 === wix) {\n            __.state = (new RingState$1(0, items, wix));\n        }\n        else {\n            __.state = (new RingState$1(1, items, wix, rix$0027));\n        }\n        return some(items[rix]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function RingBuffer$1__Push_2B595(__, item) {\n    const matchValue = __.state;\n    if (matchValue.tag === 1) {\n        const wix_1 = matchValue.fields[1] | 0;\n        const rix = matchValue.fields[2] | 0;\n        const items_1 = matchValue.fields[0];\n        items_1[wix_1] = item;\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\n        if (wix$0027 === rix) {\n            __.state = (new RingState$1(1, RingBuffer$1__doubleSize(__, rix, items_1), items_1.length, 0));\n        }\n        else {\n            __.state = (new RingState$1(1, items_1, wix$0027, rix));\n        }\n    }\n    else {\n        const ix = matchValue.fields[1] | 0;\n        const items = matchValue.fields[0];\n        items[ix] = item;\n        const wix = ((ix + 1) % items.length) | 0;\n        __.state = (new RingState$1(1, items, wix, ix));\n    }\n}\n\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeNumber(0, 1, items.length))))))));\n}\n\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, comparePrimitives, max as max_1 } from \"./Util.js\";\nimport { Dictionary } from \"./MutableMap.js\";\nimport { addToDict, addToSet, getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { iterate as iterate_1 } from \"./Seq.js\";\n\nexport function Helpers_allocateArrayFromCons(cons, len) {\n    if ((typeof cons) === \"function\") {\n        return new cons(len);\n    }\n    else {\n        return new Array(len);\n    }\n}\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return Helpers_allocateArrayFromCons(cons, 0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = (totalLength + arr_1.length);\n            }\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = (totalIdx + 1);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function countBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const key = projection(array[idx]);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            void (keys.push(key));\n        }\n    }\n    return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys, null);\n}\n\nexport function distinctBy(projection, array, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), array);\n}\n\nexport function distinct(array, eq) {\n    return distinctBy((x) => x, array, eq);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (array.length === 0) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return array.filter(((arg00) => addToSet(arg00, cached)));\n    }\n}\n\nexport function groupBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const v = array[idx];\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            void (matchValue[1].push(v));\n        }\n        else {\n            addToDict(dict, key, [v]);\n            void (keys.push(key));\n        }\n    }\n    return map((key_1) => [key_1, Array.from(getItemFromDict(dict, key_1))], keys, null);\n}\n\nexport function empty(cons) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n}\n\nexport function singleton(value, cons) {\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    void (array.push(x));\n}\n\nexport function addRangeInPlace(range, array) {\n    iterate_1((x) => {\n        void (array.push(x));\n    }, range);\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        void (array.splice(i, 1));\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            void (array.splice(i, 1));\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = (iTrue + 1);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = (iFalse + 1);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound();\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    return map((x_1) => value_2(chooser(x_1)), array.filter(((x) => (chooser(x) != null))), cons);\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                void (res.push(x));\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = comparer(array1[i], array2[i]);\n                i = (i + 1);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { Record } from \"../fable-library.3.1.5/Types.js\";\nimport { record_type, class_type, string_type, tuple_type, list_type, lambda_type, unit_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { Cmd_exec, Cmd_batch, Cmd_none } from \"./cmd.fs.js\";\nimport { Log_toConsole, Log_onError } from \"./prelude.fs.js\";\nimport { curry, partialApply, checkArity, uncurry } from \"../fable-library.3.1.5/Util.js\";\nimport { ofArray } from \"../fable-library.3.1.5/List.js\";\nimport { RingBuffer$1__Pop, RingBuffer$1__Push_2B595, RingBuffer$1_$ctor_Z524259A4 } from \"./ring.fs.js\";\nimport { value as value_1, some } from \"../fable-library.3.1.5/Option.js\";\nimport { printf, toText } from \"../fable-library.3.1.5/String.js\";\n\nexport class Program$4 extends Record {\n    constructor(init, update, subscribe, view, setState, onError, syncDispatch) {\n        super();\n        this.init = init;\n        this.update = update;\n        this.subscribe = subscribe;\n        this.view = view;\n        this.setState = setState;\n        this.onError = onError;\n        this.syncDispatch = syncDispatch;\n    }\n}\n\nexport function Program$4$reflection(gen0, gen1, gen2, gen3) {\n    return record_type(\"Elmish.Program`4\", [gen0, gen1, gen2, gen3], Program$4, () => [[\"init\", lambda_type(gen0, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type))))], [\"update\", lambda_type(gen2, lambda_type(gen1, tuple_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))))], [\"subscribe\", lambda_type(gen1, list_type(lambda_type(lambda_type(gen2, unit_type), unit_type)))], [\"view\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), gen3))], [\"setState\", lambda_type(gen1, lambda_type(lambda_type(gen2, unit_type), unit_type))], [\"onError\", lambda_type(tuple_type(string_type, class_type(\"System.Exception\")), unit_type)], [\"syncDispatch\", lambda_type(lambda_type(gen2, unit_type), lambda_type(gen2, unit_type))]]);\n}\n\nexport function ProgramModule_mkProgram(init, update, view) {\n    return new Program$4(init, update, (_arg1) => Cmd_none(), view, (model, arg) => {\n        void view(model, arg);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_mkSimple(init, update, view) {\n    return new Program$4((arg) => [init(arg), Cmd_none()], (msg, arg_1) => [update(msg, arg_1), Cmd_none()], (_arg1) => Cmd_none(), view, (model, arg_2) => {\n        void view(model, arg_2);\n    }, (tupledArg) => {\n        Log_onError(tupledArg[0], tupledArg[1]);\n    }, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_withSubscription(subscribe, program) {\n    return new Program$4(program.init, program.update, (model) => Cmd_batch(ofArray([program.subscribe(model), subscribe(model)])), checkArity(2, program.view), program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withConsoleTrace(program) {\n    return new Program$4((arg) => {\n        const patternInput = program.init(arg);\n        const initModel = patternInput[0];\n        Log_toConsole(\"Initial state:\", initModel);\n        return [initModel, patternInput[1]];\n    }, (msg, model) => {\n        Log_toConsole(\"New message:\", msg);\n        const patternInput_1 = program.update(msg, model);\n        const newModel = patternInput_1[0];\n        Log_toConsole(\"Updated state:\", newModel);\n        return [newModel, patternInput_1[1]];\n    }, program.subscribe, checkArity(2, program.view), program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withTrace(trace, program) {\n    return new Program$4(program.init, (msg, model) => {\n        const patternInput = program.update(msg, model);\n        const state = patternInput[0];\n        trace(msg, state);\n        return [state, patternInput[1]];\n    }, program.subscribe, checkArity(2, program.view), program.setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_withErrorHandler(onError, program) {\n    return new Program$4(program.init, program.update, program.subscribe, checkArity(2, program.view), program.setState, onError, program.syncDispatch);\n}\n\nexport function ProgramModule_mapErrorHandler(map, program) {\n    return new Program$4(program.init, program.update, program.subscribe, checkArity(2, program.view), program.setState, partialApply(1, map, [program.onError]), program.syncDispatch);\n}\n\nexport function ProgramModule_onError(program) {\n    return program.onError;\n}\n\nexport function ProgramModule_withSetState(setState, program) {\n    return new Program$4(program.init, program.update, program.subscribe, checkArity(2, program.view), setState, program.onError, program.syncDispatch);\n}\n\nexport function ProgramModule_setState(program) {\n    return curry(2, program.setState);\n}\n\nexport function ProgramModule_view(program) {\n    return curry(2, checkArity(2, program.view));\n}\n\nexport function ProgramModule_withSyncDispatch(syncDispatch, program) {\n    return new Program$4(program.init, program.update, program.subscribe, checkArity(2, program.view), program.setState, program.onError, syncDispatch);\n}\n\nexport function ProgramModule_map(mapInit, mapUpdate, mapView, mapSetState, mapSubscribe, program) {\n    const init = partialApply(1, mapInit, [program.init]);\n    const update = partialApply(2, mapUpdate, [program.update]);\n    const view = partialApply(2, mapView, [checkArity(2, program.view)]);\n    const setState = partialApply(2, mapSetState, [program.setState]);\n    return new Program$4(init, uncurry(2, update), partialApply(1, mapSubscribe, [program.subscribe]), uncurry(2, view), uncurry(2, setState), program.onError, uncurry(2, (x) => x));\n}\n\nexport function ProgramModule_runWith(arg, program) {\n    const patternInput = program.init(arg);\n    const model = patternInput[0];\n    const rb = RingBuffer$1_$ctor_Z524259A4(10);\n    let reentered = false;\n    let state = model;\n    const dispatch = (msg) => {\n        if (reentered) {\n            RingBuffer$1__Push_2B595(rb, msg);\n        }\n        else {\n            reentered = true;\n            let nextMsg = some(msg);\n            while (nextMsg != null) {\n                const msg_1 = value_1(nextMsg);\n                try {\n                    const patternInput_1 = program.update(msg_1, state);\n                    const model$0027 = patternInput_1[0];\n                    program.setState(model$0027, syncDispatch);\n                    Cmd_exec((ex) => {\n                        program.onError([toText(printf(\"Error in command while handling: %A\"))(msg_1), ex]);\n                    }, syncDispatch, patternInput_1[1]);\n                    state = model$0027;\n                }\n                catch (ex_1) {\n                    program.onError([toText(printf(\"Unable to process the message: %A\"))(msg_1), ex_1]);\n                }\n                nextMsg = RingBuffer$1__Pop(rb);\n            }\n            reentered = false;\n        }\n    };\n    const syncDispatch = partialApply(1, program.syncDispatch, [dispatch]);\n    program.setState(model, syncDispatch);\n    Cmd_exec((ex_3) => {\n        program.onError([\"Error intitializing:\", ex_3]);\n    }, syncDispatch, Cmd_batch(ofArray([(() => {\n        try {\n            return program.subscribe(model);\n        }\n        catch (ex_2) {\n            program.onError([\"Unable to subscribe:\", ex_2]);\n            return Cmd_none();\n        }\n    })(), patternInput[1]])));\n}\n\nexport function ProgramModule_run(program) {\n    ProgramModule_runWith(void 0, program);\n}\n\n","import { Record } from \"../fable-library.3.1.5/Types.js\";\nimport { obj_type, record_type, bool_type, lambda_type, class_type, unit_type } from \"../fable-library.3.1.5/Reflection.js\";\nimport { Component } from \"react\";\nimport * as react from \"react\";\nimport { equalArrays, equals } from \"../fable-library.3.1.5/Util.js\";\n\nexport class LazyProps$1 extends Record {\n    constructor(model, render, equal) {\n        super();\n        this.model = model;\n        this.render = render;\n        this.equal = equal;\n    }\n}\n\nexport function LazyProps$1$reflection(gen0) {\n    return record_type(\"Elmish.React.LazyProps`1\", [gen0], LazyProps$1, () => [[\"model\", gen0], [\"render\", lambda_type(unit_type, class_type(\"Fable.React.ReactElement\"))], [\"equal\", lambda_type(gen0, lambda_type(gen0, bool_type))]]);\n}\n\nexport class Components_LazyView$1 extends Component {\n    constructor(props) {\n        super(props);\n    }\n    shouldComponentUpdate(nextProps, _nextState) {\n        const this$ = this;\n        return !(this$.props).equal((this$.props).model, nextProps.model);\n    }\n    render() {\n        const this$ = this;\n        return (this$.props).render();\n    }\n}\n\nexport function Components_LazyView$1$reflection(gen0) {\n    return class_type(\"Elmish.React.Components.LazyView`1\", [gen0], Components_LazyView$1, class_type(\"Fable.React.Component`2\", [LazyProps$1$reflection(gen0), obj_type]));\n}\n\nexport function Components_LazyView$1_$ctor_Z7829D94B(props) {\n    return new Components_LazyView$1(props);\n}\n\nexport function Common_lazyViewWith(equal, view, state) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state), equal));\n}\n\nexport function Common_lazyView2With(equal, view, state, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1(state, () => view(state, dispatch), equal));\n}\n\nexport function Common_lazyView3With(equal, view, state1, state2, dispatch) {\n    return react.createElement(Components_LazyView$1, new LazyProps$1([state1, state2], () => view(state1, state2, dispatch), equal));\n}\n\nexport function Common_lazyView(view) {\n    return (state) => Common_lazyViewWith((x, y) => equals(x, y), view, state);\n}\n\nexport function Common_lazyView2(view) {\n    return (state) => ((dispatch) => Common_lazyView2With((x, y) => equals(x, y), view, state, dispatch));\n}\n\nexport function Common_lazyView3(view) {\n    return (state1) => ((state2) => ((dispatch) => Common_lazyView3With((x, y) => equalArrays(x, y), view, state1, state2, dispatch)));\n}\n\n","import { ProgramModule_view, ProgramModule_withSetState } from \"../Fable.Elmish.3.1.0/program.fs.js\";\nimport * as react$002Ddom from \"react-dom\";\nimport { uncurry } from \"../fable-library.3.1.5/Util.js\";\nimport { Common_lazyView2With } from \"./common.fs.js\";\n\nexport function Program_Internal_withReactBatchedUsing(lazyView2With, placeholderId, program) {\n    let lastRequest = void 0;\n    return ProgramModule_withSetState((model, dispatch) => {\n        if (lastRequest != null) {\n            window.cancelAnimationFrame(lastRequest);\n        }\n        lastRequest = window.requestAnimationFrame((_arg1) => {\n            react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n        });\n    }, program);\n}\n\nexport function Program_Internal_withReactSynchronousUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.render(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_Internal_withReactHydrateUsing(lazyView2With, placeholderId, program) {\n    return ProgramModule_withSetState((model, dispatch) => {\n        react$002Ddom.hydrate(lazyView2With((x, y) => (x === y), uncurry(2, ProgramModule_view(program)), model, dispatch), document.getElementById(placeholderId));\n    }, program);\n}\n\nexport function Program_withReactBatched(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactSynchronous(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReact(placeholderId, program) {\n    return Program_Internal_withReactBatchedUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactUnoptimized(placeholderId, program) {\n    return Program_Internal_withReactSynchronousUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\nexport function Program_withReactHydrate(placeholderId, program) {\n    return Program_Internal_withReactHydrateUsing((equal, view, state, dispatch) => Common_lazyView2With(equal, view, state, dispatch), placeholderId, program);\n}\n\n","import { max as max_2, numberHash, arrayHash, equalArrays, stringHash, compare, comparePrimitives, createAtom } from \"./.fable/fable-library.3.1.5/Util.js\";\nimport { cons, append, empty, mapIndexed as mapIndexed_1, filter, collect as collect_1, groupBy, sort, singleton, sortBy, item, length, max, tryItem, choose, min, map as map_1, ofSeq as ofSeq_1, ofArray } from \"./.fable/fable-library.3.1.5/List.js\";\nimport { FSharpRef, Union, Record } from \"./.fable/fable-library.3.1.5/Types.js\";\nimport { option_type, tuple_type, union_type, record_type, list_type, int32_type, string_type, float64_type } from \"./.fable/fable-library.3.1.5/Reflection.js\";\nimport { MapProps_Style_7213C43C, MapProps, CircleProps_Custom_433E080, CircleProps, PolylineProps, CircleProps$reflection, PolylineProps$reflection } from \"./.fable/Fable.ReactLeaflet.1.0.0/ReactLeaflet.fs.js\";\nimport { tryFind, toList, FSharpMap__get_Item, ofSeq } from \"./.fable/fable-library.3.1.5/Map.js\";\nimport { tryParse } from \"./.fable/fable-library.3.1.5/Int32.js\";\nimport { parse as parse_1, tryParse as tryParse_1 } from \"./.fable/fable-library.3.1.5/Double.js\";\nimport { singleton as singleton_1, append as append_1, delay, iterate, sumBy, filter as filter_1, max as max_1, minBy, min as min_1, concat, mapIndexed, collect, head, map } from \"./.fable/fable-library.3.1.5/Seq.js\";\nimport { toConsole, join, printf, toText, split as split_1 } from \"./.fable/fable-library.3.1.5/String.js\";\nimport { toArray, some, map as map_2, defaultArg, bind } from \"./.fable/fable-library.3.1.5/Option.js\";\nimport { distinct } from \"./.fable/fable-library.3.1.5/Set.js\";\nimport { data as data_1 } from \"./Data.fs.js\";\nimport { Cmd_ofSub, Cmd_none } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\nimport * as react from \"react\";\nimport { Option, button as button_1 } from \"./.fable/Fulma.2.10.0/Elements/Button.fs.js\";\nimport { TextAlignment_Option, Screen, Modifier_IModifier, Color_IColor } from \"./.fable/Fulma.2.10.0/Common.fs.js\";\nimport { Item_div, Start_div, Brand_div, Option as Option_1, navbar } from \"./.fable/Fulma.2.10.0/Components/Navbar.fs.js\";\nimport { h2 } from \"./.fable/Fulma.2.10.0/Elements/Heading.fs.js\";\nimport { footer as footer_1, title as title_1 } from \"./Config.fs.js\";\nimport { Option as Option_2, columns as columns_1 } from \"./.fable/Fulma.2.10.0/Layouts/Columns.fs.js\";\nimport { column } from \"./.fable/Fulma.2.10.0/Layouts/Column.fs.js\";\nimport { TileLayer, Map as Map$, Polyline, Tooltip, Popup, Circle } from \"react-leaflet\";\nimport { keyValueList } from \"./.fable/fable-library.3.1.5/MapUtil.js\";\nimport { CSSProp } from \"./.fable/Fable.React.7.2.0/Fable.React.Props.fs.js\";\nimport { footer } from \"./.fable/Fulma.2.10.0/Layouts/Footer.fs.js\";\nimport { Option as Option_3, content } from \"./.fable/Fulma.2.10.0/Elements/Content.fs.js\";\nimport { ProgramModule_mkProgram, ProgramModule_withSubscription, ProgramModule_run } from \"./.fable/Fable.Elmish.3.1.0/program.fs.js\";\nimport { Program_withReactBatched } from \"./.fable/Fable.Elmish.React.3.0.1/react.fs.js\";\n\nexport const USE_ARROWS = true;\n\nexport const animationActive = createAtom(false);\n\nexport function posOnLine(fraction, x1, y1, x2, y2) {\n    const patternInput = (x1 > x2) ? [x2, x1] : [x1, x2];\n    const x1_1 = patternInput[0];\n    const patternInput_1 = (y1 > y2) ? [y2, y1] : [y1, y2];\n    const y1_1 = patternInput_1[0];\n    return [x1_1 + (fraction * (patternInput[1] - x1_1)), y1_1 + (fraction * (patternInput_1[1] - y1_1))];\n}\n\nexport function arrowPolyLine(headlen, fromx, fromy, tox, toy) {\n    const patternInput = posOnLine(0.5, fromx, fromy, tox, toy);\n    const arrowy = patternInput[1];\n    const arrowx = patternInput[0];\n    const angle = Math.atan2(toy - fromy, tox - fromx);\n    return ofArray([[arrowx - (headlen * Math.cos(angle - (3.141592653589793 / 6))), arrowy - (headlen * Math.sin(angle - (3.141592653589793 / 6)))], [arrowx, arrowy], [arrowx - (headlen * Math.cos(angle + (3.141592653589793 / 6))), arrowy - (headlen * Math.sin(angle + (3.141592653589793 / 6)))]]);\n}\n\nexport class Marker extends Record {\n    constructor(Latitude, Longitude, Ident, Title, Weight, Year, Properties) {\n        super();\n        this.Latitude = Latitude;\n        this.Longitude = Longitude;\n        this.Ident = Ident;\n        this.Title = Title;\n        this.Weight = Weight;\n        this.Year = (Year | 0);\n        this.Properties = Properties;\n    }\n}\n\nexport function Marker$reflection() {\n    return record_type(\"Client.Marker\", [], Marker, () => [[\"Latitude\", float64_type], [\"Longitude\", float64_type], [\"Ident\", string_type], [\"Title\", string_type], [\"Weight\", float64_type], [\"Year\", int32_type], [\"Properties\", list_type(string_type)]]);\n}\n\nexport class PropertyDef extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"EdgeProperty\", \"VectorProperty\"];\n    }\n}\n\nexport function PropertyDef$reflection() {\n    return union_type(\"Client.PropertyDef\", [], PropertyDef, () => [[[\"Item\", PolylineProps$reflection()]], [[\"Item\", CircleProps$reflection()]]]);\n}\n\nexport const grey = \"#848484\";\n\nexport const propertiesDef = ofSeq([[\"edgeColorGrey\", new PropertyDef(0, new PolylineProps(4, grey))], [\"nodeColorGrey\", new PropertyDef(1, new CircleProps(4, grey))]]);\n\nexport const nl = \"\\n\";\n\nexport function tryInt(s) {\n    let patternInput;\n    let outArg = 0;\n    patternInput = [tryParse(s, 511, false, 32, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (patternInput[0]) {\n        return patternInput[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function tryFloat(s) {\n    let patternInput;\n    let outArg = 0;\n    patternInput = [tryParse_1(s, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (patternInput[0]) {\n        return patternInput[1];\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function split(sep, s) {\n    return ofSeq_1(map((s_1) => s_1.trim(), split_1(s, [sep], null, 0)));\n}\n\nexport function lines(s) {\n    return split(nl, s);\n}\n\nexport function columns(s) {\n    return split(\"\\t\", s);\n}\n\nexport function parse(s) {\n    return map_1((s_2) => columns(s_2), lines(s));\n}\n\nexport function mkData(s) {\n    const defaultYear = 0;\n    const xs = parse(s);\n    const yMin = min(choose((x) => bind((s_1) => tryInt(s_1), tryItem(2, x)), xs), {\n        Compare: (x_1, y) => comparePrimitives(x_1, y),\n    }) | 0;\n    const yMax = max(choose((x_2) => bind((s_2) => tryInt(s_2), tryItem(2, x_2)), xs), {\n        Compare: (x_3, y_1) => comparePrimitives(x_3, y_1),\n    }) | 0;\n    return choose((x_6) => {\n        let s_4;\n        if (length(x_6) < 6) {\n            return void 0;\n        }\n        else {\n            const lnglat = split(\",\", (s_4 = item(1, x_6), (s_4.trim() === \"\") ? \"50.0872, 14.4211\" : s_4.trim()));\n            const lng = item(0, lnglat);\n            const lat = item(1, lnglat);\n            const year = defaultArg(tryInt(item(2, x_6)), defaultYear) | 0;\n            const loc = item(0, x_6);\n            const name = item(3, x_6);\n            const weight = (year - yMin) / (yMax - yMin);\n            let title;\n            const arg50 = defaultArg(tryItem(5, x_6), \"\");\n            const arg40 = defaultArg(tryItem(4, x_6), \"\");\n            title = toText(printf(\"%s - %s - %i - %s %s\"))(loc)(name)(year)(arg40)(arg50);\n            const ident = defaultArg(map_2((y_3) => toText(printf(\"%s - %s\"))(name)(y_3), tryItem(6, x_6)), name);\n            const defProp = (year === defaultYear) ? \"nodeColorGrey\" : \"\";\n            const properties = split(\",\", defaultArg(tryItem(7, x_6), defProp));\n            return new Marker(parse_1(lat), parse_1(lng), ident, title, weight, year, properties);\n        }\n    }, sortBy((x_4) => bind((s_3) => tryInt(s_3), tryItem(2, x_4)), xs, {\n        Compare: (x_5, y_2) => compare(x_5, y_2),\n    }));\n}\n\nexport class Page extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Map\", \"LoadData\", \"LocationTree\"];\n    }\n}\n\nexport function Page$reflection() {\n    return union_type(\"Client.Page\", [], Page, () => [[], [], []]);\n}\n\nexport class Animation extends Record {\n    constructor(From, Range$, End, Step, Interval) {\n        super();\n        this.From = (From | 0);\n        this.Range = (Range$ | 0);\n        this.End = (End | 0);\n        this.Step = (Step | 0);\n        this.Interval = Interval;\n    }\n}\n\nexport function Animation$reflection() {\n    return record_type(\"Client.Animation\", [], Animation, () => [[\"From\", int32_type], [\"Range\", int32_type], [\"End\", int32_type], [\"Step\", int32_type], [\"Interval\", float64_type]]);\n}\n\nexport class MapInfo extends Record {\n    constructor(Zoom, Center) {\n        super();\n        this.Zoom = Zoom;\n        this.Center = Center;\n    }\n}\n\nexport function MapInfo$reflection() {\n    return record_type(\"Client.MapInfo\", [], MapInfo, () => [[\"Zoom\", float64_type], [\"Center\", tuple_type(float64_type, float64_type)]]);\n}\n\nexport class Msg extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"SetPage\", \"SetRawData\", \"LoadData\", \"SetAnimation\", \"AnimationStep\", \"MapInfo\"];\n    }\n}\n\nexport function Msg$reflection() {\n    return union_type(\"Client.Msg\", [], Msg, () => [[[\"Item\", Page$reflection()]], [[\"Item\", string_type]], [], [[\"Item\", Animation$reflection()]], [], [[\"Item\", MapInfo$reflection()]]]);\n}\n\nexport class Model extends Record {\n    constructor(Page, RawData, Markers, Edges, Animation, MapInfo) {\n        super();\n        this.Page = Page;\n        this.RawData = RawData;\n        this.Markers = Markers;\n        this.Edges = Edges;\n        this.Animation = Animation;\n        this.MapInfo = MapInfo;\n    }\n}\n\nexport function Model$reflection() {\n    return record_type(\"Client.Model\", [], Model, () => [[\"Page\", Page$reflection()], [\"RawData\", string_type], [\"Markers\", list_type(Marker$reflection())], [\"Edges\", list_type(tuple_type(Marker$reflection(), Marker$reflection()))], [\"Animation\", option_type(Animation$reflection())], [\"MapInfo\", option_type(MapInfo$reflection())]]);\n}\n\nexport class GraphType extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Mermaid\", \"GraphViz\"];\n    }\n}\n\nexport function GraphType$reflection() {\n    return union_type(\"Client.GraphType\", [], GraphType, () => [[], []]);\n}\n\nexport function toGraph(t, model) {\n    const headerCode = (t.tag === 1) ? \"digraph G {\" : \"graph TD\";\n    const footerCode = (t.tag === 1) ? \"}\" : \"\";\n    const edges = model.Edges;\n    const label_1 = (n) => head(split(\" - \", head(lines(n.Title))));\n    let nodeLabels;\n    const e = collect((tupledArg) => ofArray([tupledArg[0], tupledArg[1]]), edges);\n    const m = ofSeq(mapIndexed((i, n_2) => [n_2, toText(printf(\"N%i\"))(i)], distinct(map(label_1, e), {\n        Equals: (x_2, y_2) => (x_2 === y_2),\n        GetHashCode: (x_2) => stringHash(x_2),\n    })));\n    nodeLabels = ofSeq(map((n_3) => [n_3, FSharpMap__get_Item(m, label_1(n_3))], e));\n    return join(nl, concat([singleton(headerCode), sort(map_1((tupledArg_1) => {\n        const g_1 = map((tuple_1) => tuple_1[0], tupledArg_1[1]);\n        const n_4 = head(g_1);\n        const level = (~(~(n_4.Weight * 100))) | 0;\n        const tooltip = join(\"\\\\n\", distinct(collect((n_1) => split(nl, n_1.Title), g_1), {\n            Equals: (x_4, y_4) => (x_4 === y_4),\n            GetHashCode: (x_4) => stringHash(x_4),\n        }));\n        const label = head(lines(label_1(n_4)));\n        const node = tupledArg_1[0];\n        if (t.tag === 1) {\n            return toText(printf(\"%s [label=\\\"%s\\\", tooltip=\\\"%s\\\", level=%i];\"))(node)(label)(tooltip)(level);\n        }\n        else {\n            return toText(printf(\"%s(%s)\"))(node)(label);\n        }\n    }, groupBy((tuple) => tuple[1], toList(nodeLabels), {\n        Equals: (x_3, y_3) => (x_3 === y_3),\n        GetHashCode: (x_3) => stringHash(x_3),\n    })), {\n        Compare: (x_5, y_5) => comparePrimitives(x_5, y_5),\n    }), map_1((tupledArg_2) => {\n        const y = FSharpMap__get_Item(nodeLabels, tupledArg_2[0]);\n        const x = FSharpMap__get_Item(nodeLabels, tupledArg_2[1]);\n        if (t.tag === 1) {\n            return toText(printf(\"%s -\\u003e %s;\"))(x)(y);\n        }\n        else {\n            return toText(printf(\"%s --\\u003e %s\"))(x)(y);\n        }\n    }, edges), singleton(footerCode)]));\n}\n\nexport function loadData(model) {\n    const nodes = mkData(model.RawData);\n    const merge = (g) => {\n        const x = head(g);\n        return new Marker(x.Latitude, x.Longitude, \"\", join(nl, map((x_1) => x_1.Title, g)), min_1(map((x_2) => x_2.Weight, g), {\n            Compare: (x_3, y) => comparePrimitives(x_3, y),\n        }), min_1(map((x_4) => x_4.Year, g), {\n            Compare: (x_5, y_1) => comparePrimitives(x_5, y_1),\n        }), collect_1((x_6) => x_6.Properties, g));\n    };\n    const data = map_1((tupledArg) => merge(tupledArg[1]), groupBy((x_7) => [x_7.Latitude, x_7.Longitude], nodes, {\n        Equals: (x_8, y_2) => equalArrays(x_8, y_2),\n        GetHashCode: (x_8) => arrayHash(x_8),\n    }));\n    const edges = map_1((tupledArg_7) => {\n        const g_3 = tupledArg_7[1];\n        const xs = map_1((tuple_1) => tuple_1[0], g_3);\n        const ys = map_1((tuple_2) => tuple_2[1], g_3);\n        return [merge(xs), merge(ys)];\n    }, groupBy((tupledArg_6) => {\n        const x_14 = tupledArg_6[0];\n        const y_7 = tupledArg_6[1];\n        return [x_14.Latitude, x_14.Longitude, y_7.Latitude, y_7.Longitude];\n    }, map_1((tuple) => tuple[1], map_1((tupledArg_4) => minBy((tupledArg_5) => tupledArg_5[0][1], tupledArg_4[1], {\n        Compare: (x_13, y_6) => comparePrimitives(x_13, y_6),\n    }), groupBy((tupledArg_3) => tupledArg_3[0][0], filter((tupledArg_2) => {\n        const _arg5 = tupledArg_2[1];\n        const y_4 = _arg5[1];\n        const x_11 = _arg5[0];\n        if (x_11.Ident === y_4.Ident) {\n            return !equalArrays([x_11.Latitude, x_11.Longitude], [y_4.Latitude, y_4.Longitude]);\n        }\n        else {\n            return false;\n        }\n    }, filter((tupledArg_1) => {\n        const _arg2 = tupledArg_1[0];\n        return _arg2[0] < _arg2[1];\n    }, collect_1((x_10) => x_10, mapIndexed_1((i, x_9) => mapIndexed_1((j, y_3) => [[i, j], [x_9, y_3]], nodes), nodes)))), {\n        Equals: (x_12, y_5) => (x_12 === y_5),\n        GetHashCode: (x_12) => numberHash(x_12),\n    }))), {\n        Equals: (x_15, y_8) => equalArrays(x_15, y_8),\n        GetHashCode: (x_15) => arrayHash(x_15),\n    }));\n    return new Model(model.Page, model.RawData, ofSeq_1(data), edges, model.Animation, model.MapInfo);\n}\n\nexport function init() {\n    return [loadData(new Model(new Page(0), data_1, empty(), empty(), void 0, void 0)), empty()];\n}\n\nexport function initAnimation(m) {\n    return new Animation(min_1(map((m_1) => m_1.Year, m.Markers), {\n        Compare: (x, y) => comparePrimitives(x, y),\n    }), 75, max_1(map((m_2) => m_2.Year, m.Markers), {\n        Compare: (x_1, y_1) => comparePrimitives(x_1, y_1),\n    }), 1, 0.01);\n}\n\nexport function setAnimationTick(t, dispatch) {\n    void window.setInterval((_arg1) => {\n        if (animationActive()) {\n            dispatch(new Msg(4));\n        }\n    }, ~(~(t * 1000)));\n}\n\nexport function update(msg, currentModel) {\n    let inputRecord;\n    if (msg.tag === 1) {\n        return [new Model(currentModel.Page, msg.fields[0], currentModel.Markers, currentModel.Edges, currentModel.Animation, currentModel.MapInfo), Cmd_none()];\n    }\n    else if (msg.tag === 2) {\n        return [(inputRecord = loadData(currentModel), new Model(new Page(0), inputRecord.RawData, inputRecord.Markers, inputRecord.Edges, inputRecord.Animation, inputRecord.MapInfo)), Cmd_none()];\n    }\n    else if (msg.tag === 3) {\n        animationActive(true, true);\n        return [new Model(currentModel.Page, currentModel.RawData, currentModel.Markers, currentModel.Edges, msg.fields[0], currentModel.MapInfo), Cmd_none()];\n    }\n    else if (msg.tag === 4) {\n        let m;\n        const matchValue = currentModel.Animation;\n        if (matchValue != null) {\n            const a_1 = matchValue;\n            const a$0027 = new Animation(a_1.From + a_1.Step, a_1.Range, a_1.End, a_1.Step, a_1.Interval);\n            m = (new Model(currentModel.Page, currentModel.RawData, currentModel.Markers, currentModel.Edges, (a$0027.From > a$0027.End) ? (void 0) : a$0027, currentModel.MapInfo));\n        }\n        else {\n            m = currentModel;\n        }\n        animationActive(m.Animation != null, true);\n        return [m, Cmd_none()];\n    }\n    else if (msg.tag === 5) {\n        return [new Model(currentModel.Page, currentModel.RawData, currentModel.Markers, currentModel.Edges, currentModel.Animation, msg.fields[0]), Cmd_none()];\n    }\n    else if (msg.fields[0].tag === 1) {\n        return [new Model(new Page(1), currentModel.RawData, currentModel.Markers, currentModel.Edges, currentModel.Animation, currentModel.MapInfo), Cmd_none()];\n    }\n    else if (msg.fields[0].tag === 2) {\n        return [new Model(new Page(2), currentModel.RawData, currentModel.Markers, currentModel.Edges, currentModel.Animation, currentModel.MapInfo), Cmd_none()];\n    }\n    else {\n        return [new Model(new Page(0), currentModel.RawData, currentModel.Markers, currentModel.Edges, currentModel.Animation, currentModel.MapInfo), Cmd_none()];\n    }\n}\n\nexport const safeComponents = (() => {\n    const components = react.createElement(\"div\", {}, \"Powered by: \", react.createElement(\"a\", {\n        href: \"http://fable.io\",\n    }, \"Fable\"), \", \", react.createElement(\"a\", {\n        href: \"https://elmish.github.io/elmish/\",\n    }, \"Elmish\"), \", \", react.createElement(\"a\", {\n        href: \"https://mangelmaxime.github.io/Fulma\",\n    }, \"Fulma\"), \", \", react.createElement(\"a\", {\n        href: \"https://leafletjs.com/\",\n    }, \"Leaflet\"));\n    return react.createElement(\"p\", {}, react.createElement(\"strong\", {}, \"AncestorsMap\"), \" project by Jindřich Ivánek, GNU General Public License v3.0. \", components);\n})();\n\nexport function button(txt, onClick) {\n    return button_1(ofArray([new Option(2), new Option(0, new Color_IColor(4)), new Option(17, onClick)]), singleton(txt));\n}\n\nexport const mapRef = createAtom(void 0);\n\nexport function view(model, dispatch) {\n    let matchValue_2, matchValue_3, getColor, getTitle, opacity, zoomDynSize, getNumberOfLines, maxNumberOfLines, minNumberOfLines, markers, edges, opacity_1, dist, mapInfo, matchValue_1, center, m_2, info, updateInfo, props_25;\n    return react.createElement(\"div\", {}, navbar(singleton(new Option_1(0, new Color_IColor(4))), ofArray([Brand_div(empty(), singleton(react.createElement(\"div\", {}, h2(empty())(singleton(title_1))))), Start_div(empty(), singleton(Item_div(empty(), singleton((matchValue_2 = model.Page, (matchValue_2.tag === 2) ? button(\"Back\", (_arg2_1) => {\n        dispatch(new Msg(2));\n    }) : ((matchValue_2.tag === 0) ? columns_1(ofArray([new Option_2(9, \"is-variable\"), new Option_2(9, \"is-1\")]), ofArray([column(empty(), singleton(button(\"Load Data\", (_arg3) => {\n        dispatch(new Msg(0, new Page(1)));\n    }))), column(empty(), singleton(button(\"Location Tree\", (_arg4) => {\n        dispatch(new Msg(0, new Page(2)));\n    }))), column(empty(), singleton(button(\"Animate\", (_arg5) => {\n        dispatch(new Msg(3, initAnimation(model)));\n    }))), column(empty(), singleton(defaultArg(map_2((a) => {\n        const arg20_1 = (a.From + a.Range) | 0;\n        return toText(printf(\"%i - %i\"))(a.From)(arg20_1);\n    }, model.Animation), \"\")))])) : button(\"Apply\", (_arg1_1) => {\n        dispatch(new Msg(2));\n    })))))))])), (matchValue_3 = model.Page, (matchValue_3.tag === 1) ? columns_1(empty(), singleton(column(empty(), ofArray([\"Data format (delimeter TAB): location | GPS(lat,lng) | year | name | note | type\", react.createElement(\"textarea\", {\n        defaultValue: model.RawData,\n        onChange: (ev) => {\n            dispatch(new Msg(1, ev.target.value));\n        },\n        rows: 20,\n        cols: 120,\n    })])))) : ((matchValue_3.tag === 2) ? columns_1(empty(), singleton(column(empty(), ofArray([\"GraphViz graph format, copy paste to \", react.createElement(\"a\", {\n        href: \"https://dreampuf.github.io/GraphvizOnline\",\n    }, \"GraphvizOnline\"), react.createElement(\"textarea\", {\n        defaultValue: toGraph(new GraphType(1), model),\n        rows: 20,\n        cols: 120,\n    })])))) : (getColor = ((weight) => {\n        let tupledArg;\n        const tupledArg_2 = [0, 0, 0];\n        const tupledArg_1 = [400, 50, 0];\n        const step = weight;\n        const linStep = (i, x, y) => (x + (i * (y - x)));\n        tupledArg = [linStep(step, tupledArg_1[0], tupledArg_2[0]), linStep(step, tupledArg_1[1], tupledArg_2[1]), linStep(step, tupledArg_1[2], tupledArg_2[2])];\n        const arg30 = (~(~tupledArg[2])) | 0;\n        const arg20 = (~(~tupledArg[1])) | 0;\n        const arg10 = (~(~tupledArg[0])) | 0;\n        return toText(printf(\"rgb(%i,%i,%i)\"))(arg10)(arg20)(arg30);\n    }), (getTitle = ((x_1) => react.createElement(\"div\", {}, ...map_1((l) => react.createElement(\"p\", {}, l), lines(x_1)))), (opacity = ((m) => {\n        const matchValue = model.Animation;\n        if (matchValue == null) {\n            return 1;\n        }\n        else {\n            const r_2 = matchValue.Range | 0;\n            const from = matchValue.From | 0;\n            if ((from <= m.Year) ? (m.Year <= (from + r_2)) : false) {\n                return 1;\n            }\n            else {\n                return max_2((x_4, y_2) => comparePrimitives(x_4, y_2), 0.01, 0.75 - ((max_2((x_2, y_1) => comparePrimitives(x_2, y_1), from - m.Year, m.Year - (from + r_2)) / r_2) * 0.5));\n            }\n        }\n    }), (zoomDynSize = ((x_5) => (x_5 * Math.pow(1.8, 12 - defaultArg(map_2((x_6) => x_6.Zoom, model.MapInfo), 12)))), (getNumberOfLines = ((x_7) => length(lines(x_7.Title))), (maxNumberOfLines = max_1(map(getNumberOfLines, model.Markers), {\n        Compare: (x_8, y_3) => comparePrimitives(x_8, y_3),\n    }), (minNumberOfLines = min_1(map(getNumberOfLines, model.Markers), {\n        Compare: (x_9, y_4) => comparePrimitives(x_9, y_4),\n    }), (markers = map((x_12) => {\n        let minValue;\n        const extraProps = choose((_arg1) => {\n            if (_arg1.tag === 1) {\n                return _arg1.fields[0];\n            }\n            else {\n                return void 0;\n            }\n        }, choose((p) => tryFind(p, propertiesDef), x_12.Properties));\n        const props_9 = append(ofArray([CircleProps_Custom_433E080(\"center\", [x_12.Longitude, x_12.Latitude]), new CircleProps(17, zoomDynSize((minValue = 200, minValue + ((800 - minValue) * Math.sqrt((getNumberOfLines(x_12) - minNumberOfLines) / max_2((x_11, y_5) => comparePrimitives(x_11, y_5), 1, maxNumberOfLines - minNumberOfLines)))))), new CircleProps(4, getColor(x_12.Weight)), new CircleProps(6, opacity(x_12))]), extraProps);\n        return react.createElement(Circle, keyValueList(props_9, 1), react.createElement(Popup, {}, getTitle(x_12.Title)), react.createElement(Tooltip, {\n            sticky: true,\n        }, getTitle(x_12.Title)));\n    }, filter_1((m_1) => (opacity(m_1) > 0.01), model.Markers)), (edges = (opacity_1 = ((tupledArg_3) => ((opacity(tupledArg_3[0]) + opacity(tupledArg_3[1])) / 2)), collect_1((tupledArg_4) => {\n        let props_19, props_21;\n        const x_14 = tupledArg_4[0];\n        const y_7 = tupledArg_4[1];\n        const opacity_2 = new PolylineProps(6, opacity_1([x_14, y_7]));\n        const extraProps_1 = choose((_arg2) => {\n            if (_arg2.tag === 0) {\n                return _arg2.fields[0];\n            }\n            else {\n                return void 0;\n            }\n        }, choose((p_2) => tryFind(p_2, propertiesDef), append(x_14.Properties, y_7.Properties)));\n        return cons((props_19 = append(ofArray([new PolylineProps(29, [[x_14.Longitude, x_14.Latitude], [y_7.Longitude, y_7.Latitude]]), new PolylineProps(4, getColor(max_2((x_15, y_8) => comparePrimitives(x_15, y_8), x_14.Weight, y_7.Weight))), opacity_2]), extraProps_1), react.createElement(Polyline, keyValueList(props_19, 1), react.createElement(Popup, {}, react.createElement(\"div\", {}, getTitle(x_14.Title), getTitle(y_7.Title))), react.createElement(Tooltip, {\n            sticky: true,\n        }, react.createElement(\"div\", {}, getTitle(x_14.Title), getTitle(y_7.Title))))), USE_ARROWS ? singleton((props_21 = append(ofArray([new PolylineProps(29, Array.from(map_1((x_16) => x_16, arrowPolyLine(zoomDynSize(0.003), x_14.Longitude, x_14.Latitude, y_7.Longitude, y_7.Latitude)))), new PolylineProps(4, getColor(max_2((x_17, y_9) => comparePrimitives(x_17, y_9), x_14.Weight, y_7.Weight))), opacity_2]), extraProps_1), react.createElement(Polyline, keyValueList(props_21, 1)))) : empty());\n    }, filter((e) => (opacity_1(e) > 0.01), model.Edges))), (dist = ((x_19, y_11) => Math.sqrt(Math.pow(x_19.Longitude - y_11.Longitude, 2) + Math.pow(x_19.Latitude - y_11.Latitude, 2))), (mapInfo = (matchValue_1 = model.MapInfo, (matchValue_1 != null) ? matchValue_1 : (center = (m_2 = minBy((arg10_1) => ((y_12) => sumBy((x_20) => dist(x_20, y_12), model.Markers, {\n        GetZero: () => 0,\n        Add: (x_21, y_13) => (x_21 + y_13),\n    }))(arg10_1), model.Markers, {\n        Compare: (x_22, y_14) => comparePrimitives(x_22, y_14),\n    }), [m_2.Longitude, m_2.Latitude]), (info = (new MapInfo(12 - (Math.log(max_1(collect((x_23) => map((y_15) => dist(x_23, y_15), model.Markers), model.Markers), {\n        Compare: (x_24, y_16) => comparePrimitives(x_24, y_16),\n    }) * 4) / Math.log(2)), center)), (dispatch(new Msg(5, info)), info)))), (updateInfo = ((m_3) => {\n        console.log(some(m_3));\n        dispatch(new Msg(5, new MapInfo(m_3.viewport.zoom, [m_3.viewport.center[0], m_3.viewport.center[1]])));\n    }), columns_1(empty(), singleton(column(empty(), singleton((props_25 = ofArray([new MapProps(36, mapInfo.Center), new MapProps(44, true), new MapProps(42, mapInfo.Zoom), new MapProps(4, 0.1), new MapProps(38, \"myMap\"), MapProps_Style_7213C43C(singleton(new CSSProp(189, \"650px\"))), new MapProps(88, (m_4) => {\n        mapRef(some(m_4), true);\n    }), new MapProps(75, (x_25) => {\n        iterate(updateInfo, toArray(mapRef()));\n    }), new MapProps(73, (x_26) => {\n        iterate(updateInfo, toArray(mapRef()));\n    }), new MapProps(62, (x_27) => {\n        iterate(updateInfo, toArray(mapRef()));\n    })]), react.createElement(Map$, keyValueList(props_25, 1), ...ofSeq_1(delay(() => append_1(singleton_1(react.createElement(TileLayer, {\n        attribution: \"\\u0026copy; \\u003ca href=\\\"https://www.openstreetmap.org/copyright\\\"\\u003eOpenStreetMap\\u003c/a\\u003e contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    })), delay(() => append_1(markers, delay(() => edges)))))))))))))))))))))))))), footer(empty(), singleton(content(singleton(new Option_3(3, singleton(new Modifier_IModifier(5, new Screen(0), new TextAlignment_Option(0))))), ofArray([safeComponents, footer_1])))));\n}\n\nProgramModule_run(Program_withReactBatched(\"elmish-app\", ProgramModule_withSubscription((_arg1) => Cmd_ofSub((dispatch_1) => {\n    setAnimationTick(0.1, dispatch_1);\n}), ProgramModule_mkProgram(init, (msg, currentModel) => update(msg, currentModel), (model, dispatch) => view(model, dispatch)))));\n\nexport function main() {\n    toConsole(printf(\"%s\"))(data_1);\n}\n\n","import { Common_parseOptions, Common_GenericOptions_Parse_9AE2F7C, Common_GenericOptions__ToReactElement_Z6D3CD4B7 } from \"../Common.fs.js\";\nimport * as react from \"react\";\nimport { keyValueList } from \"../../fable-library.3.1.5/MapUtil.js\";\n\nexport function footer(options, children) {\n    return Common_GenericOptions__ToReactElement_Z6D3CD4B7(Common_GenericOptions_Parse_9AE2F7C(options, (result, option) => Common_parseOptions(result, option), \"footer\"), (props, children_1) => react.createElement(\"footer\", keyValueList(props, 1), ...children_1), children);\n}\n\n"],"sourceRoot":""}